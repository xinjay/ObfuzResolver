<mapping>
  <assembly name="Assembly-CSharp" newName="" status="NotRenamed">
    <type fullName="a" newFullName="a" status="Renamed">
      <field signature="[Assembly-CSharp]a/b a" newName="b" />
      <field signature="[Assembly-CSharp]a/A A" newName="B" />
    </type>
    <type fullName="a/A" newFullName="a/A" status="Renamed" />
    <type fullName="a/b" newFullName="a/b" status="Renamed" />
    <type fullName="B" newFullName="B" status="Renamed">
      <method signature="void B::a(object, System.RuntimeFieldHandle, int)" newName="A" oldStackTraceSignature="B:a(Object, RuntimeFieldHandle, Int32)" newStackTraceSignature="B:A(Object, RuntimeFieldHandle, Int32)" />
    </type>
  </assembly>
  <assembly name="Obfus1" newName="" status="NotRenamed">
    <type fullName="AppleType" newFullName="a" status="Renamed">
      <field signature="[Obfus1]AppleType None" newName="a" />
      <field signature="[Obfus1]AppleType A" newName="b" />
      <field signature="[Obfus1]AppleType B" newName="c" />
    </type>
    <type fullName="IApple" newFullName="A" status="Renamed">
      <method signature="void IApple::Fun1([Obfus1]IApple)" newName="a" oldStackTraceSignature="IApple:Fun1()" newStackTraceSignature="A:a()" />
      <method signature="void IApple::Fun2([Obfus1]IApple, int)" newName="A" oldStackTraceSignature="IApple:Fun2(Int32)" newStackTraceSignature="A:A(Int32)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="Apple" newFullName="b" status="Renamed">
      <field signature="int x" newName="a" />
      <field signature="string y" newName="A" />
      <field signature="[Obfus1]Apple/AppleChild c" newName="b" />
      <field signature="int &lt;Value&gt;k__BackingField" newName="B" />
      <field signature="System.Action OnFire" newName="C" />
      <property signature="int Value" newName="H" />
      <event signature="System.Action OnFire" newName="i" />
      <method signature="int Apple::get_Value([Obfus1]Apple)" newName="d" oldStackTraceSignature="Apple:get_Value()" newStackTraceSignature="b:d()" />
      <method signature="void Apple::set_Value([Obfus1]Apple, int)" newName="D" oldStackTraceSignature="Apple:set_Value(Int32)" newStackTraceSignature="b:D(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Apple::add_OnFire([Obfus1]Apple, System.Action)" newName="e" oldStackTraceSignature="Apple:add_OnFire(Action)" newStackTraceSignature="b:e(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Apple::remove_OnFire([Obfus1]Apple, System.Action)" newName="E" oldStackTraceSignature="Apple:remove_OnFire(Action)" newStackTraceSignature="b:E(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Apple::Start([Obfus1]Apple)" newName="f" oldStackTraceSignature="Apple:Start()" newStackTraceSignature="b:f()" />
      <method signature="void Apple::Foo([Obfus1]Apple, [Obfus1]Apple/AppleChild, int)" newName="F" oldStackTraceSignature="Apple:Foo(AppleChild, Int32)" newStackTraceSignature="b:F(B, Int32)">
        <param index="1" newName="1" />
        <param index="2" newName="1" />
      </method>
      <method signature="void Apple::Update([Obfus1]Apple)" newName="g" oldStackTraceSignature="Apple:Update()" newStackTraceSignature="b:g()" />
      <method signature="int Apple::One([Obfus1]Apple)" newName="G" oldStackTraceSignature="Apple:One()" newStackTraceSignature="b:G()" />
      <method signature="void Apple::Fun1([Obfus1]Apple)" newName="a" oldStackTraceSignature="Apple:Fun1()" newStackTraceSignature="b:a()" />
      <method signature="void Apple::IApple.Fun1([Obfus1]Apple)" newName="h" oldStackTraceSignature="Apple:IApple.Fun1()" newStackTraceSignature="b:h()" />
      <method signature="void Apple::Fun2([Obfus1]Apple, int)" newName="A" oldStackTraceSignature="Apple:Fun2(Int32)" newStackTraceSignature="b:A(Int32)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="Apple/AppleChild" newFullName="b/B" status="Renamed">
      <field signature="int x" newName="a" />
    </type>
    <type fullName="Apple2" newFullName="c" status="Renamed">
      <method signature="int Apple2::One([Obfus1]Apple2)" newName="G" oldStackTraceSignature="Apple2:One()" newStackTraceSignature="c:G()" />
      <method signature="void Apple2::Fun1([Obfus1]Apple2)" newName="a" oldStackTraceSignature="Apple2:Fun1()" newStackTraceSignature="c:a()" />
      <method signature="void Apple2::Fun2([Obfus1]Apple2, int)" newName="A" oldStackTraceSignature="Apple2:Fun2(Int32)" newStackTraceSignature="c:A(Int32)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="ExternalTypeUtil" newFullName="C" status="Renamed">
      <method signature="[UnityEngine.CoreModule]UnityEngine.Vector2 ExternalTypeUtil::NewVector2([Obfus1]cfg.vec2)" newName="a" oldStackTraceSignature="ExternalTypeUtil:NewVector2(vec2)" newStackTraceSignature="C:a(S)">
        <param index="1" newName="1" />
      </method>
      <method signature="[UnityEngine.CoreModule]UnityEngine.Vector3 ExternalTypeUtil::NewVector3([Obfus1]cfg.vec3)" newName="A" oldStackTraceSignature="ExternalTypeUtil:NewVector3(vec3)" newStackTraceSignature="C:A(t)">
        <param index="1" newName="1" />
      </method>
      <method signature="[UnityEngine.CoreModule]UnityEngine.Vector4 ExternalTypeUtil::NewVector4([Obfus1]cfg.vec4)" newName="b" oldStackTraceSignature="ExternalTypeUtil:NewVector4(vec4)" newStackTraceSignature="C:b(T)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="Hello" newFullName="" status="NotRenamed">
      <field signature="int z" newName="a" />
      <field signature="[Obfus1]Item2 item2" newName="A" />
      <method signature="void Hello::Sum([Obfus1]Hello)" newName="b" oldStackTraceSignature="Hello:Sum()" newStackTraceSignature="Hello:b()" />
    </type>
    <type fullName="Item" newFullName="" status="NotRenamed">
      <field signature="int x" newName="a" />
    </type>
    <type fullName="Item2" newFullName="d" status="Renamed">
      <field signature="int id" newName="a" />
      <field signature="int x" newName="A" />
    </type>
    <type fullName="TestAttributes" newFullName="D" status="Renamed">
      <field signature="int x1" newName="a" />
      <field signature="int x2" newName="A" />
      <field signature="int x3" newName="b" />
      <field signature="int x4" newName="B" />
      <field signature="int x5" newName="c" />
      <field signature="int b1" newName="C" />
      <field signature="int b2" newName="d" />
      <field signature="int c1" newName="D" />
      <field signature="int c2" newName="e" />
      <field signature="int c3" newName="E" />
      <field signature="int c4" newName="f" />
      <field signature="int c5" newName="F" />
      <field signature="int a1" newName="g" />
      <field signature="int a2" newName="G" />
      <field signature="int a3" newName="h" />
      <field signature="int a4" newName="H" />
      <field signature="int a5" newName="i" />
    </type>
    <type fullName="TestRenameAttribute" newFullName="e" status="Renamed">
      <field signature="System.Type Klass" newName="a" />
      <field signature="System.Type[] &lt;Klasses&gt;k__BackingField" newName="A" />
      <field signature="[Obfus1]AppleType &lt;AppleType&gt;k__BackingField" newName="b" />
      <field signature="[Obfus1]AppleType[] &lt;AppleTypes&gt;k__BackingField" newName="B" />
      <field signature="object &lt;Value&gt;k__BackingField" newName="c" />
      <field signature="object[] &lt;Values&gt;k__BackingField" newName="C" />
      <property signature="System.Type[] Klasses" newName="i" />
      <property signature="[Obfus1]AppleType AppleType" newName="I" />
      <property signature="[Obfus1]AppleType[] AppleTypes" newName="j" />
      <property signature="object Value" newName="J" />
      <property signature="object[] Values" newName="k" />
      <method signature="System.Type[] TestRenameAttribute::get_Klasses([Obfus1]TestRenameAttribute)" newName="d" oldStackTraceSignature="TestRenameAttribute:get_Klasses()" newStackTraceSignature="e:d()" />
      <method signature="void TestRenameAttribute::set_Klasses([Obfus1]TestRenameAttribute, System.Type[])" newName="D" oldStackTraceSignature="TestRenameAttribute:set_Klasses(Type[])" newStackTraceSignature="e:D(Type[])">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]AppleType TestRenameAttribute::get_AppleType([Obfus1]TestRenameAttribute)" newName="e" oldStackTraceSignature="TestRenameAttribute:get_AppleType()" newStackTraceSignature="e:e()" />
      <method signature="void TestRenameAttribute::set_AppleType([Obfus1]TestRenameAttribute, [Obfus1]AppleType)" newName="E" oldStackTraceSignature="TestRenameAttribute:set_AppleType(AppleType)" newStackTraceSignature="e:E(a)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]AppleType[] TestRenameAttribute::get_AppleTypes([Obfus1]TestRenameAttribute)" newName="f" oldStackTraceSignature="TestRenameAttribute:get_AppleTypes()" newStackTraceSignature="e:f()" />
      <method signature="void TestRenameAttribute::set_AppleTypes([Obfus1]TestRenameAttribute, [Obfus1]AppleType[])" newName="F" oldStackTraceSignature="TestRenameAttribute:set_AppleTypes(AppleType[])" newStackTraceSignature="e:F(a[])">
        <param index="1" newName="1" />
      </method>
      <method signature="object TestRenameAttribute::get_Value([Obfus1]TestRenameAttribute)" newName="g" oldStackTraceSignature="TestRenameAttribute:get_Value()" newStackTraceSignature="e:g()" />
      <method signature="void TestRenameAttribute::set_Value([Obfus1]TestRenameAttribute, object)" newName="G" oldStackTraceSignature="TestRenameAttribute:set_Value(Object)" newStackTraceSignature="e:G(Object)">
        <param index="1" newName="1" />
      </method>
      <method signature="object[] TestRenameAttribute::get_Values([Obfus1]TestRenameAttribute)" newName="h" oldStackTraceSignature="TestRenameAttribute:get_Values()" newStackTraceSignature="e:h()" />
      <method signature="void TestRenameAttribute::set_Values([Obfus1]TestRenameAttribute, object[])" newName="H" oldStackTraceSignature="TestRenameAttribute:set_Values(Object[])" newStackTraceSignature="e:H(Object[])">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="Obfus1.FullObfuscate" newFullName="a.E" status="Renamed">
      <field signature="int x1" newName="a" />
      <field signature="int x2" newName="A" />
      <field signature="int x3" newName="b" />
      <field signature="int y1" newName="B" />
      <field signature="int y2" newName="c" />
      <field signature="int y3" newName="C" />
      <field signature="int &lt;X0&gt;k__BackingField" newName="d" />
      <field signature="int &lt;X1&gt;k__BackingField" newName="D" />
      <field signature="int &lt;X2&gt;k__BackingField" newName="e" />
      <field signature="int &lt;X3&gt;k__BackingField" newName="E" />
      <field signature="System.Action A1" newName="f" />
      <field signature="System.Action A2" newName="F" />
      <field signature="System.Action A3" newName="g" />
      <field signature="System.Action A4" newName="G" />
      <property signature="int X0" newName="r" />
      <property signature="int X1" newName="R" />
      <property signature="int X2" newName="s" />
      <property signature="int X3" newName="S" />
      <event signature="System.Action A1" newName="t" />
      <event signature="System.Action A2" newName="T" />
      <event signature="System.Action A3" newName="u" />
      <event signature="System.Action A4" newName="U" />
      <method signature="void Obfus1.FullObfuscate::Foo1([Obfus1]Obfus1.FullObfuscate)" newName="h" oldStackTraceSignature="Obfus1.FullObfuscate:Foo1()" newStackTraceSignature="a.E:h()" />
      <method signature="void Obfus1.FullObfuscate::Foo2([Obfus1]Obfus1.FullObfuscate)" newName="H" oldStackTraceSignature="Obfus1.FullObfuscate:Foo2()" newStackTraceSignature="a.E:H()" />
      <method signature="void Obfus1.FullObfuscate::Foo3([Obfus1]Obfus1.FullObfuscate, int)" newName="i" oldStackTraceSignature="Obfus1.FullObfuscate:Foo3(Int32)" newStackTraceSignature="a.E:i(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.FullObfuscate::Foo4([Obfus1]Obfus1.FullObfuscate, int)" newName="I" oldStackTraceSignature="Obfus1.FullObfuscate:Foo4(Int32)" newStackTraceSignature="a.E:I(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.FullObfuscate::get_X0([Obfus1]Obfus1.FullObfuscate)" newName="j" oldStackTraceSignature="Obfus1.FullObfuscate:get_X0()" newStackTraceSignature="a.E:j()" />
      <method signature="void Obfus1.FullObfuscate::set_X0([Obfus1]Obfus1.FullObfuscate, int)" newName="J" oldStackTraceSignature="Obfus1.FullObfuscate:set_X0(Int32)" newStackTraceSignature="a.E:J(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.FullObfuscate::get_X1([Obfus1]Obfus1.FullObfuscate)" newName="k" oldStackTraceSignature="Obfus1.FullObfuscate:get_X1()" newStackTraceSignature="a.E:k()" />
      <method signature="void Obfus1.FullObfuscate::set_X1([Obfus1]Obfus1.FullObfuscate, int)" newName="K" oldStackTraceSignature="Obfus1.FullObfuscate:set_X1(Int32)" newStackTraceSignature="a.E:K(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.FullObfuscate::get_X2([Obfus1]Obfus1.FullObfuscate)" newName="l" oldStackTraceSignature="Obfus1.FullObfuscate:get_X2()" newStackTraceSignature="a.E:l()" />
      <method signature="void Obfus1.FullObfuscate::set_X2([Obfus1]Obfus1.FullObfuscate, int)" newName="L" oldStackTraceSignature="Obfus1.FullObfuscate:set_X2(Int32)" newStackTraceSignature="a.E:L(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.FullObfuscate::get_X3([Obfus1]Obfus1.FullObfuscate)" newName="m" oldStackTraceSignature="Obfus1.FullObfuscate:get_X3()" newStackTraceSignature="a.E:m()" />
      <method signature="void Obfus1.FullObfuscate::set_X3([Obfus1]Obfus1.FullObfuscate, int)" newName="M" oldStackTraceSignature="Obfus1.FullObfuscate:set_X3(Int32)" newStackTraceSignature="a.E:M(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.FullObfuscate::add_A1([Obfus1]Obfus1.FullObfuscate, System.Action)" newName="n" oldStackTraceSignature="Obfus1.FullObfuscate:add_A1(Action)" newStackTraceSignature="a.E:n(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.FullObfuscate::remove_A1([Obfus1]Obfus1.FullObfuscate, System.Action)" newName="N" oldStackTraceSignature="Obfus1.FullObfuscate:remove_A1(Action)" newStackTraceSignature="a.E:N(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.FullObfuscate::add_A2([Obfus1]Obfus1.FullObfuscate, System.Action)" newName="o" oldStackTraceSignature="Obfus1.FullObfuscate:add_A2(Action)" newStackTraceSignature="a.E:o(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.FullObfuscate::remove_A2([Obfus1]Obfus1.FullObfuscate, System.Action)" newName="O" oldStackTraceSignature="Obfus1.FullObfuscate:remove_A2(Action)" newStackTraceSignature="a.E:O(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.FullObfuscate::add_A3([Obfus1]Obfus1.FullObfuscate, System.Action)" newName="p" oldStackTraceSignature="Obfus1.FullObfuscate:add_A3(Action)" newStackTraceSignature="a.E:p(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.FullObfuscate::remove_A3([Obfus1]Obfus1.FullObfuscate, System.Action)" newName="P" oldStackTraceSignature="Obfus1.FullObfuscate:remove_A3(Action)" newStackTraceSignature="a.E:P(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.FullObfuscate::add_A4([Obfus1]Obfus1.FullObfuscate, System.Action)" newName="q" oldStackTraceSignature="Obfus1.FullObfuscate:add_A4(Action)" newStackTraceSignature="a.E:q(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.FullObfuscate::remove_A4([Obfus1]Obfus1.FullObfuscate, System.Action)" newName="Q" oldStackTraceSignature="Obfus1.FullObfuscate:remove_A4(Action)" newStackTraceSignature="a.E:Q(Action)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="Obfus1.FullObfuscate/Sub1" newFullName="a.E/f" status="Renamed">
      <field signature="int x1" newName="a" />
    </type>
    <type fullName="Obfus1.FullObfuscate/Sub2" newFullName="a.E/F" status="Renamed">
      <field signature="int x1" newName="a" />
    </type>
    <type fullName="Obfus1.NotObfuscate" newFullName="a.g" status="Renamed">
      <field signature="int x1" newName="a" />
      <field signature="int x2" newName="A" />
      <field signature="int x3" newName="b" />
      <field signature="int y1" newName="B" />
      <field signature="int y2" newName="c" />
      <field signature="int y3" newName="C" />
      <field signature="int &lt;X0&gt;k__BackingField" newName="d" />
      <field signature="int &lt;X1&gt;k__BackingField" newName="D" />
      <field signature="int &lt;X2&gt;k__BackingField" newName="e" />
      <field signature="int &lt;X3&gt;k__BackingField" newName="E" />
      <field signature="System.Action A1" newName="f" />
      <field signature="System.Action A2" newName="F" />
      <field signature="System.Action A3" newName="g" />
      <field signature="System.Action A4" newName="G" />
      <property signature="int X0" newName="r" />
      <property signature="int X1" newName="R" />
      <property signature="int X2" newName="s" />
      <property signature="int X3" newName="S" />
      <event signature="System.Action A1" newName="t" />
      <event signature="System.Action A2" newName="T" />
      <event signature="System.Action A3" newName="u" />
      <event signature="System.Action A4" newName="U" />
      <method signature="void Obfus1.NotObfuscate::Foo1([Obfus1]Obfus1.NotObfuscate)" newName="h" oldStackTraceSignature="Obfus1.NotObfuscate:Foo1()" newStackTraceSignature="a.g:h()" />
      <method signature="void Obfus1.NotObfuscate::Foo2([Obfus1]Obfus1.NotObfuscate)" newName="H" oldStackTraceSignature="Obfus1.NotObfuscate:Foo2()" newStackTraceSignature="a.g:H()" />
      <method signature="void Obfus1.NotObfuscate::Foo3([Obfus1]Obfus1.NotObfuscate, int)" newName="i" oldStackTraceSignature="Obfus1.NotObfuscate:Foo3(Int32)" newStackTraceSignature="a.g:i(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscate::Foo4([Obfus1]Obfus1.NotObfuscate, int)" newName="I" oldStackTraceSignature="Obfus1.NotObfuscate:Foo4(Int32)" newStackTraceSignature="a.g:I(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscate::get_X0([Obfus1]Obfus1.NotObfuscate)" newName="j" oldStackTraceSignature="Obfus1.NotObfuscate:get_X0()" newStackTraceSignature="a.g:j()" />
      <method signature="void Obfus1.NotObfuscate::set_X0([Obfus1]Obfus1.NotObfuscate, int)" newName="J" oldStackTraceSignature="Obfus1.NotObfuscate:set_X0(Int32)" newStackTraceSignature="a.g:J(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscate::get_X1([Obfus1]Obfus1.NotObfuscate)" newName="k" oldStackTraceSignature="Obfus1.NotObfuscate:get_X1()" newStackTraceSignature="a.g:k()" />
      <method signature="void Obfus1.NotObfuscate::set_X1([Obfus1]Obfus1.NotObfuscate, int)" newName="K" oldStackTraceSignature="Obfus1.NotObfuscate:set_X1(Int32)" newStackTraceSignature="a.g:K(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscate::get_X2([Obfus1]Obfus1.NotObfuscate)" newName="l" oldStackTraceSignature="Obfus1.NotObfuscate:get_X2()" newStackTraceSignature="a.g:l()" />
      <method signature="void Obfus1.NotObfuscate::set_X2([Obfus1]Obfus1.NotObfuscate, int)" newName="L" oldStackTraceSignature="Obfus1.NotObfuscate:set_X2(Int32)" newStackTraceSignature="a.g:L(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscate::get_X3([Obfus1]Obfus1.NotObfuscate)" newName="m" oldStackTraceSignature="Obfus1.NotObfuscate:get_X3()" newStackTraceSignature="a.g:m()" />
      <method signature="void Obfus1.NotObfuscate::set_X3([Obfus1]Obfus1.NotObfuscate, int)" newName="M" oldStackTraceSignature="Obfus1.NotObfuscate:set_X3(Int32)" newStackTraceSignature="a.g:M(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscate::add_A1([Obfus1]Obfus1.NotObfuscate, System.Action)" newName="n" oldStackTraceSignature="Obfus1.NotObfuscate:add_A1(Action)" newStackTraceSignature="a.g:n(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscate::remove_A1([Obfus1]Obfus1.NotObfuscate, System.Action)" newName="N" oldStackTraceSignature="Obfus1.NotObfuscate:remove_A1(Action)" newStackTraceSignature="a.g:N(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscate::add_A2([Obfus1]Obfus1.NotObfuscate, System.Action)" newName="o" oldStackTraceSignature="Obfus1.NotObfuscate:add_A2(Action)" newStackTraceSignature="a.g:o(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscate::remove_A2([Obfus1]Obfus1.NotObfuscate, System.Action)" newName="O" oldStackTraceSignature="Obfus1.NotObfuscate:remove_A2(Action)" newStackTraceSignature="a.g:O(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscate::add_A3([Obfus1]Obfus1.NotObfuscate, System.Action)" newName="p" oldStackTraceSignature="Obfus1.NotObfuscate:add_A3(Action)" newStackTraceSignature="a.g:p(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscate::remove_A3([Obfus1]Obfus1.NotObfuscate, System.Action)" newName="P" oldStackTraceSignature="Obfus1.NotObfuscate:remove_A3(Action)" newStackTraceSignature="a.g:P(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscate::add_A4([Obfus1]Obfus1.NotObfuscate, System.Action)" newName="q" oldStackTraceSignature="Obfus1.NotObfuscate:add_A4(Action)" newStackTraceSignature="a.g:q(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscate::remove_A4([Obfus1]Obfus1.NotObfuscate, System.Action)" newName="Q" oldStackTraceSignature="Obfus1.NotObfuscate:remove_A4(Action)" newStackTraceSignature="a.g:Q(Action)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="Obfus1.NotObfuscate/Sub1" newFullName="a.g/G" status="Renamed">
      <field signature="int x1" newName="a" />
    </type>
    <type fullName="Obfus1.NotObfuscate/Sub2" newFullName="a.g/h" status="Renamed">
      <field signature="int x1" newName="a" />
    </type>
    <type fullName="Obfus1.NotObfuscateEvent" newFullName="a.H" status="Renamed">
      <field signature="int x1" newName="a" />
      <field signature="int x2" newName="A" />
      <field signature="int x3" newName="b" />
      <field signature="int y1" newName="B" />
      <field signature="int y2" newName="c" />
      <field signature="int y3" newName="C" />
      <field signature="int &lt;X0&gt;k__BackingField" newName="d" />
      <field signature="int &lt;X1&gt;k__BackingField" newName="D" />
      <field signature="int &lt;X2&gt;k__BackingField" newName="e" />
      <field signature="int &lt;X3&gt;k__BackingField" newName="E" />
      <field signature="System.Action A1" newName="f" />
      <field signature="System.Action A2" newName="F" />
      <field signature="System.Action A3" newName="g" />
      <field signature="System.Action A4" newName="G" />
      <property signature="int X0" newName="r" />
      <property signature="int X1" newName="R" />
      <property signature="int X2" newName="s" />
      <property signature="int X3" newName="S" />
      <method signature="void Obfus1.NotObfuscateEvent::Foo1([Obfus1]Obfus1.NotObfuscateEvent)" newName="h" oldStackTraceSignature="Obfus1.NotObfuscateEvent:Foo1()" newStackTraceSignature="a.H:h()" />
      <method signature="void Obfus1.NotObfuscateEvent::Foo2([Obfus1]Obfus1.NotObfuscateEvent)" newName="H" oldStackTraceSignature="Obfus1.NotObfuscateEvent:Foo2()" newStackTraceSignature="a.H:H()" />
      <method signature="void Obfus1.NotObfuscateEvent::Foo3([Obfus1]Obfus1.NotObfuscateEvent, int)" newName="i" oldStackTraceSignature="Obfus1.NotObfuscateEvent:Foo3(Int32)" newStackTraceSignature="a.H:i(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateEvent::Foo4([Obfus1]Obfus1.NotObfuscateEvent, int)" newName="I" oldStackTraceSignature="Obfus1.NotObfuscateEvent:Foo4(Int32)" newStackTraceSignature="a.H:I(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscateEvent::get_X0([Obfus1]Obfus1.NotObfuscateEvent)" newName="j" oldStackTraceSignature="Obfus1.NotObfuscateEvent:get_X0()" newStackTraceSignature="a.H:j()" />
      <method signature="void Obfus1.NotObfuscateEvent::set_X0([Obfus1]Obfus1.NotObfuscateEvent, int)" newName="J" oldStackTraceSignature="Obfus1.NotObfuscateEvent:set_X0(Int32)" newStackTraceSignature="a.H:J(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscateEvent::get_X1([Obfus1]Obfus1.NotObfuscateEvent)" newName="k" oldStackTraceSignature="Obfus1.NotObfuscateEvent:get_X1()" newStackTraceSignature="a.H:k()" />
      <method signature="void Obfus1.NotObfuscateEvent::set_X1([Obfus1]Obfus1.NotObfuscateEvent, int)" newName="K" oldStackTraceSignature="Obfus1.NotObfuscateEvent:set_X1(Int32)" newStackTraceSignature="a.H:K(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscateEvent::get_X2([Obfus1]Obfus1.NotObfuscateEvent)" newName="l" oldStackTraceSignature="Obfus1.NotObfuscateEvent:get_X2()" newStackTraceSignature="a.H:l()" />
      <method signature="void Obfus1.NotObfuscateEvent::set_X2([Obfus1]Obfus1.NotObfuscateEvent, int)" newName="L" oldStackTraceSignature="Obfus1.NotObfuscateEvent:set_X2(Int32)" newStackTraceSignature="a.H:L(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscateEvent::get_X3([Obfus1]Obfus1.NotObfuscateEvent)" newName="m" oldStackTraceSignature="Obfus1.NotObfuscateEvent:get_X3()" newStackTraceSignature="a.H:m()" />
      <method signature="void Obfus1.NotObfuscateEvent::set_X3([Obfus1]Obfus1.NotObfuscateEvent, int)" newName="M" oldStackTraceSignature="Obfus1.NotObfuscateEvent:set_X3(Int32)" newStackTraceSignature="a.H:M(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateEvent::add_A1([Obfus1]Obfus1.NotObfuscateEvent, System.Action)" newName="n" oldStackTraceSignature="Obfus1.NotObfuscateEvent:add_A1(Action)" newStackTraceSignature="a.H:n(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateEvent::remove_A1([Obfus1]Obfus1.NotObfuscateEvent, System.Action)" newName="N" oldStackTraceSignature="Obfus1.NotObfuscateEvent:remove_A1(Action)" newStackTraceSignature="a.H:N(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateEvent::add_A2([Obfus1]Obfus1.NotObfuscateEvent, System.Action)" newName="o" oldStackTraceSignature="Obfus1.NotObfuscateEvent:add_A2(Action)" newStackTraceSignature="a.H:o(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateEvent::remove_A2([Obfus1]Obfus1.NotObfuscateEvent, System.Action)" newName="O" oldStackTraceSignature="Obfus1.NotObfuscateEvent:remove_A2(Action)" newStackTraceSignature="a.H:O(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateEvent::add_A3([Obfus1]Obfus1.NotObfuscateEvent, System.Action)" newName="p" oldStackTraceSignature="Obfus1.NotObfuscateEvent:add_A3(Action)" newStackTraceSignature="a.H:p(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateEvent::remove_A3([Obfus1]Obfus1.NotObfuscateEvent, System.Action)" newName="P" oldStackTraceSignature="Obfus1.NotObfuscateEvent:remove_A3(Action)" newStackTraceSignature="a.H:P(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateEvent::add_A4([Obfus1]Obfus1.NotObfuscateEvent, System.Action)" newName="q" oldStackTraceSignature="Obfus1.NotObfuscateEvent:add_A4(Action)" newStackTraceSignature="a.H:q(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateEvent::remove_A4([Obfus1]Obfus1.NotObfuscateEvent, System.Action)" newName="Q" oldStackTraceSignature="Obfus1.NotObfuscateEvent:remove_A4(Action)" newStackTraceSignature="a.H:Q(Action)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="Obfus1.NotObfuscateEvent/Sub1" newFullName="a.H/i" status="Renamed">
      <field signature="int x1" newName="a" />
    </type>
    <type fullName="Obfus1.NotObfuscateEvent/Sub2" newFullName="a.H/I" status="Renamed">
      <field signature="int x1" newName="a" />
    </type>
    <type fullName="Obfus1.NotObfuscateField" newFullName="a.j" status="Renamed">
      <property signature="int X0" newName="k" />
      <property signature="int X1" newName="K" />
      <property signature="int X2" newName="l" />
      <property signature="int X3" newName="L" />
      <event signature="System.Action A1" newName="m" />
      <event signature="System.Action A2" newName="M" />
      <event signature="System.Action A3" newName="n" />
      <event signature="System.Action A4" newName="N" />
      <method signature="void Obfus1.NotObfuscateField::Foo1([Obfus1]Obfus1.NotObfuscateField)" newName="a" oldStackTraceSignature="Obfus1.NotObfuscateField:Foo1()" newStackTraceSignature="a.j:a()" />
      <method signature="void Obfus1.NotObfuscateField::Foo2([Obfus1]Obfus1.NotObfuscateField)" newName="A" oldStackTraceSignature="Obfus1.NotObfuscateField:Foo2()" newStackTraceSignature="a.j:A()" />
      <method signature="void Obfus1.NotObfuscateField::Foo3([Obfus1]Obfus1.NotObfuscateField, int)" newName="b" oldStackTraceSignature="Obfus1.NotObfuscateField:Foo3(Int32)" newStackTraceSignature="a.j:b(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateField::Foo4([Obfus1]Obfus1.NotObfuscateField, int)" newName="B" oldStackTraceSignature="Obfus1.NotObfuscateField:Foo4(Int32)" newStackTraceSignature="a.j:B(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscateField::get_X0([Obfus1]Obfus1.NotObfuscateField)" newName="c" oldStackTraceSignature="Obfus1.NotObfuscateField:get_X0()" newStackTraceSignature="a.j:c()" />
      <method signature="void Obfus1.NotObfuscateField::set_X0([Obfus1]Obfus1.NotObfuscateField, int)" newName="C" oldStackTraceSignature="Obfus1.NotObfuscateField:set_X0(Int32)" newStackTraceSignature="a.j:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscateField::get_X1([Obfus1]Obfus1.NotObfuscateField)" newName="d" oldStackTraceSignature="Obfus1.NotObfuscateField:get_X1()" newStackTraceSignature="a.j:d()" />
      <method signature="void Obfus1.NotObfuscateField::set_X1([Obfus1]Obfus1.NotObfuscateField, int)" newName="D" oldStackTraceSignature="Obfus1.NotObfuscateField:set_X1(Int32)" newStackTraceSignature="a.j:D(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscateField::get_X2([Obfus1]Obfus1.NotObfuscateField)" newName="e" oldStackTraceSignature="Obfus1.NotObfuscateField:get_X2()" newStackTraceSignature="a.j:e()" />
      <method signature="void Obfus1.NotObfuscateField::set_X2([Obfus1]Obfus1.NotObfuscateField, int)" newName="E" oldStackTraceSignature="Obfus1.NotObfuscateField:set_X2(Int32)" newStackTraceSignature="a.j:E(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscateField::get_X3([Obfus1]Obfus1.NotObfuscateField)" newName="f" oldStackTraceSignature="Obfus1.NotObfuscateField:get_X3()" newStackTraceSignature="a.j:f()" />
      <method signature="void Obfus1.NotObfuscateField::set_X3([Obfus1]Obfus1.NotObfuscateField, int)" newName="F" oldStackTraceSignature="Obfus1.NotObfuscateField:set_X3(Int32)" newStackTraceSignature="a.j:F(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateField::add_A1([Obfus1]Obfus1.NotObfuscateField, System.Action)" newName="g" oldStackTraceSignature="Obfus1.NotObfuscateField:add_A1(Action)" newStackTraceSignature="a.j:g(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateField::remove_A1([Obfus1]Obfus1.NotObfuscateField, System.Action)" newName="G" oldStackTraceSignature="Obfus1.NotObfuscateField:remove_A1(Action)" newStackTraceSignature="a.j:G(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateField::add_A2([Obfus1]Obfus1.NotObfuscateField, System.Action)" newName="h" oldStackTraceSignature="Obfus1.NotObfuscateField:add_A2(Action)" newStackTraceSignature="a.j:h(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateField::remove_A2([Obfus1]Obfus1.NotObfuscateField, System.Action)" newName="H" oldStackTraceSignature="Obfus1.NotObfuscateField:remove_A2(Action)" newStackTraceSignature="a.j:H(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateField::add_A3([Obfus1]Obfus1.NotObfuscateField, System.Action)" newName="i" oldStackTraceSignature="Obfus1.NotObfuscateField:add_A3(Action)" newStackTraceSignature="a.j:i(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateField::remove_A3([Obfus1]Obfus1.NotObfuscateField, System.Action)" newName="I" oldStackTraceSignature="Obfus1.NotObfuscateField:remove_A3(Action)" newStackTraceSignature="a.j:I(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateField::add_A4([Obfus1]Obfus1.NotObfuscateField, System.Action)" newName="j" oldStackTraceSignature="Obfus1.NotObfuscateField:add_A4(Action)" newStackTraceSignature="a.j:j(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateField::remove_A4([Obfus1]Obfus1.NotObfuscateField, System.Action)" newName="J" oldStackTraceSignature="Obfus1.NotObfuscateField:remove_A4(Action)" newStackTraceSignature="a.j:J(Action)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="Obfus1.NotObfuscateField/Sub1" newFullName="a.j/J" status="Renamed">
      <field signature="int x1" newName="a" />
    </type>
    <type fullName="Obfus1.NotObfuscateField/Sub2" newFullName="a.j/k" status="Renamed">
      <field signature="int x1" newName="a" />
    </type>
    <type fullName="Obfus1.NotObfuscateMethod" newFullName="a.K" status="Renamed">
      <field signature="int x1" newName="a" />
      <field signature="int x2" newName="A" />
      <field signature="int x3" newName="b" />
      <field signature="int y1" newName="B" />
      <field signature="int y2" newName="c" />
      <field signature="int y3" newName="C" />
      <field signature="int &lt;X0&gt;k__BackingField" newName="d" />
      <field signature="int &lt;X1&gt;k__BackingField" newName="D" />
      <field signature="int &lt;X2&gt;k__BackingField" newName="e" />
      <field signature="int &lt;X3&gt;k__BackingField" newName="E" />
      <field signature="System.Action A1" newName="f" />
      <field signature="System.Action A2" newName="F" />
      <field signature="System.Action A3" newName="g" />
      <field signature="System.Action A4" newName="G" />
      <property signature="int X0" newName="h" />
      <property signature="int X1" newName="H" />
      <property signature="int X2" newName="i" />
      <property signature="int X3" newName="I" />
      <event signature="System.Action A1" newName="j" />
      <event signature="System.Action A2" newName="J" />
      <event signature="System.Action A3" newName="k" />
      <event signature="System.Action A4" newName="K" />
    </type>
    <type fullName="Obfus1.NotObfuscateMethod/Sub1" newFullName="a.K/l" status="Renamed">
      <field signature="int x1" newName="a" />
    </type>
    <type fullName="Obfus1.NotObfuscateMethod/Sub2" newFullName="a.K/L" status="Renamed">
      <field signature="int x1" newName="a" />
    </type>
    <type fullName="Obfus1.NotObfuscateMethodParam" newFullName="a.m" status="Renamed">
      <field signature="int x1" newName="a" />
      <field signature="int x2" newName="A" />
      <field signature="int x3" newName="b" />
      <field signature="int y1" newName="B" />
      <field signature="int y2" newName="c" />
      <field signature="int y3" newName="C" />
      <field signature="int &lt;X0&gt;k__BackingField" newName="d" />
      <field signature="int &lt;X1&gt;k__BackingField" newName="D" />
      <field signature="int &lt;X2&gt;k__BackingField" newName="e" />
      <field signature="int &lt;X3&gt;k__BackingField" newName="E" />
      <field signature="System.Action A1" newName="f" />
      <field signature="System.Action A2" newName="F" />
      <field signature="System.Action A3" newName="g" />
      <field signature="System.Action A4" newName="G" />
      <property signature="int X0" newName="r" />
      <property signature="int X1" newName="R" />
      <property signature="int X2" newName="s" />
      <property signature="int X3" newName="S" />
      <event signature="System.Action A1" newName="t" />
      <event signature="System.Action A2" newName="T" />
      <event signature="System.Action A3" newName="u" />
      <event signature="System.Action A4" newName="U" />
      <method signature="void Obfus1.NotObfuscateMethodParam::Foo1([Obfus1]Obfus1.NotObfuscateMethodParam)" newName="h" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:Foo1()" newStackTraceSignature="a.m:h()" />
      <method signature="void Obfus1.NotObfuscateMethodParam::Foo2([Obfus1]Obfus1.NotObfuscateMethodParam)" newName="H" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:Foo2()" newStackTraceSignature="a.m:H()" />
      <method signature="void Obfus1.NotObfuscateMethodParam::Foo3([Obfus1]Obfus1.NotObfuscateMethodParam, int)" newName="i" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:Foo3(Int32)" newStackTraceSignature="a.m:i(Int32)" />
      <method signature="void Obfus1.NotObfuscateMethodParam::Foo4([Obfus1]Obfus1.NotObfuscateMethodParam, int)" newName="I" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:Foo4(Int32)" newStackTraceSignature="a.m:I(Int32)" />
      <method signature="int Obfus1.NotObfuscateMethodParam::get_X0([Obfus1]Obfus1.NotObfuscateMethodParam)" newName="j" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:get_X0()" newStackTraceSignature="a.m:j()" />
      <method signature="void Obfus1.NotObfuscateMethodParam::set_X0([Obfus1]Obfus1.NotObfuscateMethodParam, int)" newName="J" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:set_X0(Int32)" newStackTraceSignature="a.m:J(Int32)" />
      <method signature="int Obfus1.NotObfuscateMethodParam::get_X1([Obfus1]Obfus1.NotObfuscateMethodParam)" newName="k" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:get_X1()" newStackTraceSignature="a.m:k()" />
      <method signature="void Obfus1.NotObfuscateMethodParam::set_X1([Obfus1]Obfus1.NotObfuscateMethodParam, int)" newName="K" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:set_X1(Int32)" newStackTraceSignature="a.m:K(Int32)" />
      <method signature="int Obfus1.NotObfuscateMethodParam::get_X2([Obfus1]Obfus1.NotObfuscateMethodParam)" newName="l" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:get_X2()" newStackTraceSignature="a.m:l()" />
      <method signature="void Obfus1.NotObfuscateMethodParam::set_X2([Obfus1]Obfus1.NotObfuscateMethodParam, int)" newName="L" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:set_X2(Int32)" newStackTraceSignature="a.m:L(Int32)" />
      <method signature="int Obfus1.NotObfuscateMethodParam::get_X3([Obfus1]Obfus1.NotObfuscateMethodParam)" newName="m" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:get_X3()" newStackTraceSignature="a.m:m()" />
      <method signature="void Obfus1.NotObfuscateMethodParam::set_X3([Obfus1]Obfus1.NotObfuscateMethodParam, int)" newName="M" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:set_X3(Int32)" newStackTraceSignature="a.m:M(Int32)" />
      <method signature="void Obfus1.NotObfuscateMethodParam::add_A1([Obfus1]Obfus1.NotObfuscateMethodParam, System.Action)" newName="n" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:add_A1(Action)" newStackTraceSignature="a.m:n(Action)" />
      <method signature="void Obfus1.NotObfuscateMethodParam::remove_A1([Obfus1]Obfus1.NotObfuscateMethodParam, System.Action)" newName="N" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:remove_A1(Action)" newStackTraceSignature="a.m:N(Action)" />
      <method signature="void Obfus1.NotObfuscateMethodParam::add_A2([Obfus1]Obfus1.NotObfuscateMethodParam, System.Action)" newName="o" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:add_A2(Action)" newStackTraceSignature="a.m:o(Action)" />
      <method signature="void Obfus1.NotObfuscateMethodParam::remove_A2([Obfus1]Obfus1.NotObfuscateMethodParam, System.Action)" newName="O" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:remove_A2(Action)" newStackTraceSignature="a.m:O(Action)" />
      <method signature="void Obfus1.NotObfuscateMethodParam::add_A3([Obfus1]Obfus1.NotObfuscateMethodParam, System.Action)" newName="p" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:add_A3(Action)" newStackTraceSignature="a.m:p(Action)" />
      <method signature="void Obfus1.NotObfuscateMethodParam::remove_A3([Obfus1]Obfus1.NotObfuscateMethodParam, System.Action)" newName="P" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:remove_A3(Action)" newStackTraceSignature="a.m:P(Action)" />
      <method signature="void Obfus1.NotObfuscateMethodParam::add_A4([Obfus1]Obfus1.NotObfuscateMethodParam, System.Action)" newName="q" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:add_A4(Action)" newStackTraceSignature="a.m:q(Action)" />
      <method signature="void Obfus1.NotObfuscateMethodParam::remove_A4([Obfus1]Obfus1.NotObfuscateMethodParam, System.Action)" newName="Q" oldStackTraceSignature="Obfus1.NotObfuscateMethodParam:remove_A4(Action)" newStackTraceSignature="a.m:Q(Action)" />
    </type>
    <type fullName="Obfus1.NotObfuscateMethodParam/Sub1" newFullName="a.m/M" status="Renamed">
      <field signature="int x1" newName="a" />
    </type>
    <type fullName="Obfus1.NotObfuscateMethodParam/Sub2" newFullName="a.m/n" status="Renamed">
      <field signature="int x1" newName="a" />
    </type>
    <type fullName="Obfus1.NotObfuscateProperty" newFullName="a.N" status="Renamed">
      <field signature="int x1" newName="a" />
      <field signature="int x2" newName="A" />
      <field signature="int x3" newName="b" />
      <field signature="int y1" newName="B" />
      <field signature="int y2" newName="c" />
      <field signature="int y3" newName="C" />
      <field signature="int &lt;X0&gt;k__BackingField" newName="d" />
      <field signature="int &lt;X1&gt;k__BackingField" newName="D" />
      <field signature="int &lt;X2&gt;k__BackingField" newName="e" />
      <field signature="int &lt;X3&gt;k__BackingField" newName="E" />
      <field signature="System.Action A1" newName="f" />
      <field signature="System.Action A2" newName="F" />
      <field signature="System.Action A3" newName="g" />
      <field signature="System.Action A4" newName="G" />
      <event signature="System.Action A1" newName="r" />
      <event signature="System.Action A2" newName="R" />
      <event signature="System.Action A3" newName="s" />
      <event signature="System.Action A4" newName="S" />
      <method signature="void Obfus1.NotObfuscateProperty::Foo1([Obfus1]Obfus1.NotObfuscateProperty)" newName="h" oldStackTraceSignature="Obfus1.NotObfuscateProperty:Foo1()" newStackTraceSignature="a.N:h()" />
      <method signature="void Obfus1.NotObfuscateProperty::Foo2([Obfus1]Obfus1.NotObfuscateProperty)" newName="H" oldStackTraceSignature="Obfus1.NotObfuscateProperty:Foo2()" newStackTraceSignature="a.N:H()" />
      <method signature="void Obfus1.NotObfuscateProperty::Foo3([Obfus1]Obfus1.NotObfuscateProperty, int)" newName="i" oldStackTraceSignature="Obfus1.NotObfuscateProperty:Foo3(Int32)" newStackTraceSignature="a.N:i(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateProperty::Foo4([Obfus1]Obfus1.NotObfuscateProperty, int)" newName="I" oldStackTraceSignature="Obfus1.NotObfuscateProperty:Foo4(Int32)" newStackTraceSignature="a.N:I(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscateProperty::get_X0([Obfus1]Obfus1.NotObfuscateProperty)" newName="j" oldStackTraceSignature="Obfus1.NotObfuscateProperty:get_X0()" newStackTraceSignature="a.N:j()" />
      <method signature="void Obfus1.NotObfuscateProperty::set_X0([Obfus1]Obfus1.NotObfuscateProperty, int)" newName="J" oldStackTraceSignature="Obfus1.NotObfuscateProperty:set_X0(Int32)" newStackTraceSignature="a.N:J(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscateProperty::get_X1([Obfus1]Obfus1.NotObfuscateProperty)" newName="k" oldStackTraceSignature="Obfus1.NotObfuscateProperty:get_X1()" newStackTraceSignature="a.N:k()" />
      <method signature="void Obfus1.NotObfuscateProperty::set_X1([Obfus1]Obfus1.NotObfuscateProperty, int)" newName="K" oldStackTraceSignature="Obfus1.NotObfuscateProperty:set_X1(Int32)" newStackTraceSignature="a.N:K(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscateProperty::get_X2([Obfus1]Obfus1.NotObfuscateProperty)" newName="l" oldStackTraceSignature="Obfus1.NotObfuscateProperty:get_X2()" newStackTraceSignature="a.N:l()" />
      <method signature="void Obfus1.NotObfuscateProperty::set_X2([Obfus1]Obfus1.NotObfuscateProperty, int)" newName="L" oldStackTraceSignature="Obfus1.NotObfuscateProperty:set_X2(Int32)" newStackTraceSignature="a.N:L(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscateProperty::get_X3([Obfus1]Obfus1.NotObfuscateProperty)" newName="m" oldStackTraceSignature="Obfus1.NotObfuscateProperty:get_X3()" newStackTraceSignature="a.N:m()" />
      <method signature="void Obfus1.NotObfuscateProperty::set_X3([Obfus1]Obfus1.NotObfuscateProperty, int)" newName="M" oldStackTraceSignature="Obfus1.NotObfuscateProperty:set_X3(Int32)" newStackTraceSignature="a.N:M(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateProperty::add_A1([Obfus1]Obfus1.NotObfuscateProperty, System.Action)" newName="n" oldStackTraceSignature="Obfus1.NotObfuscateProperty:add_A1(Action)" newStackTraceSignature="a.N:n(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateProperty::remove_A1([Obfus1]Obfus1.NotObfuscateProperty, System.Action)" newName="N" oldStackTraceSignature="Obfus1.NotObfuscateProperty:remove_A1(Action)" newStackTraceSignature="a.N:N(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateProperty::add_A2([Obfus1]Obfus1.NotObfuscateProperty, System.Action)" newName="o" oldStackTraceSignature="Obfus1.NotObfuscateProperty:add_A2(Action)" newStackTraceSignature="a.N:o(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateProperty::remove_A2([Obfus1]Obfus1.NotObfuscateProperty, System.Action)" newName="O" oldStackTraceSignature="Obfus1.NotObfuscateProperty:remove_A2(Action)" newStackTraceSignature="a.N:O(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateProperty::add_A3([Obfus1]Obfus1.NotObfuscateProperty, System.Action)" newName="p" oldStackTraceSignature="Obfus1.NotObfuscateProperty:add_A3(Action)" newStackTraceSignature="a.N:p(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateProperty::remove_A3([Obfus1]Obfus1.NotObfuscateProperty, System.Action)" newName="P" oldStackTraceSignature="Obfus1.NotObfuscateProperty:remove_A3(Action)" newStackTraceSignature="a.N:P(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateProperty::add_A4([Obfus1]Obfus1.NotObfuscateProperty, System.Action)" newName="q" oldStackTraceSignature="Obfus1.NotObfuscateProperty:add_A4(Action)" newStackTraceSignature="a.N:q(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateProperty::remove_A4([Obfus1]Obfus1.NotObfuscateProperty, System.Action)" newName="Q" oldStackTraceSignature="Obfus1.NotObfuscateProperty:remove_A4(Action)" newStackTraceSignature="a.N:Q(Action)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="Obfus1.NotObfuscateProperty/Sub1" newFullName="a.N/o" status="Renamed">
      <field signature="int x1" newName="a" />
    </type>
    <type fullName="Obfus1.NotObfuscateProperty/Sub2" newFullName="a.N/O" status="Renamed">
      <field signature="int x1" newName="a" />
    </type>
    <type fullName="Obfus1.NotObfuscateSelf" newFullName="a.p" status="Renamed">
      <field signature="int x1" newName="a" />
      <field signature="int x2" newName="A" />
      <field signature="int x3" newName="b" />
      <field signature="int y1" newName="B" />
      <field signature="int y2" newName="c" />
      <field signature="int y3" newName="C" />
      <field signature="int &lt;X0&gt;k__BackingField" newName="d" />
      <field signature="int &lt;X1&gt;k__BackingField" newName="D" />
      <field signature="int &lt;X2&gt;k__BackingField" newName="e" />
      <field signature="int &lt;X3&gt;k__BackingField" newName="E" />
      <field signature="System.Action A1" newName="f" />
      <field signature="System.Action A2" newName="F" />
      <field signature="System.Action A3" newName="g" />
      <field signature="System.Action A4" newName="G" />
      <property signature="int X0" newName="r" />
      <property signature="int X1" newName="R" />
      <property signature="int X2" newName="s" />
      <property signature="int X3" newName="S" />
      <event signature="System.Action A1" newName="t" />
      <event signature="System.Action A2" newName="T" />
      <event signature="System.Action A3" newName="u" />
      <event signature="System.Action A4" newName="U" />
      <method signature="void Obfus1.NotObfuscateSelf::Foo1([Obfus1]Obfus1.NotObfuscateSelf)" newName="h" oldStackTraceSignature="Obfus1.NotObfuscateSelf:Foo1()" newStackTraceSignature="a.p:h()" />
      <method signature="void Obfus1.NotObfuscateSelf::Foo2([Obfus1]Obfus1.NotObfuscateSelf)" newName="H" oldStackTraceSignature="Obfus1.NotObfuscateSelf:Foo2()" newStackTraceSignature="a.p:H()" />
      <method signature="void Obfus1.NotObfuscateSelf::Foo3([Obfus1]Obfus1.NotObfuscateSelf, int)" newName="i" oldStackTraceSignature="Obfus1.NotObfuscateSelf:Foo3(Int32)" newStackTraceSignature="a.p:i(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateSelf::Foo4([Obfus1]Obfus1.NotObfuscateSelf, int)" newName="I" oldStackTraceSignature="Obfus1.NotObfuscateSelf:Foo4(Int32)" newStackTraceSignature="a.p:I(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscateSelf::get_X0([Obfus1]Obfus1.NotObfuscateSelf)" newName="j" oldStackTraceSignature="Obfus1.NotObfuscateSelf:get_X0()" newStackTraceSignature="a.p:j()" />
      <method signature="void Obfus1.NotObfuscateSelf::set_X0([Obfus1]Obfus1.NotObfuscateSelf, int)" newName="J" oldStackTraceSignature="Obfus1.NotObfuscateSelf:set_X0(Int32)" newStackTraceSignature="a.p:J(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscateSelf::get_X1([Obfus1]Obfus1.NotObfuscateSelf)" newName="k" oldStackTraceSignature="Obfus1.NotObfuscateSelf:get_X1()" newStackTraceSignature="a.p:k()" />
      <method signature="void Obfus1.NotObfuscateSelf::set_X1([Obfus1]Obfus1.NotObfuscateSelf, int)" newName="K" oldStackTraceSignature="Obfus1.NotObfuscateSelf:set_X1(Int32)" newStackTraceSignature="a.p:K(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscateSelf::get_X2([Obfus1]Obfus1.NotObfuscateSelf)" newName="l" oldStackTraceSignature="Obfus1.NotObfuscateSelf:get_X2()" newStackTraceSignature="a.p:l()" />
      <method signature="void Obfus1.NotObfuscateSelf::set_X2([Obfus1]Obfus1.NotObfuscateSelf, int)" newName="L" oldStackTraceSignature="Obfus1.NotObfuscateSelf:set_X2(Int32)" newStackTraceSignature="a.p:L(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="int Obfus1.NotObfuscateSelf::get_X3([Obfus1]Obfus1.NotObfuscateSelf)" newName="m" oldStackTraceSignature="Obfus1.NotObfuscateSelf:get_X3()" newStackTraceSignature="a.p:m()" />
      <method signature="void Obfus1.NotObfuscateSelf::set_X3([Obfus1]Obfus1.NotObfuscateSelf, int)" newName="M" oldStackTraceSignature="Obfus1.NotObfuscateSelf:set_X3(Int32)" newStackTraceSignature="a.p:M(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateSelf::add_A1([Obfus1]Obfus1.NotObfuscateSelf, System.Action)" newName="n" oldStackTraceSignature="Obfus1.NotObfuscateSelf:add_A1(Action)" newStackTraceSignature="a.p:n(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateSelf::remove_A1([Obfus1]Obfus1.NotObfuscateSelf, System.Action)" newName="N" oldStackTraceSignature="Obfus1.NotObfuscateSelf:remove_A1(Action)" newStackTraceSignature="a.p:N(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateSelf::add_A2([Obfus1]Obfus1.NotObfuscateSelf, System.Action)" newName="o" oldStackTraceSignature="Obfus1.NotObfuscateSelf:add_A2(Action)" newStackTraceSignature="a.p:o(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateSelf::remove_A2([Obfus1]Obfus1.NotObfuscateSelf, System.Action)" newName="O" oldStackTraceSignature="Obfus1.NotObfuscateSelf:remove_A2(Action)" newStackTraceSignature="a.p:O(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateSelf::add_A3([Obfus1]Obfus1.NotObfuscateSelf, System.Action)" newName="p" oldStackTraceSignature="Obfus1.NotObfuscateSelf:add_A3(Action)" newStackTraceSignature="a.p:p(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateSelf::remove_A3([Obfus1]Obfus1.NotObfuscateSelf, System.Action)" newName="P" oldStackTraceSignature="Obfus1.NotObfuscateSelf:remove_A3(Action)" newStackTraceSignature="a.p:P(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateSelf::add_A4([Obfus1]Obfus1.NotObfuscateSelf, System.Action)" newName="q" oldStackTraceSignature="Obfus1.NotObfuscateSelf:add_A4(Action)" newStackTraceSignature="a.p:q(Action)">
        <param index="1" newName="1" />
      </method>
      <method signature="void Obfus1.NotObfuscateSelf::remove_A4([Obfus1]Obfus1.NotObfuscateSelf, System.Action)" newName="Q" oldStackTraceSignature="Obfus1.NotObfuscateSelf:remove_A4(Action)" newStackTraceSignature="a.p:Q(Action)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="Obfus1.NotObfuscateSelf/Sub1" newFullName="a.p/P" status="Renamed">
      <field signature="int x1" newName="a" />
    </type>
    <type fullName="Obfus1.NotObfuscateSelf/Sub2" newFullName="a.p/q" status="Renamed">
      <field signature="int x1" newName="a" />
    </type>
    <type fullName="cfg.AudioType" newFullName="A.Q" status="Renamed">
      <field signature="[Obfus1]cfg.AudioType UNKNOWN" newName="a" />
      <field signature="[Obfus1]cfg.AudioType ACC" newName="A" />
      <field signature="[Obfus1]cfg.AudioType AIFF" newName="b" />
    </type>
    <type fullName="cfg.AutoImport1" newFullName="A.r" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="bool X1" newName="A" />
      <field signature="long X5" newName="b" />
      <field signature="float X6" newName="B" />
      <field signature="int X8" newName="c" />
      <field signature="string X10" newName="C" />
      <field signature="[Obfus1]cfg.test.DemoEnum X13" newName="d" />
      <field signature="[Obfus1]cfg.test.DemoFlag X132" newName="D" />
      <field signature="[Obfus1]cfg.test.DemoDynamic X14" newName="e" />
      <field signature="[Obfus1]cfg.test.Shape X15" newName="E" />
      <field signature="[UnityEngine.CoreModule]UnityEngine.Vector2 V2" newName="f" />
      <field signature="long T1" newName="F" />
      <field signature="int[] K1" newName="g" />
      <field signature="int[] K2" newName="G" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,int&gt; K8" newName="h" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoE2&gt; K9" newName="H" />
      <field signature="System.Collections.Generic.List`1&lt;[UnityEngine.CoreModule]UnityEngine.Vector3&gt; K10" newName="i" />
      <field signature="System.Collections.Generic.List`1&lt;[UnityEngine.CoreModule]UnityEngine.Vector4&gt; K11" newName="I" />
      <field signature="System.Nullable`1&lt;[UnityEngine.CoreModule]UnityEngine.Vector3&gt; V11" newName="j" />
      <field signature="int __ID__" newName="J" />
      <method signature="[Obfus1]cfg.AutoImport1 cfg.AutoImport1::DeserializeAutoImport1([Luban.Runtime]Luban.ByteBuf)" newName="k" oldStackTraceSignature="cfg.AutoImport1:DeserializeAutoImport1(ByteBuf)" newStackTraceSignature="A.r:k(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.AutoImport1::ResolveRef([Obfus1]cfg.AutoImport1, [Obfus1]cfg.Tables)" newName="K" oldStackTraceSignature="cfg.AutoImport1:ResolveRef(Tables)" newStackTraceSignature="A.r:K(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.Tables" newFullName="A.R" status="Renamed">
      <field signature="[Obfus1]cfg.ai.TbBlackboard &lt;TbBlackboard&gt;k__BackingField" newName="a" />
      <field signature="[Obfus1]cfg.ai.TbBehaviorTree &lt;TbBehaviorTree&gt;k__BackingField" newName="A" />
      <field signature="[Obfus1]cfg.common.TbGlobalConfig &lt;TbGlobalConfig&gt;k__BackingField" newName="b" />
      <field signature="[Obfus1]cfg.item.TbItem &lt;TbItem&gt;k__BackingField" newName="B" />
      <field signature="[Obfus1]cfg.l10n.TbL10NDemo &lt;TbL10NDemo&gt;k__BackingField" newName="c" />
      <field signature="[Obfus1]cfg.l10n.TbPatchDemo &lt;TbPatchDemo&gt;k__BackingField" newName="C" />
      <field signature="[Obfus1]cfg.tag.TbTestTag &lt;TbTestTag&gt;k__BackingField" newName="d" />
      <field signature="[Obfus1]cfg.test.TbFullTypes &lt;TbFullTypes&gt;k__BackingField" newName="D" />
      <field signature="[Obfus1]cfg.test.TbSingleton &lt;TbSingleton&gt;k__BackingField" newName="e" />
      <field signature="[Obfus1]cfg.test.TbNotIndexList &lt;TbNotIndexList&gt;k__BackingField" newName="E" />
      <field signature="[Obfus1]cfg.test.TbMultiUnionIndexList &lt;TbMultiUnionIndexList&gt;k__BackingField" newName="f" />
      <field signature="[Obfus1]cfg.test.TbMultiIndexList &lt;TbMultiIndexList&gt;k__BackingField" newName="F" />
      <field signature="[Obfus1]cfg.test.TbDataFromMisc &lt;TbDataFromMisc&gt;k__BackingField" newName="g" />
      <field signature="[Obfus1]cfg.test.TbMultiRowRecord &lt;TbMultiRowRecord&gt;k__BackingField" newName="G" />
      <field signature="[Obfus1]cfg.test.TbTestMultiColumn &lt;TbTestMultiColumn&gt;k__BackingField" newName="h" />
      <field signature="[Obfus1]cfg.test.TbMultiRowTitle &lt;TbMultiRowTitle&gt;k__BackingField" newName="H" />
      <field signature="[Obfus1]cfg.test.TbTestNull &lt;TbTestNull&gt;k__BackingField" newName="i" />
      <field signature="[Obfus1]cfg.test.TbDemoPrimitive &lt;TbDemoPrimitive&gt;k__BackingField" newName="I" />
      <field signature="[Obfus1]cfg.test.TbTestString &lt;TbTestString&gt;k__BackingField" newName="j" />
      <field signature="[Obfus1]cfg.test.TbDemoGroup &lt;TbDemoGroup&gt;k__BackingField" newName="J" />
      <field signature="[Obfus1]cfg.test.TbDemoGroup_C &lt;TbDemoGroupC&gt;k__BackingField" newName="k" />
      <field signature="[Obfus1]cfg.test.TbTestGlobal &lt;TbTestGlobal&gt;k__BackingField" newName="K" />
      <field signature="[Obfus1]cfg.test.TbTestBeRef &lt;TbTestBeRef&gt;k__BackingField" newName="l" />
      <field signature="[Obfus1]cfg.test.TbTestBeRef2 &lt;TbTestBeRef2&gt;k__BackingField" newName="L" />
      <field signature="[Obfus1]cfg.test.TbTestRef &lt;TbTestRef&gt;k__BackingField" newName="m" />
      <field signature="[Obfus1]cfg.test.TbTestSize &lt;TbTestSize&gt;k__BackingField" newName="M" />
      <field signature="[Obfus1]cfg.test.TbTestSet &lt;TbTestSet&gt;k__BackingField" newName="n" />
      <field signature="[Obfus1]cfg.test.TbTestRange &lt;TbTestRange&gt;k__BackingField" newName="N" />
      <field signature="[Obfus1]cfg.test.TbDetectCsvEncoding &lt;TbDetectCsvEncoding&gt;k__BackingField" newName="o" />
      <field signature="[Obfus1]cfg.test.TbItem2 &lt;TbItem2&gt;k__BackingField" newName="O" />
      <field signature="[Obfus1]cfg.test.TbTestIndex &lt;TbTestIndex&gt;k__BackingField" newName="p" />
      <field signature="[Obfus1]cfg.test.TbTestMap &lt;TbTestMap&gt;k__BackingField" newName="P" />
      <field signature="[Obfus1]cfg.test.TbExcelFromJson &lt;TbExcelFromJson&gt;k__BackingField" newName="q" />
      <field signature="[Obfus1]cfg.test.TbCompositeJsonTable1 &lt;TbCompositeJsonTable1&gt;k__BackingField" newName="Q" />
      <field signature="[Obfus1]cfg.test.TbCompositeJsonTable2 &lt;TbCompositeJsonTable2&gt;k__BackingField" newName="r" />
      <field signature="[Obfus1]cfg.test.TbCompositeJsonTable3 &lt;TbCompositeJsonTable3&gt;k__BackingField" newName="R" />
      <field signature="[Obfus1]cfg.test.TbExcelFromJsonMultiRow &lt;TbExcelFromJsonMultiRow&gt;k__BackingField" newName="s" />
      <field signature="[Obfus1]cfg.test.TbTestScriptableObject &lt;TbTestScriptableObject&gt;k__BackingField" newName="S" />
      <field signature="[Obfus1]cfg.test.TbPath &lt;TbPath&gt;k__BackingField" newName="t" />
      <field signature="[Obfus1]cfg.test.TbTestFieldAlias &lt;TbTestFieldAlias&gt;k__BackingField" newName="T" />
      <field signature="[Obfus1]cfg.test.TbTestFieldVariant &lt;TbTestFieldVariant&gt;k__BackingField" newName="u" />
      <field signature="[Obfus1]cfg.test.TbTestFieldVariant2 &lt;TbTestFieldVariant2&gt;k__BackingField" newName="U" />
      <field signature="[Obfus1]cfg.test.TbTestMapper &lt;TbTestMapper&gt;k__BackingField" newName="v" />
      <field signature="[Obfus1]cfg.test.TbDefineFromExcel2 &lt;TbDefineFromExcel2&gt;k__BackingField" newName="V" />
      <field signature="[Obfus1]cfg.TbAutoImport1 &lt;TbAutoImport1&gt;k__BackingField" newName="w" />
      <field signature="[Obfus1]cfg.test.TbAutoImport2 &lt;TbAutoImport2&gt;k__BackingField" newName="W" />
      <property signature="[Obfus1]cfg.ai.TbBlackboard TbBlackboard" newName="UA" />
      <property signature="[Obfus1]cfg.ai.TbBehaviorTree TbBehaviorTree" newName="vA" />
      <property signature="[Obfus1]cfg.common.TbGlobalConfig TbGlobalConfig" newName="VA" />
      <property signature="[Obfus1]cfg.item.TbItem TbItem" newName="wA" />
      <property signature="[Obfus1]cfg.l10n.TbL10NDemo TbL10NDemo" newName="WA" />
      <property signature="[Obfus1]cfg.l10n.TbPatchDemo TbPatchDemo" newName="xA" />
      <property signature="[Obfus1]cfg.tag.TbTestTag TbTestTag" newName="XA" />
      <property signature="[Obfus1]cfg.test.TbFullTypes TbFullTypes" newName="yA" />
      <property signature="[Obfus1]cfg.test.TbSingleton TbSingleton" newName="YA" />
      <property signature="[Obfus1]cfg.test.TbNotIndexList TbNotIndexList" newName="zA" />
      <property signature="[Obfus1]cfg.test.TbMultiUnionIndexList TbMultiUnionIndexList" newName="ZA" />
      <property signature="[Obfus1]cfg.test.TbMultiIndexList TbMultiIndexList" newName="ab" />
      <property signature="[Obfus1]cfg.test.TbDataFromMisc TbDataFromMisc" newName="Ab" />
      <property signature="[Obfus1]cfg.test.TbMultiRowRecord TbMultiRowRecord" newName="bb" />
      <property signature="[Obfus1]cfg.test.TbTestMultiColumn TbTestMultiColumn" newName="Bb" />
      <property signature="[Obfus1]cfg.test.TbMultiRowTitle TbMultiRowTitle" newName="cb" />
      <property signature="[Obfus1]cfg.test.TbTestNull TbTestNull" newName="Cb" />
      <property signature="[Obfus1]cfg.test.TbDemoPrimitive TbDemoPrimitive" newName="db" />
      <property signature="[Obfus1]cfg.test.TbTestString TbTestString" newName="Db" />
      <property signature="[Obfus1]cfg.test.TbDemoGroup TbDemoGroup" newName="eb" />
      <property signature="[Obfus1]cfg.test.TbDemoGroup_C TbDemoGroupC" newName="Eb" />
      <property signature="[Obfus1]cfg.test.TbTestGlobal TbTestGlobal" newName="fb" />
      <property signature="[Obfus1]cfg.test.TbTestBeRef TbTestBeRef" newName="Fb" />
      <property signature="[Obfus1]cfg.test.TbTestBeRef2 TbTestBeRef2" newName="gb" />
      <property signature="[Obfus1]cfg.test.TbTestRef TbTestRef" newName="Gb" />
      <property signature="[Obfus1]cfg.test.TbTestSize TbTestSize" newName="hb" />
      <property signature="[Obfus1]cfg.test.TbTestSet TbTestSet" newName="Hb" />
      <property signature="[Obfus1]cfg.test.TbTestRange TbTestRange" newName="ib" />
      <property signature="[Obfus1]cfg.test.TbDetectCsvEncoding TbDetectCsvEncoding" newName="Ib" />
      <property signature="[Obfus1]cfg.test.TbItem2 TbItem2" newName="jb" />
      <property signature="[Obfus1]cfg.test.TbTestIndex TbTestIndex" newName="Jb" />
      <property signature="[Obfus1]cfg.test.TbTestMap TbTestMap" newName="kb" />
      <property signature="[Obfus1]cfg.test.TbExcelFromJson TbExcelFromJson" newName="Kb" />
      <property signature="[Obfus1]cfg.test.TbCompositeJsonTable1 TbCompositeJsonTable1" newName="lb" />
      <property signature="[Obfus1]cfg.test.TbCompositeJsonTable2 TbCompositeJsonTable2" newName="Lb" />
      <property signature="[Obfus1]cfg.test.TbCompositeJsonTable3 TbCompositeJsonTable3" newName="mb" />
      <property signature="[Obfus1]cfg.test.TbExcelFromJsonMultiRow TbExcelFromJsonMultiRow" newName="Mb" />
      <property signature="[Obfus1]cfg.test.TbTestScriptableObject TbTestScriptableObject" newName="nb" />
      <property signature="[Obfus1]cfg.test.TbPath TbPath" newName="Nb" />
      <property signature="[Obfus1]cfg.test.TbTestFieldAlias TbTestFieldAlias" newName="ob" />
      <property signature="[Obfus1]cfg.test.TbTestFieldVariant TbTestFieldVariant" newName="Ob" />
      <property signature="[Obfus1]cfg.test.TbTestFieldVariant2 TbTestFieldVariant2" newName="pb" />
      <property signature="[Obfus1]cfg.test.TbTestMapper TbTestMapper" newName="Pb" />
      <property signature="[Obfus1]cfg.test.TbDefineFromExcel2 TbDefineFromExcel2" newName="qb" />
      <property signature="[Obfus1]cfg.TbAutoImport1 TbAutoImport1" newName="Qb" />
      <property signature="[Obfus1]cfg.test.TbAutoImport2 TbAutoImport2" newName="rb" />
      <method signature="[Obfus1]cfg.ai.TbBlackboard cfg.Tables::get_TbBlackboard([Obfus1]cfg.Tables)" newName="x" oldStackTraceSignature="cfg.Tables:get_TbBlackboard()" newStackTraceSignature="A.R:x()" />
      <method signature="[Obfus1]cfg.ai.TbBehaviorTree cfg.Tables::get_TbBehaviorTree([Obfus1]cfg.Tables)" newName="X" oldStackTraceSignature="cfg.Tables:get_TbBehaviorTree()" newStackTraceSignature="A.R:X()" />
      <method signature="[Obfus1]cfg.common.TbGlobalConfig cfg.Tables::get_TbGlobalConfig([Obfus1]cfg.Tables)" newName="y" oldStackTraceSignature="cfg.Tables:get_TbGlobalConfig()" newStackTraceSignature="A.R:y()" />
      <method signature="[Obfus1]cfg.item.TbItem cfg.Tables::get_TbItem([Obfus1]cfg.Tables)" newName="Y" oldStackTraceSignature="cfg.Tables:get_TbItem()" newStackTraceSignature="A.R:Y()" />
      <method signature="[Obfus1]cfg.l10n.TbL10NDemo cfg.Tables::get_TbL10NDemo([Obfus1]cfg.Tables)" newName="z" oldStackTraceSignature="cfg.Tables:get_TbL10NDemo()" newStackTraceSignature="A.R:z()" />
      <method signature="[Obfus1]cfg.l10n.TbPatchDemo cfg.Tables::get_TbPatchDemo([Obfus1]cfg.Tables)" newName="Z" oldStackTraceSignature="cfg.Tables:get_TbPatchDemo()" newStackTraceSignature="A.R:Z()" />
      <method signature="[Obfus1]cfg.tag.TbTestTag cfg.Tables::get_TbTestTag([Obfus1]cfg.Tables)" newName="aA" oldStackTraceSignature="cfg.Tables:get_TbTestTag()" newStackTraceSignature="A.R:aA()" />
      <method signature="[Obfus1]cfg.test.TbFullTypes cfg.Tables::get_TbFullTypes([Obfus1]cfg.Tables)" newName="AA" oldStackTraceSignature="cfg.Tables:get_TbFullTypes()" newStackTraceSignature="A.R:AA()" />
      <method signature="[Obfus1]cfg.test.TbSingleton cfg.Tables::get_TbSingleton([Obfus1]cfg.Tables)" newName="bA" oldStackTraceSignature="cfg.Tables:get_TbSingleton()" newStackTraceSignature="A.R:bA()" />
      <method signature="[Obfus1]cfg.test.TbNotIndexList cfg.Tables::get_TbNotIndexList([Obfus1]cfg.Tables)" newName="BA" oldStackTraceSignature="cfg.Tables:get_TbNotIndexList()" newStackTraceSignature="A.R:BA()" />
      <method signature="[Obfus1]cfg.test.TbMultiUnionIndexList cfg.Tables::get_TbMultiUnionIndexList([Obfus1]cfg.Tables)" newName="cA" oldStackTraceSignature="cfg.Tables:get_TbMultiUnionIndexList()" newStackTraceSignature="A.R:cA()" />
      <method signature="[Obfus1]cfg.test.TbMultiIndexList cfg.Tables::get_TbMultiIndexList([Obfus1]cfg.Tables)" newName="CA" oldStackTraceSignature="cfg.Tables:get_TbMultiIndexList()" newStackTraceSignature="A.R:CA()" />
      <method signature="[Obfus1]cfg.test.TbDataFromMisc cfg.Tables::get_TbDataFromMisc([Obfus1]cfg.Tables)" newName="dA" oldStackTraceSignature="cfg.Tables:get_TbDataFromMisc()" newStackTraceSignature="A.R:dA()" />
      <method signature="[Obfus1]cfg.test.TbMultiRowRecord cfg.Tables::get_TbMultiRowRecord([Obfus1]cfg.Tables)" newName="DA" oldStackTraceSignature="cfg.Tables:get_TbMultiRowRecord()" newStackTraceSignature="A.R:DA()" />
      <method signature="[Obfus1]cfg.test.TbTestMultiColumn cfg.Tables::get_TbTestMultiColumn([Obfus1]cfg.Tables)" newName="eA" oldStackTraceSignature="cfg.Tables:get_TbTestMultiColumn()" newStackTraceSignature="A.R:eA()" />
      <method signature="[Obfus1]cfg.test.TbMultiRowTitle cfg.Tables::get_TbMultiRowTitle([Obfus1]cfg.Tables)" newName="EA" oldStackTraceSignature="cfg.Tables:get_TbMultiRowTitle()" newStackTraceSignature="A.R:EA()" />
      <method signature="[Obfus1]cfg.test.TbTestNull cfg.Tables::get_TbTestNull([Obfus1]cfg.Tables)" newName="fA" oldStackTraceSignature="cfg.Tables:get_TbTestNull()" newStackTraceSignature="A.R:fA()" />
      <method signature="[Obfus1]cfg.test.TbDemoPrimitive cfg.Tables::get_TbDemoPrimitive([Obfus1]cfg.Tables)" newName="FA" oldStackTraceSignature="cfg.Tables:get_TbDemoPrimitive()" newStackTraceSignature="A.R:FA()" />
      <method signature="[Obfus1]cfg.test.TbTestString cfg.Tables::get_TbTestString([Obfus1]cfg.Tables)" newName="gA" oldStackTraceSignature="cfg.Tables:get_TbTestString()" newStackTraceSignature="A.R:gA()" />
      <method signature="[Obfus1]cfg.test.TbDemoGroup cfg.Tables::get_TbDemoGroup([Obfus1]cfg.Tables)" newName="GA" oldStackTraceSignature="cfg.Tables:get_TbDemoGroup()" newStackTraceSignature="A.R:GA()" />
      <method signature="[Obfus1]cfg.test.TbDemoGroup_C cfg.Tables::get_TbDemoGroupC([Obfus1]cfg.Tables)" newName="hA" oldStackTraceSignature="cfg.Tables:get_TbDemoGroupC()" newStackTraceSignature="A.R:hA()" />
      <method signature="[Obfus1]cfg.test.TbTestGlobal cfg.Tables::get_TbTestGlobal([Obfus1]cfg.Tables)" newName="HA" oldStackTraceSignature="cfg.Tables:get_TbTestGlobal()" newStackTraceSignature="A.R:HA()" />
      <method signature="[Obfus1]cfg.test.TbTestBeRef cfg.Tables::get_TbTestBeRef([Obfus1]cfg.Tables)" newName="iA" oldStackTraceSignature="cfg.Tables:get_TbTestBeRef()" newStackTraceSignature="A.R:iA()" />
      <method signature="[Obfus1]cfg.test.TbTestBeRef2 cfg.Tables::get_TbTestBeRef2([Obfus1]cfg.Tables)" newName="IA" oldStackTraceSignature="cfg.Tables:get_TbTestBeRef2()" newStackTraceSignature="A.R:IA()" />
      <method signature="[Obfus1]cfg.test.TbTestRef cfg.Tables::get_TbTestRef([Obfus1]cfg.Tables)" newName="jA" oldStackTraceSignature="cfg.Tables:get_TbTestRef()" newStackTraceSignature="A.R:jA()" />
      <method signature="[Obfus1]cfg.test.TbTestSize cfg.Tables::get_TbTestSize([Obfus1]cfg.Tables)" newName="JA" oldStackTraceSignature="cfg.Tables:get_TbTestSize()" newStackTraceSignature="A.R:JA()" />
      <method signature="[Obfus1]cfg.test.TbTestSet cfg.Tables::get_TbTestSet([Obfus1]cfg.Tables)" newName="kA" oldStackTraceSignature="cfg.Tables:get_TbTestSet()" newStackTraceSignature="A.R:kA()" />
      <method signature="[Obfus1]cfg.test.TbTestRange cfg.Tables::get_TbTestRange([Obfus1]cfg.Tables)" newName="KA" oldStackTraceSignature="cfg.Tables:get_TbTestRange()" newStackTraceSignature="A.R:KA()" />
      <method signature="[Obfus1]cfg.test.TbDetectCsvEncoding cfg.Tables::get_TbDetectCsvEncoding([Obfus1]cfg.Tables)" newName="lA" oldStackTraceSignature="cfg.Tables:get_TbDetectCsvEncoding()" newStackTraceSignature="A.R:lA()" />
      <method signature="[Obfus1]cfg.test.TbItem2 cfg.Tables::get_TbItem2([Obfus1]cfg.Tables)" newName="LA" oldStackTraceSignature="cfg.Tables:get_TbItem2()" newStackTraceSignature="A.R:LA()" />
      <method signature="[Obfus1]cfg.test.TbTestIndex cfg.Tables::get_TbTestIndex([Obfus1]cfg.Tables)" newName="mA" oldStackTraceSignature="cfg.Tables:get_TbTestIndex()" newStackTraceSignature="A.R:mA()" />
      <method signature="[Obfus1]cfg.test.TbTestMap cfg.Tables::get_TbTestMap([Obfus1]cfg.Tables)" newName="MA" oldStackTraceSignature="cfg.Tables:get_TbTestMap()" newStackTraceSignature="A.R:MA()" />
      <method signature="[Obfus1]cfg.test.TbExcelFromJson cfg.Tables::get_TbExcelFromJson([Obfus1]cfg.Tables)" newName="nA" oldStackTraceSignature="cfg.Tables:get_TbExcelFromJson()" newStackTraceSignature="A.R:nA()" />
      <method signature="[Obfus1]cfg.test.TbCompositeJsonTable1 cfg.Tables::get_TbCompositeJsonTable1([Obfus1]cfg.Tables)" newName="NA" oldStackTraceSignature="cfg.Tables:get_TbCompositeJsonTable1()" newStackTraceSignature="A.R:NA()" />
      <method signature="[Obfus1]cfg.test.TbCompositeJsonTable2 cfg.Tables::get_TbCompositeJsonTable2([Obfus1]cfg.Tables)" newName="oA" oldStackTraceSignature="cfg.Tables:get_TbCompositeJsonTable2()" newStackTraceSignature="A.R:oA()" />
      <method signature="[Obfus1]cfg.test.TbCompositeJsonTable3 cfg.Tables::get_TbCompositeJsonTable3([Obfus1]cfg.Tables)" newName="OA" oldStackTraceSignature="cfg.Tables:get_TbCompositeJsonTable3()" newStackTraceSignature="A.R:OA()" />
      <method signature="[Obfus1]cfg.test.TbExcelFromJsonMultiRow cfg.Tables::get_TbExcelFromJsonMultiRow([Obfus1]cfg.Tables)" newName="pA" oldStackTraceSignature="cfg.Tables:get_TbExcelFromJsonMultiRow()" newStackTraceSignature="A.R:pA()" />
      <method signature="[Obfus1]cfg.test.TbTestScriptableObject cfg.Tables::get_TbTestScriptableObject([Obfus1]cfg.Tables)" newName="PA" oldStackTraceSignature="cfg.Tables:get_TbTestScriptableObject()" newStackTraceSignature="A.R:PA()" />
      <method signature="[Obfus1]cfg.test.TbPath cfg.Tables::get_TbPath([Obfus1]cfg.Tables)" newName="qA" oldStackTraceSignature="cfg.Tables:get_TbPath()" newStackTraceSignature="A.R:qA()" />
      <method signature="[Obfus1]cfg.test.TbTestFieldAlias cfg.Tables::get_TbTestFieldAlias([Obfus1]cfg.Tables)" newName="QA" oldStackTraceSignature="cfg.Tables:get_TbTestFieldAlias()" newStackTraceSignature="A.R:QA()" />
      <method signature="[Obfus1]cfg.test.TbTestFieldVariant cfg.Tables::get_TbTestFieldVariant([Obfus1]cfg.Tables)" newName="rA" oldStackTraceSignature="cfg.Tables:get_TbTestFieldVariant()" newStackTraceSignature="A.R:rA()" />
      <method signature="[Obfus1]cfg.test.TbTestFieldVariant2 cfg.Tables::get_TbTestFieldVariant2([Obfus1]cfg.Tables)" newName="RA" oldStackTraceSignature="cfg.Tables:get_TbTestFieldVariant2()" newStackTraceSignature="A.R:RA()" />
      <method signature="[Obfus1]cfg.test.TbTestMapper cfg.Tables::get_TbTestMapper([Obfus1]cfg.Tables)" newName="sA" oldStackTraceSignature="cfg.Tables:get_TbTestMapper()" newStackTraceSignature="A.R:sA()" />
      <method signature="[Obfus1]cfg.test.TbDefineFromExcel2 cfg.Tables::get_TbDefineFromExcel2([Obfus1]cfg.Tables)" newName="SA" oldStackTraceSignature="cfg.Tables:get_TbDefineFromExcel2()" newStackTraceSignature="A.R:SA()" />
      <method signature="[Obfus1]cfg.TbAutoImport1 cfg.Tables::get_TbAutoImport1([Obfus1]cfg.Tables)" newName="tA" oldStackTraceSignature="cfg.Tables:get_TbAutoImport1()" newStackTraceSignature="A.R:tA()" />
      <method signature="[Obfus1]cfg.test.TbAutoImport2 cfg.Tables::get_TbAutoImport2([Obfus1]cfg.Tables)" newName="TA" oldStackTraceSignature="cfg.Tables:get_TbAutoImport2()" newStackTraceSignature="A.R:TA()" />
      <method signature="void cfg.Tables::ResolveRef([Obfus1]cfg.Tables)" newName="uA" oldStackTraceSignature="cfg.Tables:ResolveRef()" newStackTraceSignature="A.R:uA()" />
    </type>
    <type fullName="cfg.TbAutoImport1" newFullName="A.s" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.AutoImport1&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.AutoImport1&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.AutoImport1&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.AutoImport1&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.AutoImport1 Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.AutoImport1&gt; cfg.TbAutoImport1::get_DataMap([Obfus1]cfg.TbAutoImport1)" newName="b" oldStackTraceSignature="cfg.TbAutoImport1:get_DataMap()" newStackTraceSignature="A.s:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.AutoImport1&gt; cfg.TbAutoImport1::get_DataList([Obfus1]cfg.TbAutoImport1)" newName="B" oldStackTraceSignature="cfg.TbAutoImport1:get_DataList()" newStackTraceSignature="A.s:B()" />
      <method signature="[Obfus1]cfg.AutoImport1 cfg.TbAutoImport1::GetOrDefault([Obfus1]cfg.TbAutoImport1, int)" newName="c" oldStackTraceSignature="cfg.TbAutoImport1:GetOrDefault(Int32)" newStackTraceSignature="A.s:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.AutoImport1 cfg.TbAutoImport1::Get([Obfus1]cfg.TbAutoImport1, int)" newName="C" oldStackTraceSignature="cfg.TbAutoImport1:Get(Int32)" newStackTraceSignature="A.s:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.AutoImport1 cfg.TbAutoImport1::get_Item([Obfus1]cfg.TbAutoImport1, int)" newName="d" oldStackTraceSignature="cfg.TbAutoImport1:get_Item(Int32)" newStackTraceSignature="A.s:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.TbAutoImport1::ResolveRef([Obfus1]cfg.TbAutoImport1, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.TbAutoImport1:ResolveRef(Tables)" newStackTraceSignature="A.s:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.vec2" newFullName="A.S" status="Renamed">
      <field signature="float X" newName="a" />
      <field signature="float Y" newName="A" />
      <method signature="[Obfus1]cfg.vec2 cfg.vec2::Deserializevec2([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.vec2:Deserializevec2(ByteBuf)" newStackTraceSignature="A.S:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.vec2::ResolveRef([Obfus1]cfg.vec2&amp;, [Obfus1]cfg.Tables)" newName="B" oldStackTraceSignature="cfg.vec2:ResolveRef(Tables)" newStackTraceSignature="A.S:B(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.vec3" newFullName="A.t" status="Renamed">
      <field signature="float X" newName="a" />
      <field signature="float Y" newName="A" />
      <field signature="float Z" newName="b" />
      <method signature="[Obfus1]cfg.vec3 cfg.vec3::Deserializevec3([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.vec3:Deserializevec3(ByteBuf)" newStackTraceSignature="A.t:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.vec3::ResolveRef([Obfus1]cfg.vec3&amp;, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.vec3:ResolveRef(Tables)" newStackTraceSignature="A.t:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.vec4" newFullName="A.T" status="Renamed">
      <field signature="float X" newName="a" />
      <field signature="float Y" newName="A" />
      <field signature="float Z" newName="b" />
      <field signature="float W" newName="B" />
      <method signature="[Obfus1]cfg.vec4 cfg.vec4::Deserializevec4([Luban.Runtime]Luban.ByteBuf)" newName="c" oldStackTraceSignature="cfg.vec4:Deserializevec4(ByteBuf)" newStackTraceSignature="A.T:c(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.vec4::ResolveRef([Obfus1]cfg.vec4&amp;, [Obfus1]cfg.Tables)" newName="C" oldStackTraceSignature="cfg.vec4:ResolveRef(Tables)" newStackTraceSignature="A.T:C(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test2.Rectangle" newFullName="b.u" status="Renamed">
      <field signature="float Width" newName="a" />
      <field signature="float Height" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test2.Rectangle cfg.test2.Rectangle::DeserializeRectangle([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test2.Rectangle:DeserializeRectangle(ByteBuf)" newStackTraceSignature="b.u:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test2.Rectangle::ResolveRef([Obfus1]cfg.test2.Rectangle, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test2.Rectangle:ResolveRef(Tables)" newStackTraceSignature="b.u:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.AccessFlag" newFullName="B.U" status="Renamed">
      <field signature="[Obfus1]cfg.test.AccessFlag WRITE" newName="a" />
      <field signature="[Obfus1]cfg.test.AccessFlag READ" newName="A" />
      <field signature="[Obfus1]cfg.test.AccessFlag TRUNCATE" newName="b" />
      <field signature="[Obfus1]cfg.test.AccessFlag NEW" newName="B" />
      <field signature="[Obfus1]cfg.test.AccessFlag READ_WRITE" newName="c" />
    </type>
    <type fullName="cfg.test.AudioType2" newFullName="B.v" status="Renamed">
      <field signature="[Obfus1]cfg.test.AudioType2 UNKNOWN" newName="a" />
      <field signature="[Obfus1]cfg.test.AudioType2 ACC" newName="A" />
      <field signature="[Obfus1]cfg.test.AudioType2 AIFF" newName="b" />
    </type>
    <type fullName="cfg.test.AutoImport2" newFullName="B.V" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="bool X1" newName="A" />
      <field signature="long X5" newName="b" />
      <field signature="float X6" newName="B" />
      <field signature="int X8" newName="c" />
      <field signature="string X10" newName="C" />
      <field signature="[Obfus1]cfg.test.DemoEnum X13" newName="d" />
      <field signature="[Obfus1]cfg.test.DemoFlag X132" newName="D" />
      <field signature="[Obfus1]cfg.test.DemoDynamic X14" newName="e" />
      <field signature="[Obfus1]cfg.test.Shape X15" newName="E" />
      <field signature="[UnityEngine.CoreModule]UnityEngine.Vector2 V2" newName="f" />
      <field signature="long T1" newName="F" />
      <field signature="int[] K1" newName="g" />
      <field signature="int[] K2" newName="G" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,int&gt; K8" newName="h" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoE2&gt; K9" newName="H" />
      <field signature="System.Collections.Generic.List`1&lt;[UnityEngine.CoreModule]UnityEngine.Vector3&gt; K10" newName="i" />
      <field signature="System.Collections.Generic.List`1&lt;[UnityEngine.CoreModule]UnityEngine.Vector4&gt; K11" newName="I" />
      <field signature="System.Nullable`1&lt;[UnityEngine.CoreModule]UnityEngine.Vector3&gt; V11" newName="j" />
      <field signature="int __ID__" newName="J" />
      <method signature="[Obfus1]cfg.test.AutoImport2 cfg.test.AutoImport2::DeserializeAutoImport2([Luban.Runtime]Luban.ByteBuf)" newName="k" oldStackTraceSignature="cfg.test.AutoImport2:DeserializeAutoImport2(ByteBuf)" newStackTraceSignature="B.V:k(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.AutoImport2::ResolveRef([Obfus1]cfg.test.AutoImport2, [Obfus1]cfg.Tables)" newName="K" oldStackTraceSignature="cfg.test.AutoImport2:ResolveRef(Tables)" newStackTraceSignature="B.V:K(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.Circle" newFullName="B.w" status="Renamed">
      <field signature="float Radius" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.test.Circle cfg.test.Circle::DeserializeCircle([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.test.Circle:DeserializeCircle(ByteBuf)" newStackTraceSignature="B.w:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.Circle::ResolveRef([Obfus1]cfg.test.Circle, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.Circle:ResolveRef(Tables)" newStackTraceSignature="B.w:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.CompactString" newFullName="B.W" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="string S2" newName="A" />
      <field signature="string S3" newName="b" />
      <field signature="int __ID__" newName="B" />
      <method signature="[Obfus1]cfg.test.CompactString cfg.test.CompactString::DeserializeCompactString([Luban.Runtime]Luban.ByteBuf)" newName="c" oldStackTraceSignature="cfg.test.CompactString:DeserializeCompactString(ByteBuf)" newStackTraceSignature="B.W:c(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.CompactString::ResolveRef([Obfus1]cfg.test.CompactString, [Obfus1]cfg.Tables)" newName="C" oldStackTraceSignature="cfg.test.CompactString:ResolveRef(Tables)" newStackTraceSignature="B.W:C(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.CompositeJsonTable1" newFullName="B.x" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="string X" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test.CompositeJsonTable1 cfg.test.CompositeJsonTable1::DeserializeCompositeJsonTable1([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.CompositeJsonTable1:DeserializeCompositeJsonTable1(ByteBuf)" newStackTraceSignature="B.x:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.CompositeJsonTable1::ResolveRef([Obfus1]cfg.test.CompositeJsonTable1, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.CompositeJsonTable1:ResolveRef(Tables)" newStackTraceSignature="B.x:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.CompositeJsonTable2" newFullName="B.X" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="int Y" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test.CompositeJsonTable2 cfg.test.CompositeJsonTable2::DeserializeCompositeJsonTable2([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.CompositeJsonTable2:DeserializeCompositeJsonTable2(ByteBuf)" newStackTraceSignature="B.X:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.CompositeJsonTable2::ResolveRef([Obfus1]cfg.test.CompositeJsonTable2, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.CompositeJsonTable2:ResolveRef(Tables)" newStackTraceSignature="B.X:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.CompositeJsonTable3" newFullName="B.y" status="Renamed">
      <field signature="int A" newName="a" />
      <field signature="int B" newName="b" />
      <field signature="int __ID__" newName="c" />
      <method signature="[Obfus1]cfg.test.CompositeJsonTable3 cfg.test.CompositeJsonTable3::DeserializeCompositeJsonTable3([Luban.Runtime]Luban.ByteBuf)" newName="C" oldStackTraceSignature="cfg.test.CompositeJsonTable3:DeserializeCompositeJsonTable3(ByteBuf)" newStackTraceSignature="B.y:C(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.CompositeJsonTable3::ResolveRef([Obfus1]cfg.test.CompositeJsonTable3, [Obfus1]cfg.Tables)" newName="d" oldStackTraceSignature="cfg.test.CompositeJsonTable3:ResolveRef(Tables)" newStackTraceSignature="B.y:d(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.DateTimeRange" newFullName="B.Y" status="Renamed">
      <field signature="long StartTime" newName="a" />
      <field signature="long EndTime" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test.DateTimeRange cfg.test.DateTimeRange::DeserializeDateTimeRange([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.DateTimeRange:DeserializeDateTimeRange(ByteBuf)" newStackTraceSignature="B.Y:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.DateTimeRange::ResolveRef([Obfus1]cfg.test.DateTimeRange, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.DateTimeRange:ResolveRef(Tables)" newStackTraceSignature="B.Y:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.Decorator" newFullName="B.z" status="Renamed">
      <field signature="int Duration" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.test.Decorator cfg.test.Decorator::DeserializeDecorator([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.test.Decorator:DeserializeDecorator(ByteBuf)" newStackTraceSignature="B.z:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.Decorator::ResolveRef([Obfus1]cfg.test.Decorator, [Obfus1]cfg.Tables)" newName="B" oldStackTraceSignature="cfg.test.Decorator:ResolveRef(Tables)" newStackTraceSignature="B.z:B(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.DefineFromExcel2" newFullName="B.Z" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="bool X1" newName="A" />
      <field signature="long X5" newName="b" />
      <field signature="float X6" newName="B" />
      <field signature="int X8" newName="c" />
      <field signature="string X10" newName="C" />
      <field signature="[Obfus1]cfg.test.DemoEnum X13" newName="d" />
      <field signature="[Obfus1]cfg.test.DemoFlag X132" newName="D" />
      <field signature="[Obfus1]cfg.test.DemoFlag X133" newName="e" />
      <field signature="[Obfus1]cfg.test.DemoDynamic X14" newName="E" />
      <field signature="[Obfus1]cfg.test.Shape X15" newName="f" />
      <field signature="[UnityEngine.CoreModule]UnityEngine.Vector2 V2" newName="F" />
      <field signature="long T1" newName="g" />
      <field signature="int[] K1" newName="G" />
      <field signature="int[] K2" newName="h" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,int&gt; K8" newName="H" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoE2&gt; K9" newName="i" />
      <field signature="System.Collections.Generic.List`1&lt;[UnityEngine.CoreModule]UnityEngine.Vector3&gt; K10" newName="I" />
      <field signature="System.Collections.Generic.List`1&lt;[UnityEngine.CoreModule]UnityEngine.Vector4&gt; K11" newName="j" />
      <field signature="System.Nullable`1&lt;[UnityEngine.CoreModule]UnityEngine.Vector3&gt; V11" newName="J" />
      <field signature="int __ID__" newName="k" />
      <method signature="[Obfus1]cfg.test.DefineFromExcel2 cfg.test.DefineFromExcel2::DeserializeDefineFromExcel2([Luban.Runtime]Luban.ByteBuf)" newName="K" oldStackTraceSignature="cfg.test.DefineFromExcel2:DeserializeDefineFromExcel2(ByteBuf)" newStackTraceSignature="B.Z:K(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.DefineFromExcel2::ResolveRef([Obfus1]cfg.test.DefineFromExcel2, [Obfus1]cfg.Tables)" newName="l" oldStackTraceSignature="cfg.test.DefineFromExcel2:ResolveRef(Tables)" newStackTraceSignature="B.Z:l(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.DemoD2" newFullName="B.aA" status="Renamed">
      <field signature="int X2" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.test.DemoD2 cfg.test.DemoD2::DeserializeDemoD2([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.test.DemoD2:DeserializeDemoD2(ByteBuf)" newStackTraceSignature="B.aA:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.DemoD2::ResolveRef([Obfus1]cfg.test.DemoD2, [Obfus1]cfg.Tables)" newName="B" oldStackTraceSignature="cfg.test.DemoD2:ResolveRef(Tables)" newStackTraceSignature="B.aA:B(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.DemoD3" newFullName="B.AA" status="Renamed">
      <field signature="int X3" newName="a" />
      <method signature="[Obfus1]cfg.test.DemoD3 cfg.test.DemoD3::DeserializeDemoD3([Luban.Runtime]Luban.ByteBuf)" newName="A" oldStackTraceSignature="cfg.test.DemoD3:DeserializeDemoD3(ByteBuf)" newStackTraceSignature="B.AA:A(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.DemoD3::ResolveRef([Obfus1]cfg.test.DemoD3, [Obfus1]cfg.Tables)" newName="B" oldStackTraceSignature="cfg.test.DemoD3:ResolveRef(Tables)" newStackTraceSignature="B.AA:B(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.DemoD5" newFullName="B.bA" status="Renamed">
      <field signature="[Obfus1]cfg.test.DateTimeRange Time" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.test.DemoD5 cfg.test.DemoD5::DeserializeDemoD5([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.test.DemoD5:DeserializeDemoD5(ByteBuf)" newStackTraceSignature="B.bA:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.DemoD5::ResolveRef([Obfus1]cfg.test.DemoD5, [Obfus1]cfg.Tables)" newName="B" oldStackTraceSignature="cfg.test.DemoD5:ResolveRef(Tables)" newStackTraceSignature="B.bA:B(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.DemoDynamic" newFullName="B.BA" status="Renamed">
      <field signature="int X1" newName="a" />
      <method signature="[Obfus1]cfg.test.DemoDynamic cfg.test.DemoDynamic::DeserializeDemoDynamic([Luban.Runtime]Luban.ByteBuf)" newName="A" oldStackTraceSignature="cfg.test.DemoDynamic:DeserializeDemoDynamic(ByteBuf)" newStackTraceSignature="B.BA:A(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.DemoDynamic::ResolveRef([Obfus1]cfg.test.DemoDynamic, [Obfus1]cfg.Tables)" newName="B" oldStackTraceSignature="cfg.test.DemoDynamic:ResolveRef(Tables)" newStackTraceSignature="B.BA:B(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.DemoE1" newFullName="B.cA" status="Renamed">
      <field signature="int X4" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.test.DemoE1 cfg.test.DemoE1::DeserializeDemoE1([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.test.DemoE1:DeserializeDemoE1(ByteBuf)" newStackTraceSignature="B.cA:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.DemoE1::ResolveRef([Obfus1]cfg.test.DemoE1, [Obfus1]cfg.Tables)" newName="B" oldStackTraceSignature="cfg.test.DemoE1:ResolveRef(Tables)" newStackTraceSignature="B.cA:B(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.DemoE2" newFullName="B.CA" status="Renamed">
      <field signature="System.Nullable`1&lt;int&gt; Y1" newName="a" />
      <field signature="bool Y2" newName="A" />
      <method signature="[Obfus1]cfg.test.DemoE2 cfg.test.DemoE2::DeserializeDemoE2([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.test.DemoE2:DeserializeDemoE2(ByteBuf)" newStackTraceSignature="B.CA:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.DemoE2::ResolveRef([Obfus1]cfg.test.DemoE2&amp;, [Obfus1]cfg.Tables)" newName="B" oldStackTraceSignature="cfg.test.DemoE2:ResolveRef(Tables)" newStackTraceSignature="B.CA:B(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.DemoEnum" newFullName="B.dA" status="Renamed">
      <field signature="[Obfus1]cfg.test.DemoEnum NONE" newName="a" />
      <field signature="[Obfus1]cfg.test.DemoEnum A" newName="b" />
      <field signature="[Obfus1]cfg.test.DemoEnum B" newName="c" />
      <field signature="[Obfus1]cfg.test.DemoEnum C" newName="d" />
      <field signature="[Obfus1]cfg.test.DemoEnum D" newName="e" />
      <field signature="[Obfus1]cfg.test.DemoEnum Any" newName="E" />
    </type>
    <type fullName="cfg.test.DemoExplicitType" newFullName="B.DA" status="Renamed">
      <field signature="byte X1" newName="a" />
      <field signature="short X2" newName="A" />
      <field signature="int X3" newName="b" />
      <field signature="long X4" newName="B" />
      <field signature="float X5" newName="c" />
      <field signature="double X6" newName="C" />
      <field signature="long X7" newName="d" />
      <field signature="int __ID__" newName="D" />
      <method signature="[Obfus1]cfg.test.DemoExplicitType cfg.test.DemoExplicitType::DeserializeDemoExplicitType([Luban.Runtime]Luban.ByteBuf)" newName="e" oldStackTraceSignature="cfg.test.DemoExplicitType:DeserializeDemoExplicitType(ByteBuf)" newStackTraceSignature="B.DA:e(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.DemoExplicitType::ResolveRef([Obfus1]cfg.test.DemoExplicitType, [Obfus1]cfg.Tables)" newName="E" oldStackTraceSignature="cfg.test.DemoExplicitType:ResolveRef(Tables)" newStackTraceSignature="B.DA:E(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.DemoFlag" newFullName="B.eA" status="Renamed">
      <field signature="[Obfus1]cfg.test.DemoFlag A" newName="a" />
      <field signature="[Obfus1]cfg.test.DemoFlag B" newName="b" />
      <field signature="[Obfus1]cfg.test.DemoFlag C" newName="c" />
      <field signature="[Obfus1]cfg.test.DemoFlag D" newName="d" />
    </type>
    <type fullName="cfg.test.DemoGroup" newFullName="B.EA" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="int X1" newName="A" />
      <field signature="[Obfus1]cfg.test.DemoGroup X1_Ref" newName="b" />
      <field signature="int X4" newName="B" />
      <field signature="[Obfus1]cfg.test.InnerGroup X5" newName="c" />
      <field signature="int __ID__" newName="C" />
      <method signature="[Obfus1]cfg.test.DemoGroup cfg.test.DemoGroup::DeserializeDemoGroup([Luban.Runtime]Luban.ByteBuf)" newName="d" oldStackTraceSignature="cfg.test.DemoGroup:DeserializeDemoGroup(ByteBuf)" newStackTraceSignature="B.EA:d(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.DemoGroup::ResolveRef([Obfus1]cfg.test.DemoGroup, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.DemoGroup:ResolveRef(Tables)" newStackTraceSignature="B.EA:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.DemoPrimitiveTypesTable" newFullName="B.fA" status="Renamed">
      <field signature="bool X1" newName="a" />
      <field signature="byte X2" newName="A" />
      <field signature="short X3" newName="b" />
      <field signature="int X4" newName="B" />
      <field signature="long X5" newName="c" />
      <field signature="float X6" newName="C" />
      <field signature="double X7" newName="d" />
      <field signature="string S1" newName="D" />
      <field signature="string S2" newName="e" />
      <field signature="[UnityEngine.CoreModule]UnityEngine.Vector2 V2" newName="E" />
      <field signature="[UnityEngine.CoreModule]UnityEngine.Vector3 V3" newName="f" />
      <field signature="[UnityEngine.CoreModule]UnityEngine.Vector4 V4" newName="F" />
      <field signature="long T1" newName="g" />
      <field signature="int __ID__" newName="G" />
      <method signature="[Obfus1]cfg.test.DemoPrimitiveTypesTable cfg.test.DemoPrimitiveTypesTable::DeserializeDemoPrimitiveTypesTable([Luban.Runtime]Luban.ByteBuf)" newName="h" oldStackTraceSignature="cfg.test.DemoPrimitiveTypesTable:DeserializeDemoPrimitiveTypesTable(ByteBuf)" newStackTraceSignature="B.fA:h(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.DemoPrimitiveTypesTable::ResolveRef([Obfus1]cfg.test.DemoPrimitiveTypesTable, [Obfus1]cfg.Tables)" newName="H" oldStackTraceSignature="cfg.test.DemoPrimitiveTypesTable:ResolveRef(Tables)" newStackTraceSignature="B.fA:H(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.DemoSingletonType" newFullName="B.FA" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="string Name" newName="A" />
      <field signature="[Obfus1]cfg.test.DemoDynamic Date" newName="b" />
      <field signature="int __ID__" newName="B" />
      <method signature="[Obfus1]cfg.test.DemoSingletonType cfg.test.DemoSingletonType::DeserializeDemoSingletonType([Luban.Runtime]Luban.ByteBuf)" newName="c" oldStackTraceSignature="cfg.test.DemoSingletonType:DeserializeDemoSingletonType(ByteBuf)" newStackTraceSignature="B.FA:c(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.DemoSingletonType::ResolveRef([Obfus1]cfg.test.DemoSingletonType, [Obfus1]cfg.Tables)" newName="C" oldStackTraceSignature="cfg.test.DemoSingletonType:ResolveRef(Tables)" newStackTraceSignature="B.FA:C(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.DemoType1" newFullName="B.gA" status="Renamed">
      <field signature="int X1" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.test.DemoType1 cfg.test.DemoType1::DeserializeDemoType1([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.test.DemoType1:DeserializeDemoType1(ByteBuf)" newStackTraceSignature="B.gA:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.DemoType1::ResolveRef([Obfus1]cfg.test.DemoType1, [Obfus1]cfg.Tables)" newName="B" oldStackTraceSignature="cfg.test.DemoType1:ResolveRef(Tables)" newStackTraceSignature="B.gA:B(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.DemoType2" newFullName="B.GA" status="Renamed">
      <field signature="int X4" newName="a" />
      <field signature="bool X1" newName="A" />
      <field signature="byte X2" newName="b" />
      <field signature="short X3" newName="B" />
      <field signature="long X5" newName="c" />
      <field signature="float X6" newName="C" />
      <field signature="double X7" newName="d" />
      <field signature="short X80" newName="D" />
      <field signature="int X8" newName="e" />
      <field signature="long X9" newName="E" />
      <field signature="string X10" newName="f" />
      <field signature="[Obfus1]cfg.test.DemoType1 X12" newName="F" />
      <field signature="[Obfus1]cfg.test.DemoEnum X13" newName="g" />
      <field signature="[Obfus1]cfg.test.DemoDynamic X14" newName="G" />
      <field signature="string S1" newName="h" />
      <field signature="long T1" newName="H" />
      <field signature="int[] K1" newName="i" />
      <field signature="System.Collections.Generic.List`1&lt;int&gt; K2" newName="I" />
      <field signature="[System.Core]System.Collections.Generic.HashSet`1&lt;int&gt; K5" newName="j" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,int&gt; K8" newName="J" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DemoType2&gt; K8_Ref" newName="k" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoE2&gt; K9" newName="K" />
      <field signature="[Obfus1]cfg.test.DemoDynamic[] K15" newName="l" />
      <field signature="int __ID__" newName="L" />
      <method signature="[Obfus1]cfg.test.DemoType2 cfg.test.DemoType2::DeserializeDemoType2([Luban.Runtime]Luban.ByteBuf)" newName="m" oldStackTraceSignature="cfg.test.DemoType2:DeserializeDemoType2(ByteBuf)" newStackTraceSignature="B.GA:m(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.DemoType2::ResolveRef([Obfus1]cfg.test.DemoType2, [Obfus1]cfg.Tables)" newName="M" oldStackTraceSignature="cfg.test.DemoType2:ResolveRef(Tables)" newStackTraceSignature="B.GA:M(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.DetectEncoding" newFullName="B.hA" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="string Name" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test.DetectEncoding cfg.test.DetectEncoding::DeserializeDetectEncoding([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.DetectEncoding:DeserializeDetectEncoding(ByteBuf)" newStackTraceSignature="B.hA:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.DetectEncoding::ResolveRef([Obfus1]cfg.test.DetectEncoding, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.DetectEncoding:ResolveRef(Tables)" newStackTraceSignature="B.hA:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.Equipment" newFullName="B.HA" status="Renamed">
      <field signature="[Obfus1]cfg.test.DemoEnum Attr" newName="a" />
      <field signature="int Value" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test.Equipment cfg.test.Equipment::DeserializeEquipment([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.Equipment:DeserializeEquipment(ByteBuf)" newStackTraceSignature="B.HA:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.Equipment::ResolveRef([Obfus1]cfg.test.Equipment, [Obfus1]cfg.Tables)" newName="B" oldStackTraceSignature="cfg.test.Equipment:ResolveRef(Tables)" newStackTraceSignature="B.HA:B(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.ETestEmptyEnum" newFullName="B.iA" status="Renamed" />
    <type fullName="cfg.test.ETestEmptyEnum2" newFullName="B.IA" status="Renamed">
      <field signature="[Obfus1]cfg.test.ETestEmptyEnum2 SMALL_THAN_256" newName="a" />
      <field signature="[Obfus1]cfg.test.ETestEmptyEnum2 X_256" newName="A" />
      <field signature="[Obfus1]cfg.test.ETestEmptyEnum2 X_257" newName="b" />
    </type>
    <type fullName="cfg.test.ETestQuality" newFullName="B.jA" status="Renamed">
      <field signature="[Obfus1]cfg.test.ETestQuality A" newName="a" />
      <field signature="[Obfus1]cfg.test.ETestQuality B" newName="b" />
      <field signature="[Obfus1]cfg.test.ETestQuality C" newName="c" />
      <field signature="[Obfus1]cfg.test.ETestQuality D" newName="d" />
    </type>
    <type fullName="cfg.test.ETestUeType" newFullName="B.JA" status="Renamed">
      <field signature="[Obfus1]cfg.test.ETestUeType WHITE" newName="a" />
      <field signature="[Obfus1]cfg.test.ETestUeType BLACK" newName="A" />
    </type>
    <type fullName="cfg.test.ExcelFromJson" newFullName="B.kA" status="Renamed">
      <field signature="int X4" newName="a" />
      <field signature="bool X1" newName="A" />
      <field signature="long X5" newName="b" />
      <field signature="float X6" newName="B" />
      <field signature="string S1" newName="c" />
      <field signature="string S2" newName="C" />
      <field signature="long T1" newName="d" />
      <field signature="[Obfus1]cfg.test.DemoType1 X12" newName="D" />
      <field signature="[Obfus1]cfg.test.DemoEnum X13" newName="e" />
      <field signature="[Obfus1]cfg.test.DemoDynamic X14" newName="E" />
      <field signature="int[] K1" newName="f" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,int&gt; K8" newName="F" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoE2&gt; K9" newName="g" />
      <field signature="[Obfus1]cfg.test.DemoDynamic[] K15" newName="G" />
      <field signature="int __ID__" newName="h" />
      <method signature="[Obfus1]cfg.test.ExcelFromJson cfg.test.ExcelFromJson::DeserializeExcelFromJson([Luban.Runtime]Luban.ByteBuf)" newName="H" oldStackTraceSignature="cfg.test.ExcelFromJson:DeserializeExcelFromJson(ByteBuf)" newStackTraceSignature="B.kA:H(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.ExcelFromJson::ResolveRef([Obfus1]cfg.test.ExcelFromJson, [Obfus1]cfg.Tables)" newName="i" oldStackTraceSignature="cfg.test.ExcelFromJson:ResolveRef(Tables)" newStackTraceSignature="B.kA:i(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.ExcelFromJsonMultiRow" newFullName="B.KA" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="int X" newName="A" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestRow&gt; Items" newName="b" />
      <field signature="int __ID__" newName="B" />
      <method signature="[Obfus1]cfg.test.ExcelFromJsonMultiRow cfg.test.ExcelFromJsonMultiRow::DeserializeExcelFromJsonMultiRow([Luban.Runtime]Luban.ByteBuf)" newName="c" oldStackTraceSignature="cfg.test.ExcelFromJsonMultiRow:DeserializeExcelFromJsonMultiRow(ByteBuf)" newStackTraceSignature="B.KA:c(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.ExcelFromJsonMultiRow::ResolveRef([Obfus1]cfg.test.ExcelFromJsonMultiRow, [Obfus1]cfg.Tables)" newName="C" oldStackTraceSignature="cfg.test.ExcelFromJsonMultiRow:ResolveRef(Tables)" newStackTraceSignature="B.KA:C(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.Foo" newFullName="B.lA" status="Renamed">
      <field signature="int Y1" newName="a" />
      <field signature="int Y2" newName="A" />
      <field signature="int Y3" newName="b" />
      <field signature="int __ID__" newName="B" />
      <method signature="[Obfus1]cfg.test.Foo cfg.test.Foo::DeserializeFoo([Luban.Runtime]Luban.ByteBuf)" newName="c" oldStackTraceSignature="cfg.test.Foo:DeserializeFoo(ByteBuf)" newStackTraceSignature="B.lA:c(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.Foo::ResolveRef([Obfus1]cfg.test.Foo, [Obfus1]cfg.Tables)" newName="C" oldStackTraceSignature="cfg.test.Foo:ResolveRef(Tables)" newStackTraceSignature="B.lA:C(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.H1" newFullName="B.LA" status="Renamed">
      <field signature="[Obfus1]cfg.test.H2 Y2" newName="a" />
      <field signature="int Y3" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test.H1 cfg.test.H1::DeserializeH1([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.H1:DeserializeH1(ByteBuf)" newStackTraceSignature="B.LA:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.H1::ResolveRef([Obfus1]cfg.test.H1, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.H1:ResolveRef(Tables)" newStackTraceSignature="B.LA:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.H2" newFullName="B.mA" status="Renamed">
      <field signature="int Z2" newName="a" />
      <field signature="int Z3" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test.H2 cfg.test.H2::DeserializeH2([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.H2:DeserializeH2(ByteBuf)" newStackTraceSignature="B.mA:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.H2::ResolveRef([Obfus1]cfg.test.H2, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.H2:ResolveRef(Tables)" newStackTraceSignature="B.mA:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.InnerGroup" newFullName="B.MA" status="Renamed">
      <field signature="int Y1" newName="a" />
      <field signature="int Y2" newName="A" />
      <field signature="int Y4" newName="b" />
      <field signature="int __ID__" newName="B" />
      <method signature="[Obfus1]cfg.test.InnerGroup cfg.test.InnerGroup::DeserializeInnerGroup([Luban.Runtime]Luban.ByteBuf)" newName="c" oldStackTraceSignature="cfg.test.InnerGroup:DeserializeInnerGroup(ByteBuf)" newStackTraceSignature="B.MA:c(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.InnerGroup::ResolveRef([Obfus1]cfg.test.InnerGroup, [Obfus1]cfg.Tables)" newName="C" oldStackTraceSignature="cfg.test.InnerGroup:ResolveRef(Tables)" newStackTraceSignature="B.MA:C(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.Item" newFullName="B.nA" status="Renamed">
      <field signature="int Num" newName="a" />
      <field signature="int Price" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test.Item cfg.test.Item::DeserializeItem([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.Item:DeserializeItem(ByteBuf)" newStackTraceSignature="B.nA:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.Item::ResolveRef([Obfus1]cfg.test.Item, [Obfus1]cfg.Tables)" newName="B" oldStackTraceSignature="cfg.test.Item:ResolveRef(Tables)" newStackTraceSignature="B.nA:B(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.ItemBase" newFullName="B.NA" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="string Name" newName="A" />
      <field signature="string Desc" newName="b" />
      <method signature="[Obfus1]cfg.test.ItemBase cfg.test.ItemBase::DeserializeItemBase([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.ItemBase:DeserializeItemBase(ByteBuf)" newStackTraceSignature="B.NA:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.ItemBase::ResolveRef([Obfus1]cfg.test.ItemBase, [Obfus1]cfg.Tables)" newName="B" oldStackTraceSignature="cfg.test.ItemBase:ResolveRef(Tables)" newStackTraceSignature="B.NA:B(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.MultiIndexList" newFullName="B.oA" status="Renamed">
      <field signature="int Id1" newName="a" />
      <field signature="long Id2" newName="A" />
      <field signature="string Id3" newName="b" />
      <field signature="int Num" newName="B" />
      <field signature="string Desc" newName="c" />
      <field signature="int __ID__" newName="C" />
      <method signature="[Obfus1]cfg.test.MultiIndexList cfg.test.MultiIndexList::DeserializeMultiIndexList([Luban.Runtime]Luban.ByteBuf)" newName="d" oldStackTraceSignature="cfg.test.MultiIndexList:DeserializeMultiIndexList(ByteBuf)" newStackTraceSignature="B.oA:d(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.MultiIndexList::ResolveRef([Obfus1]cfg.test.MultiIndexList, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.MultiIndexList:ResolveRef(Tables)" newStackTraceSignature="B.oA:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.MultiRowRecord" newFullName="B.OA" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="string Name" newName="A" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.MultiRowType1&gt; OneRows" newName="b" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.MultiRowType1&gt; MultiRows1" newName="B" />
      <field signature="[Obfus1]cfg.test.MultiRowType1[] MultiRows2" newName="c" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.MultiRowType2&gt; MultiRows4" newName="C" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.MultiRowType3&gt; MultiRows5" newName="d" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.MultiRowType2&gt; MultiRows6" newName="D" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,int&gt; MultiRows7" newName="e" />
      <field signature="int __ID__" newName="E" />
      <method signature="[Obfus1]cfg.test.MultiRowRecord cfg.test.MultiRowRecord::DeserializeMultiRowRecord([Luban.Runtime]Luban.ByteBuf)" newName="f" oldStackTraceSignature="cfg.test.MultiRowRecord:DeserializeMultiRowRecord(ByteBuf)" newStackTraceSignature="B.OA:f(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.MultiRowRecord::ResolveRef([Obfus1]cfg.test.MultiRowRecord, [Obfus1]cfg.Tables)" newName="F" oldStackTraceSignature="cfg.test.MultiRowRecord:ResolveRef(Tables)" newStackTraceSignature="B.OA:F(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.MultiRowTitle" newFullName="B.pA" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="string Name" newName="A" />
      <field signature="[Obfus1]cfg.test.H1 X1" newName="b" />
      <field signature="[Obfus1]cfg.test.H2 X20" newName="B" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.H2&gt; X2" newName="c" />
      <field signature="[Obfus1]cfg.test.H2[] X3" newName="C" />
      <field signature="[Obfus1]cfg.test.H2[] X4" newName="d" />
      <field signature="int __ID__" newName="D" />
      <method signature="[Obfus1]cfg.test.MultiRowTitle cfg.test.MultiRowTitle::DeserializeMultiRowTitle([Luban.Runtime]Luban.ByteBuf)" newName="e" oldStackTraceSignature="cfg.test.MultiRowTitle:DeserializeMultiRowTitle(ByteBuf)" newStackTraceSignature="B.pA:e(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.MultiRowTitle::ResolveRef([Obfus1]cfg.test.MultiRowTitle, [Obfus1]cfg.Tables)" newName="E" oldStackTraceSignature="cfg.test.MultiRowTitle:ResolveRef(Tables)" newStackTraceSignature="B.pA:E(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.MultiRowType1" newFullName="B.PA" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="int X" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test.MultiRowType1 cfg.test.MultiRowType1::DeserializeMultiRowType1([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.MultiRowType1:DeserializeMultiRowType1(ByteBuf)" newStackTraceSignature="B.PA:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.MultiRowType1::ResolveRef([Obfus1]cfg.test.MultiRowType1, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.MultiRowType1:ResolveRef(Tables)" newStackTraceSignature="B.PA:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.MultiRowType2" newFullName="B.qA" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="int X" newName="A" />
      <field signature="float Y" newName="b" />
      <field signature="int __ID__" newName="B" />
      <method signature="[Obfus1]cfg.test.MultiRowType2 cfg.test.MultiRowType2::DeserializeMultiRowType2([Luban.Runtime]Luban.ByteBuf)" newName="c" oldStackTraceSignature="cfg.test.MultiRowType2:DeserializeMultiRowType2(ByteBuf)" newStackTraceSignature="B.qA:c(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.MultiRowType2::ResolveRef([Obfus1]cfg.test.MultiRowType2, [Obfus1]cfg.Tables)" newName="C" oldStackTraceSignature="cfg.test.MultiRowType2:ResolveRef(Tables)" newStackTraceSignature="B.qA:C(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.MultiRowType3" newFullName="B.QA" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.MultiRowType1&gt; Items" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test.MultiRowType3 cfg.test.MultiRowType3::DeserializeMultiRowType3([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.MultiRowType3:DeserializeMultiRowType3(ByteBuf)" newStackTraceSignature="B.QA:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.MultiRowType3::ResolveRef([Obfus1]cfg.test.MultiRowType3, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.MultiRowType3:ResolveRef(Tables)" newStackTraceSignature="B.QA:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.MultiUnionIndexList" newFullName="B.rA" status="Renamed">
      <field signature="int Id1" newName="a" />
      <field signature="long Id2" newName="A" />
      <field signature="string Id3" newName="b" />
      <field signature="int Num" newName="B" />
      <field signature="string Desc" newName="c" />
      <field signature="int __ID__" newName="C" />
      <method signature="[Obfus1]cfg.test.MultiUnionIndexList cfg.test.MultiUnionIndexList::DeserializeMultiUnionIndexList([Luban.Runtime]Luban.ByteBuf)" newName="d" oldStackTraceSignature="cfg.test.MultiUnionIndexList:DeserializeMultiUnionIndexList(ByteBuf)" newStackTraceSignature="B.rA:d(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.MultiUnionIndexList::ResolveRef([Obfus1]cfg.test.MultiUnionIndexList, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.MultiUnionIndexList:ResolveRef(Tables)" newStackTraceSignature="B.rA:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.NotIndexList" newFullName="B.RA" status="Renamed">
      <field signature="int X" newName="a" />
      <field signature="int Y" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test.NotIndexList cfg.test.NotIndexList::DeserializeNotIndexList([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.NotIndexList:DeserializeNotIndexList(ByteBuf)" newStackTraceSignature="B.RA:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.NotIndexList::ResolveRef([Obfus1]cfg.test.NotIndexList, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.NotIndexList:ResolveRef(Tables)" newStackTraceSignature="B.RA:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.Path" newFullName="B.sA" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="string Res" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test.Path cfg.test.Path::DeserializePath([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.Path:DeserializePath(ByteBuf)" newStackTraceSignature="B.sA:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.Path::ResolveRef([Obfus1]cfg.test.Path, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.Path:ResolveRef(Tables)" newStackTraceSignature="B.sA:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.RefBean" newFullName="B.SA" status="Renamed">
      <field signature="System.Collections.Generic.List`1&lt;int&gt; Arr" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestBeRef&gt; Arr_Ref" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test.RefBean cfg.test.RefBean::DeserializeRefBean([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.RefBean:DeserializeRefBean(ByteBuf)" newStackTraceSignature="B.SA:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.RefBean::ResolveRef([Obfus1]cfg.test.RefBean, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.RefBean:ResolveRef(Tables)" newStackTraceSignature="B.SA:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.RefDynamicBase" newFullName="B.tA" status="Renamed">
      <field signature="int X" newName="a" />
      <field signature="[Obfus1]cfg.test.TestBeRef X_Ref" newName="A" />
      <method signature="[Obfus1]cfg.test.RefDynamicBase cfg.test.RefDynamicBase::DeserializeRefDynamicBase([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.test.RefDynamicBase:DeserializeRefDynamicBase(ByteBuf)" newStackTraceSignature="B.tA:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.RefDynamicBase::ResolveRef([Obfus1]cfg.test.RefDynamicBase, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.RefDynamicBase:ResolveRef(Tables)" newStackTraceSignature="B.tA:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.SepBean1" newFullName="B.TA" status="Renamed">
      <field signature="int A" newName="a" />
      <field signature="int B" newName="b" />
      <field signature="string C" newName="c" />
      <field signature="int __ID__" newName="d" />
      <method signature="[Obfus1]cfg.test.SepBean1 cfg.test.SepBean1::DeserializeSepBean1([Luban.Runtime]Luban.ByteBuf)" newName="D" oldStackTraceSignature="cfg.test.SepBean1:DeserializeSepBean1(ByteBuf)" newStackTraceSignature="B.TA:D(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.SepBean1::ResolveRef([Obfus1]cfg.test.SepBean1, [Obfus1]cfg.Tables)" newName="e" oldStackTraceSignature="cfg.test.SepBean1:ResolveRef(Tables)" newStackTraceSignature="B.TA:e(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.SepVector" newFullName="B.uA" status="Renamed">
      <field signature="int X" newName="a" />
      <field signature="int Y" newName="A" />
      <field signature="int Z" newName="b" />
      <field signature="int __ID__" newName="B" />
      <method signature="[Obfus1]cfg.test.SepVector cfg.test.SepVector::DeserializeSepVector([Luban.Runtime]Luban.ByteBuf)" newName="c" oldStackTraceSignature="cfg.test.SepVector:DeserializeSepVector(ByteBuf)" newStackTraceSignature="B.uA:c(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.SepVector::ResolveRef([Obfus1]cfg.test.SepVector, [Obfus1]cfg.Tables)" newName="C" oldStackTraceSignature="cfg.test.SepVector:ResolveRef(Tables)" newStackTraceSignature="B.uA:C(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.Shape" newFullName="B.UA" status="Renamed">
      <method signature="[Obfus1]cfg.test.Shape cfg.test.Shape::DeserializeShape([Luban.Runtime]Luban.ByteBuf)" newName="a" oldStackTraceSignature="cfg.test.Shape:DeserializeShape(ByteBuf)" newStackTraceSignature="B.UA:a(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.Shape::ResolveRef([Obfus1]cfg.test.Shape, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.Shape:ResolveRef(Tables)" newStackTraceSignature="B.UA:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbAutoImport2" newFullName="B.vA" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.AutoImport2&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.AutoImport2&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.AutoImport2&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.AutoImport2&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.AutoImport2 Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.AutoImport2&gt; cfg.test.TbAutoImport2::get_DataMap([Obfus1]cfg.test.TbAutoImport2)" newName="b" oldStackTraceSignature="cfg.test.TbAutoImport2:get_DataMap()" newStackTraceSignature="B.vA:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.AutoImport2&gt; cfg.test.TbAutoImport2::get_DataList([Obfus1]cfg.test.TbAutoImport2)" newName="B" oldStackTraceSignature="cfg.test.TbAutoImport2:get_DataList()" newStackTraceSignature="B.vA:B()" />
      <method signature="[Obfus1]cfg.test.AutoImport2 cfg.test.TbAutoImport2::GetOrDefault([Obfus1]cfg.test.TbAutoImport2, int)" newName="c" oldStackTraceSignature="cfg.test.TbAutoImport2:GetOrDefault(Int32)" newStackTraceSignature="B.vA:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.AutoImport2 cfg.test.TbAutoImport2::Get([Obfus1]cfg.test.TbAutoImport2, int)" newName="C" oldStackTraceSignature="cfg.test.TbAutoImport2:Get(Int32)" newStackTraceSignature="B.vA:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.AutoImport2 cfg.test.TbAutoImport2::get_Item([Obfus1]cfg.test.TbAutoImport2, int)" newName="d" oldStackTraceSignature="cfg.test.TbAutoImport2:get_Item(Int32)" newStackTraceSignature="B.vA:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbAutoImport2::ResolveRef([Obfus1]cfg.test.TbAutoImport2, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbAutoImport2:ResolveRef(Tables)" newStackTraceSignature="B.vA:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbCompositeJsonTable1" newFullName="B.VA" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.CompositeJsonTable1&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.CompositeJsonTable1&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.CompositeJsonTable1&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.CompositeJsonTable1&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.CompositeJsonTable1 Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.CompositeJsonTable1&gt; cfg.test.TbCompositeJsonTable1::get_DataMap([Obfus1]cfg.test.TbCompositeJsonTable1)" newName="b" oldStackTraceSignature="cfg.test.TbCompositeJsonTable1:get_DataMap()" newStackTraceSignature="B.VA:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.CompositeJsonTable1&gt; cfg.test.TbCompositeJsonTable1::get_DataList([Obfus1]cfg.test.TbCompositeJsonTable1)" newName="B" oldStackTraceSignature="cfg.test.TbCompositeJsonTable1:get_DataList()" newStackTraceSignature="B.VA:B()" />
      <method signature="[Obfus1]cfg.test.CompositeJsonTable1 cfg.test.TbCompositeJsonTable1::GetOrDefault([Obfus1]cfg.test.TbCompositeJsonTable1, int)" newName="c" oldStackTraceSignature="cfg.test.TbCompositeJsonTable1:GetOrDefault(Int32)" newStackTraceSignature="B.VA:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.CompositeJsonTable1 cfg.test.TbCompositeJsonTable1::Get([Obfus1]cfg.test.TbCompositeJsonTable1, int)" newName="C" oldStackTraceSignature="cfg.test.TbCompositeJsonTable1:Get(Int32)" newStackTraceSignature="B.VA:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.CompositeJsonTable1 cfg.test.TbCompositeJsonTable1::get_Item([Obfus1]cfg.test.TbCompositeJsonTable1, int)" newName="d" oldStackTraceSignature="cfg.test.TbCompositeJsonTable1:get_Item(Int32)" newStackTraceSignature="B.VA:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbCompositeJsonTable1::ResolveRef([Obfus1]cfg.test.TbCompositeJsonTable1, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbCompositeJsonTable1:ResolveRef(Tables)" newStackTraceSignature="B.VA:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbCompositeJsonTable2" newFullName="B.wA" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.CompositeJsonTable2&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.CompositeJsonTable2&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.CompositeJsonTable2&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.CompositeJsonTable2&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.CompositeJsonTable2 Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.CompositeJsonTable2&gt; cfg.test.TbCompositeJsonTable2::get_DataMap([Obfus1]cfg.test.TbCompositeJsonTable2)" newName="b" oldStackTraceSignature="cfg.test.TbCompositeJsonTable2:get_DataMap()" newStackTraceSignature="B.wA:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.CompositeJsonTable2&gt; cfg.test.TbCompositeJsonTable2::get_DataList([Obfus1]cfg.test.TbCompositeJsonTable2)" newName="B" oldStackTraceSignature="cfg.test.TbCompositeJsonTable2:get_DataList()" newStackTraceSignature="B.wA:B()" />
      <method signature="[Obfus1]cfg.test.CompositeJsonTable2 cfg.test.TbCompositeJsonTable2::GetOrDefault([Obfus1]cfg.test.TbCompositeJsonTable2, int)" newName="c" oldStackTraceSignature="cfg.test.TbCompositeJsonTable2:GetOrDefault(Int32)" newStackTraceSignature="B.wA:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.CompositeJsonTable2 cfg.test.TbCompositeJsonTable2::Get([Obfus1]cfg.test.TbCompositeJsonTable2, int)" newName="C" oldStackTraceSignature="cfg.test.TbCompositeJsonTable2:Get(Int32)" newStackTraceSignature="B.wA:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.CompositeJsonTable2 cfg.test.TbCompositeJsonTable2::get_Item([Obfus1]cfg.test.TbCompositeJsonTable2, int)" newName="d" oldStackTraceSignature="cfg.test.TbCompositeJsonTable2:get_Item(Int32)" newStackTraceSignature="B.wA:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbCompositeJsonTable2::ResolveRef([Obfus1]cfg.test.TbCompositeJsonTable2, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbCompositeJsonTable2:ResolveRef(Tables)" newStackTraceSignature="B.wA:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbCompositeJsonTable3" newFullName="B.WA" status="Renamed">
      <field signature="[Obfus1]cfg.test.CompositeJsonTable3 _data" newName="a" />
      <property signature="[Obfus1]cfg.test.CompositeJsonTable3 Data" newName="D" />
      <property signature="int A" newName="e" />
      <property signature="int B" newName="E" />
      <method signature="[Obfus1]cfg.test.CompositeJsonTable3 cfg.test.TbCompositeJsonTable3::get_Data([Obfus1]cfg.test.TbCompositeJsonTable3)" newName="b" oldStackTraceSignature="cfg.test.TbCompositeJsonTable3:get_Data()" newStackTraceSignature="B.WA:b()" />
      <method signature="int cfg.test.TbCompositeJsonTable3::get_A([Obfus1]cfg.test.TbCompositeJsonTable3)" newName="c" oldStackTraceSignature="cfg.test.TbCompositeJsonTable3:get_A()" newStackTraceSignature="B.WA:c()" />
      <method signature="int cfg.test.TbCompositeJsonTable3::get_B([Obfus1]cfg.test.TbCompositeJsonTable3)" newName="C" oldStackTraceSignature="cfg.test.TbCompositeJsonTable3:get_B()" newStackTraceSignature="B.WA:C()" />
      <method signature="void cfg.test.TbCompositeJsonTable3::ResolveRef([Obfus1]cfg.test.TbCompositeJsonTable3, [Obfus1]cfg.Tables)" newName="d" oldStackTraceSignature="cfg.test.TbCompositeJsonTable3:ResolveRef(Tables)" newStackTraceSignature="B.WA:d(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbDataFromMisc" newFullName="B.xA" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DemoType2&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoType2&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DemoType2&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoType2&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.DemoType2 Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DemoType2&gt; cfg.test.TbDataFromMisc::get_DataMap([Obfus1]cfg.test.TbDataFromMisc)" newName="b" oldStackTraceSignature="cfg.test.TbDataFromMisc:get_DataMap()" newStackTraceSignature="B.xA:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoType2&gt; cfg.test.TbDataFromMisc::get_DataList([Obfus1]cfg.test.TbDataFromMisc)" newName="B" oldStackTraceSignature="cfg.test.TbDataFromMisc:get_DataList()" newStackTraceSignature="B.xA:B()" />
      <method signature="[Obfus1]cfg.test.DemoType2 cfg.test.TbDataFromMisc::GetOrDefault([Obfus1]cfg.test.TbDataFromMisc, int)" newName="c" oldStackTraceSignature="cfg.test.TbDataFromMisc:GetOrDefault(Int32)" newStackTraceSignature="B.xA:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.DemoType2 cfg.test.TbDataFromMisc::Get([Obfus1]cfg.test.TbDataFromMisc, int)" newName="C" oldStackTraceSignature="cfg.test.TbDataFromMisc:Get(Int32)" newStackTraceSignature="B.xA:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.DemoType2 cfg.test.TbDataFromMisc::get_Item([Obfus1]cfg.test.TbDataFromMisc, int)" newName="d" oldStackTraceSignature="cfg.test.TbDataFromMisc:get_Item(Int32)" newStackTraceSignature="B.xA:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbDataFromMisc::ResolveRef([Obfus1]cfg.test.TbDataFromMisc, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbDataFromMisc:ResolveRef(Tables)" newStackTraceSignature="B.xA:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbDefineFromExcel2" newFullName="B.XA" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DefineFromExcel2&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DefineFromExcel2&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DefineFromExcel2&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DefineFromExcel2&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.DefineFromExcel2 Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DefineFromExcel2&gt; cfg.test.TbDefineFromExcel2::get_DataMap([Obfus1]cfg.test.TbDefineFromExcel2)" newName="b" oldStackTraceSignature="cfg.test.TbDefineFromExcel2:get_DataMap()" newStackTraceSignature="B.XA:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DefineFromExcel2&gt; cfg.test.TbDefineFromExcel2::get_DataList([Obfus1]cfg.test.TbDefineFromExcel2)" newName="B" oldStackTraceSignature="cfg.test.TbDefineFromExcel2:get_DataList()" newStackTraceSignature="B.XA:B()" />
      <method signature="[Obfus1]cfg.test.DefineFromExcel2 cfg.test.TbDefineFromExcel2::GetOrDefault([Obfus1]cfg.test.TbDefineFromExcel2, int)" newName="c" oldStackTraceSignature="cfg.test.TbDefineFromExcel2:GetOrDefault(Int32)" newStackTraceSignature="B.XA:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.DefineFromExcel2 cfg.test.TbDefineFromExcel2::Get([Obfus1]cfg.test.TbDefineFromExcel2, int)" newName="C" oldStackTraceSignature="cfg.test.TbDefineFromExcel2:Get(Int32)" newStackTraceSignature="B.XA:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.DefineFromExcel2 cfg.test.TbDefineFromExcel2::get_Item([Obfus1]cfg.test.TbDefineFromExcel2, int)" newName="d" oldStackTraceSignature="cfg.test.TbDefineFromExcel2:get_Item(Int32)" newStackTraceSignature="B.XA:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbDefineFromExcel2::ResolveRef([Obfus1]cfg.test.TbDefineFromExcel2, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbDefineFromExcel2:ResolveRef(Tables)" newStackTraceSignature="B.XA:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbDemoGroup" newFullName="B.yA" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DemoGroup&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoGroup&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DemoGroup&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoGroup&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.DemoGroup Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DemoGroup&gt; cfg.test.TbDemoGroup::get_DataMap([Obfus1]cfg.test.TbDemoGroup)" newName="b" oldStackTraceSignature="cfg.test.TbDemoGroup:get_DataMap()" newStackTraceSignature="B.yA:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoGroup&gt; cfg.test.TbDemoGroup::get_DataList([Obfus1]cfg.test.TbDemoGroup)" newName="B" oldStackTraceSignature="cfg.test.TbDemoGroup:get_DataList()" newStackTraceSignature="B.yA:B()" />
      <method signature="[Obfus1]cfg.test.DemoGroup cfg.test.TbDemoGroup::GetOrDefault([Obfus1]cfg.test.TbDemoGroup, int)" newName="c" oldStackTraceSignature="cfg.test.TbDemoGroup:GetOrDefault(Int32)" newStackTraceSignature="B.yA:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.DemoGroup cfg.test.TbDemoGroup::Get([Obfus1]cfg.test.TbDemoGroup, int)" newName="C" oldStackTraceSignature="cfg.test.TbDemoGroup:Get(Int32)" newStackTraceSignature="B.yA:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.DemoGroup cfg.test.TbDemoGroup::get_Item([Obfus1]cfg.test.TbDemoGroup, int)" newName="d" oldStackTraceSignature="cfg.test.TbDemoGroup:get_Item(Int32)" newStackTraceSignature="B.yA:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbDemoGroup::ResolveRef([Obfus1]cfg.test.TbDemoGroup, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbDemoGroup:ResolveRef(Tables)" newStackTraceSignature="B.yA:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbDemoGroup_C" newFullName="B.YA" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DemoGroup&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoGroup&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DemoGroup&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoGroup&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.DemoGroup Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DemoGroup&gt; cfg.test.TbDemoGroup_C::get_DataMap([Obfus1]cfg.test.TbDemoGroup_C)" newName="b" oldStackTraceSignature="cfg.test.TbDemoGroup_C:get_DataMap()" newStackTraceSignature="B.YA:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoGroup&gt; cfg.test.TbDemoGroup_C::get_DataList([Obfus1]cfg.test.TbDemoGroup_C)" newName="B" oldStackTraceSignature="cfg.test.TbDemoGroup_C:get_DataList()" newStackTraceSignature="B.YA:B()" />
      <method signature="[Obfus1]cfg.test.DemoGroup cfg.test.TbDemoGroup_C::GetOrDefault([Obfus1]cfg.test.TbDemoGroup_C, int)" newName="c" oldStackTraceSignature="cfg.test.TbDemoGroup_C:GetOrDefault(Int32)" newStackTraceSignature="B.YA:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.DemoGroup cfg.test.TbDemoGroup_C::Get([Obfus1]cfg.test.TbDemoGroup_C, int)" newName="C" oldStackTraceSignature="cfg.test.TbDemoGroup_C:Get(Int32)" newStackTraceSignature="B.YA:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.DemoGroup cfg.test.TbDemoGroup_C::get_Item([Obfus1]cfg.test.TbDemoGroup_C, int)" newName="d" oldStackTraceSignature="cfg.test.TbDemoGroup_C:get_Item(Int32)" newStackTraceSignature="B.YA:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbDemoGroup_C::ResolveRef([Obfus1]cfg.test.TbDemoGroup_C, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbDemoGroup_C:ResolveRef(Tables)" newStackTraceSignature="B.YA:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbDemoPrimitive" newFullName="B.zA" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DemoPrimitiveTypesTable&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoPrimitiveTypesTable&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DemoPrimitiveTypesTable&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoPrimitiveTypesTable&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.DemoPrimitiveTypesTable Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DemoPrimitiveTypesTable&gt; cfg.test.TbDemoPrimitive::get_DataMap([Obfus1]cfg.test.TbDemoPrimitive)" newName="b" oldStackTraceSignature="cfg.test.TbDemoPrimitive:get_DataMap()" newStackTraceSignature="B.zA:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoPrimitiveTypesTable&gt; cfg.test.TbDemoPrimitive::get_DataList([Obfus1]cfg.test.TbDemoPrimitive)" newName="B" oldStackTraceSignature="cfg.test.TbDemoPrimitive:get_DataList()" newStackTraceSignature="B.zA:B()" />
      <method signature="[Obfus1]cfg.test.DemoPrimitiveTypesTable cfg.test.TbDemoPrimitive::GetOrDefault([Obfus1]cfg.test.TbDemoPrimitive, int)" newName="c" oldStackTraceSignature="cfg.test.TbDemoPrimitive:GetOrDefault(Int32)" newStackTraceSignature="B.zA:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.DemoPrimitiveTypesTable cfg.test.TbDemoPrimitive::Get([Obfus1]cfg.test.TbDemoPrimitive, int)" newName="C" oldStackTraceSignature="cfg.test.TbDemoPrimitive:Get(Int32)" newStackTraceSignature="B.zA:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.DemoPrimitiveTypesTable cfg.test.TbDemoPrimitive::get_Item([Obfus1]cfg.test.TbDemoPrimitive, int)" newName="d" oldStackTraceSignature="cfg.test.TbDemoPrimitive:get_Item(Int32)" newStackTraceSignature="B.zA:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbDemoPrimitive::ResolveRef([Obfus1]cfg.test.TbDemoPrimitive, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbDemoPrimitive:ResolveRef(Tables)" newStackTraceSignature="B.zA:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbDetectCsvEncoding" newFullName="B.ZA" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DetectEncoding&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DetectEncoding&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DetectEncoding&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DetectEncoding&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.DetectEncoding Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DetectEncoding&gt; cfg.test.TbDetectCsvEncoding::get_DataMap([Obfus1]cfg.test.TbDetectCsvEncoding)" newName="b" oldStackTraceSignature="cfg.test.TbDetectCsvEncoding:get_DataMap()" newStackTraceSignature="B.ZA:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DetectEncoding&gt; cfg.test.TbDetectCsvEncoding::get_DataList([Obfus1]cfg.test.TbDetectCsvEncoding)" newName="B" oldStackTraceSignature="cfg.test.TbDetectCsvEncoding:get_DataList()" newStackTraceSignature="B.ZA:B()" />
      <method signature="[Obfus1]cfg.test.DetectEncoding cfg.test.TbDetectCsvEncoding::GetOrDefault([Obfus1]cfg.test.TbDetectCsvEncoding, int)" newName="c" oldStackTraceSignature="cfg.test.TbDetectCsvEncoding:GetOrDefault(Int32)" newStackTraceSignature="B.ZA:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.DetectEncoding cfg.test.TbDetectCsvEncoding::Get([Obfus1]cfg.test.TbDetectCsvEncoding, int)" newName="C" oldStackTraceSignature="cfg.test.TbDetectCsvEncoding:Get(Int32)" newStackTraceSignature="B.ZA:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.DetectEncoding cfg.test.TbDetectCsvEncoding::get_Item([Obfus1]cfg.test.TbDetectCsvEncoding, int)" newName="d" oldStackTraceSignature="cfg.test.TbDetectCsvEncoding:get_Item(Int32)" newStackTraceSignature="B.ZA:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbDetectCsvEncoding::ResolveRef([Obfus1]cfg.test.TbDetectCsvEncoding, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbDetectCsvEncoding:ResolveRef(Tables)" newStackTraceSignature="B.ZA:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbExcelFromJson" newFullName="B.ab" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.ExcelFromJson&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.ExcelFromJson&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.ExcelFromJson&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.ExcelFromJson&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.ExcelFromJson Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.ExcelFromJson&gt; cfg.test.TbExcelFromJson::get_DataMap([Obfus1]cfg.test.TbExcelFromJson)" newName="b" oldStackTraceSignature="cfg.test.TbExcelFromJson:get_DataMap()" newStackTraceSignature="B.ab:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.ExcelFromJson&gt; cfg.test.TbExcelFromJson::get_DataList([Obfus1]cfg.test.TbExcelFromJson)" newName="B" oldStackTraceSignature="cfg.test.TbExcelFromJson:get_DataList()" newStackTraceSignature="B.ab:B()" />
      <method signature="[Obfus1]cfg.test.ExcelFromJson cfg.test.TbExcelFromJson::GetOrDefault([Obfus1]cfg.test.TbExcelFromJson, int)" newName="c" oldStackTraceSignature="cfg.test.TbExcelFromJson:GetOrDefault(Int32)" newStackTraceSignature="B.ab:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.ExcelFromJson cfg.test.TbExcelFromJson::Get([Obfus1]cfg.test.TbExcelFromJson, int)" newName="C" oldStackTraceSignature="cfg.test.TbExcelFromJson:Get(Int32)" newStackTraceSignature="B.ab:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.ExcelFromJson cfg.test.TbExcelFromJson::get_Item([Obfus1]cfg.test.TbExcelFromJson, int)" newName="d" oldStackTraceSignature="cfg.test.TbExcelFromJson:get_Item(Int32)" newStackTraceSignature="B.ab:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbExcelFromJson::ResolveRef([Obfus1]cfg.test.TbExcelFromJson, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbExcelFromJson:ResolveRef(Tables)" newStackTraceSignature="B.ab:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbExcelFromJsonMultiRow" newFullName="B.Ab" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.ExcelFromJsonMultiRow&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.ExcelFromJsonMultiRow&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.ExcelFromJsonMultiRow&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.ExcelFromJsonMultiRow&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.ExcelFromJsonMultiRow Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.ExcelFromJsonMultiRow&gt; cfg.test.TbExcelFromJsonMultiRow::get_DataMap([Obfus1]cfg.test.TbExcelFromJsonMultiRow)" newName="b" oldStackTraceSignature="cfg.test.TbExcelFromJsonMultiRow:get_DataMap()" newStackTraceSignature="B.Ab:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.ExcelFromJsonMultiRow&gt; cfg.test.TbExcelFromJsonMultiRow::get_DataList([Obfus1]cfg.test.TbExcelFromJsonMultiRow)" newName="B" oldStackTraceSignature="cfg.test.TbExcelFromJsonMultiRow:get_DataList()" newStackTraceSignature="B.Ab:B()" />
      <method signature="[Obfus1]cfg.test.ExcelFromJsonMultiRow cfg.test.TbExcelFromJsonMultiRow::GetOrDefault([Obfus1]cfg.test.TbExcelFromJsonMultiRow, int)" newName="c" oldStackTraceSignature="cfg.test.TbExcelFromJsonMultiRow:GetOrDefault(Int32)" newStackTraceSignature="B.Ab:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.ExcelFromJsonMultiRow cfg.test.TbExcelFromJsonMultiRow::Get([Obfus1]cfg.test.TbExcelFromJsonMultiRow, int)" newName="C" oldStackTraceSignature="cfg.test.TbExcelFromJsonMultiRow:Get(Int32)" newStackTraceSignature="B.Ab:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.ExcelFromJsonMultiRow cfg.test.TbExcelFromJsonMultiRow::get_Item([Obfus1]cfg.test.TbExcelFromJsonMultiRow, int)" newName="d" oldStackTraceSignature="cfg.test.TbExcelFromJsonMultiRow:get_Item(Int32)" newStackTraceSignature="B.Ab:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbExcelFromJsonMultiRow::ResolveRef([Obfus1]cfg.test.TbExcelFromJsonMultiRow, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbExcelFromJsonMultiRow:ResolveRef(Tables)" newStackTraceSignature="B.Ab:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbFullTypes" newFullName="B.bb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DemoType2&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoType2&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DemoType2&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoType2&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.DemoType2 Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DemoType2&gt; cfg.test.TbFullTypes::get_DataMap([Obfus1]cfg.test.TbFullTypes)" newName="b" oldStackTraceSignature="cfg.test.TbFullTypes:get_DataMap()" newStackTraceSignature="B.bb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoType2&gt; cfg.test.TbFullTypes::get_DataList([Obfus1]cfg.test.TbFullTypes)" newName="B" oldStackTraceSignature="cfg.test.TbFullTypes:get_DataList()" newStackTraceSignature="B.bb:B()" />
      <method signature="[Obfus1]cfg.test.DemoType2 cfg.test.TbFullTypes::GetOrDefault([Obfus1]cfg.test.TbFullTypes, int)" newName="c" oldStackTraceSignature="cfg.test.TbFullTypes:GetOrDefault(Int32)" newStackTraceSignature="B.bb:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.DemoType2 cfg.test.TbFullTypes::Get([Obfus1]cfg.test.TbFullTypes, int)" newName="C" oldStackTraceSignature="cfg.test.TbFullTypes:Get(Int32)" newStackTraceSignature="B.bb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.DemoType2 cfg.test.TbFullTypes::get_Item([Obfus1]cfg.test.TbFullTypes, int)" newName="d" oldStackTraceSignature="cfg.test.TbFullTypes:get_Item(Int32)" newStackTraceSignature="B.bb:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbFullTypes::ResolveRef([Obfus1]cfg.test.TbFullTypes, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbFullTypes:ResolveRef(Tables)" newStackTraceSignature="B.bb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbItem2" newFullName="B.Bb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.ItemBase&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.ItemBase&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.ItemBase&gt; DataMap" newName="f" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.ItemBase&gt; DataList" newName="F" />
      <property signature="[Obfus1]cfg.test.ItemBase Item" newName="g" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.ItemBase&gt; cfg.test.TbItem2::get_DataMap([Obfus1]cfg.test.TbItem2)" newName="b" oldStackTraceSignature="cfg.test.TbItem2:get_DataMap()" newStackTraceSignature="B.Bb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.ItemBase&gt; cfg.test.TbItem2::get_DataList([Obfus1]cfg.test.TbItem2)" newName="B" oldStackTraceSignature="cfg.test.TbItem2:get_DataList()" newStackTraceSignature="B.Bb:B()" />
      <method signature="!!0 cfg.test.TbItem2::GetOrDefaultAs([Obfus1]cfg.test.TbItem2, int)" newName="c" oldStackTraceSignature="cfg.test.TbItem2:GetOrDefaultAs(Int32)" newStackTraceSignature="B.Bb:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="!!0 cfg.test.TbItem2::GetAs([Obfus1]cfg.test.TbItem2, int)" newName="C" oldStackTraceSignature="cfg.test.TbItem2:GetAs(Int32)" newStackTraceSignature="B.Bb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.ItemBase cfg.test.TbItem2::GetOrDefault([Obfus1]cfg.test.TbItem2, int)" newName="d" oldStackTraceSignature="cfg.test.TbItem2:GetOrDefault(Int32)" newStackTraceSignature="B.Bb:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.ItemBase cfg.test.TbItem2::Get([Obfus1]cfg.test.TbItem2, int)" newName="D" oldStackTraceSignature="cfg.test.TbItem2:Get(Int32)" newStackTraceSignature="B.Bb:D(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.ItemBase cfg.test.TbItem2::get_Item([Obfus1]cfg.test.TbItem2, int)" newName="e" oldStackTraceSignature="cfg.test.TbItem2:get_Item(Int32)" newStackTraceSignature="B.Bb:e(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbItem2::ResolveRef([Obfus1]cfg.test.TbItem2, [Obfus1]cfg.Tables)" newName="E" oldStackTraceSignature="cfg.test.TbItem2:ResolveRef(Tables)" newStackTraceSignature="B.Bb:E(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbMultiIndexList" newFullName="B.cb" status="Renamed">
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.MultiIndexList&gt; _dataList" newName="a" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.MultiIndexList&gt; _dataMap_id1" newName="A" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;long,[Obfus1]cfg.test.MultiIndexList&gt; _dataMap_id2" newName="b" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;string,[Obfus1]cfg.test.MultiIndexList&gt; _dataMap_id3" newName="B" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.MultiIndexList&gt; DataList" newName="E" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.MultiIndexList&gt; cfg.test.TbMultiIndexList::get_DataList([Obfus1]cfg.test.TbMultiIndexList)" newName="c" oldStackTraceSignature="cfg.test.TbMultiIndexList:get_DataList()" newStackTraceSignature="B.cb:c()" />
      <method signature="[Obfus1]cfg.test.MultiIndexList cfg.test.TbMultiIndexList::GetById1([Obfus1]cfg.test.TbMultiIndexList, int)" newName="C" oldStackTraceSignature="cfg.test.TbMultiIndexList:GetById1(Int32)" newStackTraceSignature="B.cb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.MultiIndexList cfg.test.TbMultiIndexList::GetById2([Obfus1]cfg.test.TbMultiIndexList, long)" newName="d" oldStackTraceSignature="cfg.test.TbMultiIndexList:GetById2(Int64)" newStackTraceSignature="B.cb:d(Int64)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.MultiIndexList cfg.test.TbMultiIndexList::GetById3([Obfus1]cfg.test.TbMultiIndexList, string)" newName="D" oldStackTraceSignature="cfg.test.TbMultiIndexList:GetById3(String)" newStackTraceSignature="B.cb:D(String)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbMultiIndexList::ResolveRef([Obfus1]cfg.test.TbMultiIndexList, [Obfus1]cfg.Tables)" newName="e" oldStackTraceSignature="cfg.test.TbMultiIndexList:ResolveRef(Tables)" newStackTraceSignature="B.cb:e(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbMultiRowRecord" newFullName="B.Cb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.MultiRowRecord&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.MultiRowRecord&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.MultiRowRecord&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.MultiRowRecord&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.MultiRowRecord Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.MultiRowRecord&gt; cfg.test.TbMultiRowRecord::get_DataMap([Obfus1]cfg.test.TbMultiRowRecord)" newName="b" oldStackTraceSignature="cfg.test.TbMultiRowRecord:get_DataMap()" newStackTraceSignature="B.Cb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.MultiRowRecord&gt; cfg.test.TbMultiRowRecord::get_DataList([Obfus1]cfg.test.TbMultiRowRecord)" newName="B" oldStackTraceSignature="cfg.test.TbMultiRowRecord:get_DataList()" newStackTraceSignature="B.Cb:B()" />
      <method signature="[Obfus1]cfg.test.MultiRowRecord cfg.test.TbMultiRowRecord::GetOrDefault([Obfus1]cfg.test.TbMultiRowRecord, int)" newName="c" oldStackTraceSignature="cfg.test.TbMultiRowRecord:GetOrDefault(Int32)" newStackTraceSignature="B.Cb:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.MultiRowRecord cfg.test.TbMultiRowRecord::Get([Obfus1]cfg.test.TbMultiRowRecord, int)" newName="C" oldStackTraceSignature="cfg.test.TbMultiRowRecord:Get(Int32)" newStackTraceSignature="B.Cb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.MultiRowRecord cfg.test.TbMultiRowRecord::get_Item([Obfus1]cfg.test.TbMultiRowRecord, int)" newName="d" oldStackTraceSignature="cfg.test.TbMultiRowRecord:get_Item(Int32)" newStackTraceSignature="B.Cb:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbMultiRowRecord::ResolveRef([Obfus1]cfg.test.TbMultiRowRecord, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbMultiRowRecord:ResolveRef(Tables)" newStackTraceSignature="B.Cb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbMultiRowTitle" newFullName="B.db" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.MultiRowTitle&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.MultiRowTitle&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.MultiRowTitle&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.MultiRowTitle&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.MultiRowTitle Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.MultiRowTitle&gt; cfg.test.TbMultiRowTitle::get_DataMap([Obfus1]cfg.test.TbMultiRowTitle)" newName="b" oldStackTraceSignature="cfg.test.TbMultiRowTitle:get_DataMap()" newStackTraceSignature="B.db:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.MultiRowTitle&gt; cfg.test.TbMultiRowTitle::get_DataList([Obfus1]cfg.test.TbMultiRowTitle)" newName="B" oldStackTraceSignature="cfg.test.TbMultiRowTitle:get_DataList()" newStackTraceSignature="B.db:B()" />
      <method signature="[Obfus1]cfg.test.MultiRowTitle cfg.test.TbMultiRowTitle::GetOrDefault([Obfus1]cfg.test.TbMultiRowTitle, int)" newName="c" oldStackTraceSignature="cfg.test.TbMultiRowTitle:GetOrDefault(Int32)" newStackTraceSignature="B.db:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.MultiRowTitle cfg.test.TbMultiRowTitle::Get([Obfus1]cfg.test.TbMultiRowTitle, int)" newName="C" oldStackTraceSignature="cfg.test.TbMultiRowTitle:Get(Int32)" newStackTraceSignature="B.db:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.MultiRowTitle cfg.test.TbMultiRowTitle::get_Item([Obfus1]cfg.test.TbMultiRowTitle, int)" newName="d" oldStackTraceSignature="cfg.test.TbMultiRowTitle:get_Item(Int32)" newStackTraceSignature="B.db:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbMultiRowTitle::ResolveRef([Obfus1]cfg.test.TbMultiRowTitle, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbMultiRowTitle:ResolveRef(Tables)" newStackTraceSignature="B.db:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbMultiUnionIndexList" newFullName="B.Db" status="Renamed">
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.MultiUnionIndexList&gt; _dataList" newName="a" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;System.ValueTuple`3&lt;int,long,string&gt;,[Obfus1]cfg.test.MultiUnionIndexList&gt; _dataMapUnion" newName="A" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.MultiUnionIndexList&gt; DataList" newName="C" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.MultiUnionIndexList&gt; cfg.test.TbMultiUnionIndexList::get_DataList([Obfus1]cfg.test.TbMultiUnionIndexList)" newName="b" oldStackTraceSignature="cfg.test.TbMultiUnionIndexList:get_DataList()" newStackTraceSignature="B.Db:b()" />
      <method signature="[Obfus1]cfg.test.MultiUnionIndexList cfg.test.TbMultiUnionIndexList::Get([Obfus1]cfg.test.TbMultiUnionIndexList, int, long, string)" newName="B" oldStackTraceSignature="cfg.test.TbMultiUnionIndexList:Get(Int32, Int64, String)" newStackTraceSignature="B.Db:B(Int32, Int64, String)">
        <param index="1" newName="1" />
        <param index="2" newName="1" />
        <param index="3" newName="1" />
      </method>
      <method signature="void cfg.test.TbMultiUnionIndexList::ResolveRef([Obfus1]cfg.test.TbMultiUnionIndexList, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.TbMultiUnionIndexList:ResolveRef(Tables)" newStackTraceSignature="B.Db:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbNotIndexList" newFullName="B.eb" status="Renamed">
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.NotIndexList&gt; _dataList" newName="a" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.NotIndexList&gt; DataList" newName="B" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.NotIndexList&gt; cfg.test.TbNotIndexList::get_DataList([Obfus1]cfg.test.TbNotIndexList)" newName="A" oldStackTraceSignature="cfg.test.TbNotIndexList:get_DataList()" newStackTraceSignature="B.eb:A()" />
      <method signature="void cfg.test.TbNotIndexList::ResolveRef([Obfus1]cfg.test.TbNotIndexList, [Obfus1]cfg.Tables)" newName="b" oldStackTraceSignature="cfg.test.TbNotIndexList:ResolveRef(Tables)" newStackTraceSignature="B.eb:b(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbPath" newFullName="B.Eb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.Path&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.Path&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.Path&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.Path&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.Path Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.Path&gt; cfg.test.TbPath::get_DataMap([Obfus1]cfg.test.TbPath)" newName="b" oldStackTraceSignature="cfg.test.TbPath:get_DataMap()" newStackTraceSignature="B.Eb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.Path&gt; cfg.test.TbPath::get_DataList([Obfus1]cfg.test.TbPath)" newName="B" oldStackTraceSignature="cfg.test.TbPath:get_DataList()" newStackTraceSignature="B.Eb:B()" />
      <method signature="[Obfus1]cfg.test.Path cfg.test.TbPath::GetOrDefault([Obfus1]cfg.test.TbPath, int)" newName="c" oldStackTraceSignature="cfg.test.TbPath:GetOrDefault(Int32)" newStackTraceSignature="B.Eb:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.Path cfg.test.TbPath::Get([Obfus1]cfg.test.TbPath, int)" newName="C" oldStackTraceSignature="cfg.test.TbPath:Get(Int32)" newStackTraceSignature="B.Eb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.Path cfg.test.TbPath::get_Item([Obfus1]cfg.test.TbPath, int)" newName="d" oldStackTraceSignature="cfg.test.TbPath:get_Item(Int32)" newStackTraceSignature="B.Eb:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbPath::ResolveRef([Obfus1]cfg.test.TbPath, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbPath:ResolveRef(Tables)" newStackTraceSignature="B.Eb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbSingleton" newFullName="B.fb" status="Renamed">
      <field signature="[Obfus1]cfg.test.DemoSingletonType _data" newName="a" />
      <property signature="[Obfus1]cfg.test.DemoSingletonType Data" newName="d" />
      <property signature="int Id" newName="D" />
      <property signature="string Name" newName="e" />
      <property signature="[Obfus1]cfg.test.DemoDynamic Date" newName="E" />
      <method signature="[Obfus1]cfg.test.DemoSingletonType cfg.test.TbSingleton::get_Data([Obfus1]cfg.test.TbSingleton)" newName="A" oldStackTraceSignature="cfg.test.TbSingleton:get_Data()" newStackTraceSignature="B.fb:A()" />
      <method signature="int cfg.test.TbSingleton::get_Id([Obfus1]cfg.test.TbSingleton)" newName="b" oldStackTraceSignature="cfg.test.TbSingleton:get_Id()" newStackTraceSignature="B.fb:b()" />
      <method signature="string cfg.test.TbSingleton::get_Name([Obfus1]cfg.test.TbSingleton)" newName="B" oldStackTraceSignature="cfg.test.TbSingleton:get_Name()" newStackTraceSignature="B.fb:B()" />
      <method signature="[Obfus1]cfg.test.DemoDynamic cfg.test.TbSingleton::get_Date([Obfus1]cfg.test.TbSingleton)" newName="c" oldStackTraceSignature="cfg.test.TbSingleton:get_Date()" newStackTraceSignature="B.fb:c()" />
      <method signature="void cfg.test.TbSingleton::ResolveRef([Obfus1]cfg.test.TbSingleton, [Obfus1]cfg.Tables)" newName="C" oldStackTraceSignature="cfg.test.TbSingleton:ResolveRef(Tables)" newStackTraceSignature="B.fb:C(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbTestBeRef" newFullName="B.Fb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestBeRef&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestBeRef&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestBeRef&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestBeRef&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.TestBeRef Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestBeRef&gt; cfg.test.TbTestBeRef::get_DataMap([Obfus1]cfg.test.TbTestBeRef)" newName="b" oldStackTraceSignature="cfg.test.TbTestBeRef:get_DataMap()" newStackTraceSignature="B.Fb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestBeRef&gt; cfg.test.TbTestBeRef::get_DataList([Obfus1]cfg.test.TbTestBeRef)" newName="B" oldStackTraceSignature="cfg.test.TbTestBeRef:get_DataList()" newStackTraceSignature="B.Fb:B()" />
      <method signature="[Obfus1]cfg.test.TestBeRef cfg.test.TbTestBeRef::GetOrDefault([Obfus1]cfg.test.TbTestBeRef, int)" newName="c" oldStackTraceSignature="cfg.test.TbTestBeRef:GetOrDefault(Int32)" newStackTraceSignature="B.Fb:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestBeRef cfg.test.TbTestBeRef::Get([Obfus1]cfg.test.TbTestBeRef, int)" newName="C" oldStackTraceSignature="cfg.test.TbTestBeRef:Get(Int32)" newStackTraceSignature="B.Fb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestBeRef cfg.test.TbTestBeRef::get_Item([Obfus1]cfg.test.TbTestBeRef, int)" newName="d" oldStackTraceSignature="cfg.test.TbTestBeRef:get_Item(Int32)" newStackTraceSignature="B.Fb:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbTestBeRef::ResolveRef([Obfus1]cfg.test.TbTestBeRef, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbTestBeRef:ResolveRef(Tables)" newStackTraceSignature="B.Fb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbTestBeRef2" newFullName="B.gb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestBeRef&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestBeRef&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestBeRef&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestBeRef&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.TestBeRef Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestBeRef&gt; cfg.test.TbTestBeRef2::get_DataMap([Obfus1]cfg.test.TbTestBeRef2)" newName="b" oldStackTraceSignature="cfg.test.TbTestBeRef2:get_DataMap()" newStackTraceSignature="B.gb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestBeRef&gt; cfg.test.TbTestBeRef2::get_DataList([Obfus1]cfg.test.TbTestBeRef2)" newName="B" oldStackTraceSignature="cfg.test.TbTestBeRef2:get_DataList()" newStackTraceSignature="B.gb:B()" />
      <method signature="[Obfus1]cfg.test.TestBeRef cfg.test.TbTestBeRef2::GetOrDefault([Obfus1]cfg.test.TbTestBeRef2, int)" newName="c" oldStackTraceSignature="cfg.test.TbTestBeRef2:GetOrDefault(Int32)" newStackTraceSignature="B.gb:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestBeRef cfg.test.TbTestBeRef2::Get([Obfus1]cfg.test.TbTestBeRef2, int)" newName="C" oldStackTraceSignature="cfg.test.TbTestBeRef2:Get(Int32)" newStackTraceSignature="B.gb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestBeRef cfg.test.TbTestBeRef2::get_Item([Obfus1]cfg.test.TbTestBeRef2, int)" newName="d" oldStackTraceSignature="cfg.test.TbTestBeRef2:get_Item(Int32)" newStackTraceSignature="B.gb:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbTestBeRef2::ResolveRef([Obfus1]cfg.test.TbTestBeRef2, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbTestBeRef2:ResolveRef(Tables)" newStackTraceSignature="B.gb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbTestFieldAlias" newFullName="B.Gb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestFieldAlias&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestFieldAlias&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestFieldAlias&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestFieldAlias&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.TestFieldAlias Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestFieldAlias&gt; cfg.test.TbTestFieldAlias::get_DataMap([Obfus1]cfg.test.TbTestFieldAlias)" newName="b" oldStackTraceSignature="cfg.test.TbTestFieldAlias:get_DataMap()" newStackTraceSignature="B.Gb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestFieldAlias&gt; cfg.test.TbTestFieldAlias::get_DataList([Obfus1]cfg.test.TbTestFieldAlias)" newName="B" oldStackTraceSignature="cfg.test.TbTestFieldAlias:get_DataList()" newStackTraceSignature="B.Gb:B()" />
      <method signature="[Obfus1]cfg.test.TestFieldAlias cfg.test.TbTestFieldAlias::GetOrDefault([Obfus1]cfg.test.TbTestFieldAlias, int)" newName="c" oldStackTraceSignature="cfg.test.TbTestFieldAlias:GetOrDefault(Int32)" newStackTraceSignature="B.Gb:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestFieldAlias cfg.test.TbTestFieldAlias::Get([Obfus1]cfg.test.TbTestFieldAlias, int)" newName="C" oldStackTraceSignature="cfg.test.TbTestFieldAlias:Get(Int32)" newStackTraceSignature="B.Gb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestFieldAlias cfg.test.TbTestFieldAlias::get_Item([Obfus1]cfg.test.TbTestFieldAlias, int)" newName="d" oldStackTraceSignature="cfg.test.TbTestFieldAlias:get_Item(Int32)" newStackTraceSignature="B.Gb:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbTestFieldAlias::ResolveRef([Obfus1]cfg.test.TbTestFieldAlias, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbTestFieldAlias:ResolveRef(Tables)" newStackTraceSignature="B.Gb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbTestFieldVariant" newFullName="B.hb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestFieldVariant&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestFieldVariant&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestFieldVariant&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestFieldVariant&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.TestFieldVariant Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestFieldVariant&gt; cfg.test.TbTestFieldVariant::get_DataMap([Obfus1]cfg.test.TbTestFieldVariant)" newName="b" oldStackTraceSignature="cfg.test.TbTestFieldVariant:get_DataMap()" newStackTraceSignature="B.hb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestFieldVariant&gt; cfg.test.TbTestFieldVariant::get_DataList([Obfus1]cfg.test.TbTestFieldVariant)" newName="B" oldStackTraceSignature="cfg.test.TbTestFieldVariant:get_DataList()" newStackTraceSignature="B.hb:B()" />
      <method signature="[Obfus1]cfg.test.TestFieldVariant cfg.test.TbTestFieldVariant::GetOrDefault([Obfus1]cfg.test.TbTestFieldVariant, int)" newName="c" oldStackTraceSignature="cfg.test.TbTestFieldVariant:GetOrDefault(Int32)" newStackTraceSignature="B.hb:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestFieldVariant cfg.test.TbTestFieldVariant::Get([Obfus1]cfg.test.TbTestFieldVariant, int)" newName="C" oldStackTraceSignature="cfg.test.TbTestFieldVariant:Get(Int32)" newStackTraceSignature="B.hb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestFieldVariant cfg.test.TbTestFieldVariant::get_Item([Obfus1]cfg.test.TbTestFieldVariant, int)" newName="d" oldStackTraceSignature="cfg.test.TbTestFieldVariant:get_Item(Int32)" newStackTraceSignature="B.hb:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbTestFieldVariant::ResolveRef([Obfus1]cfg.test.TbTestFieldVariant, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbTestFieldVariant:ResolveRef(Tables)" newStackTraceSignature="B.hb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbTestFieldVariant2" newFullName="B.Hb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestFieldVariant2&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestFieldVariant2&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestFieldVariant2&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestFieldVariant2&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.TestFieldVariant2 Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestFieldVariant2&gt; cfg.test.TbTestFieldVariant2::get_DataMap([Obfus1]cfg.test.TbTestFieldVariant2)" newName="b" oldStackTraceSignature="cfg.test.TbTestFieldVariant2:get_DataMap()" newStackTraceSignature="B.Hb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestFieldVariant2&gt; cfg.test.TbTestFieldVariant2::get_DataList([Obfus1]cfg.test.TbTestFieldVariant2)" newName="B" oldStackTraceSignature="cfg.test.TbTestFieldVariant2:get_DataList()" newStackTraceSignature="B.Hb:B()" />
      <method signature="[Obfus1]cfg.test.TestFieldVariant2 cfg.test.TbTestFieldVariant2::GetOrDefault([Obfus1]cfg.test.TbTestFieldVariant2, int)" newName="c" oldStackTraceSignature="cfg.test.TbTestFieldVariant2:GetOrDefault(Int32)" newStackTraceSignature="B.Hb:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestFieldVariant2 cfg.test.TbTestFieldVariant2::Get([Obfus1]cfg.test.TbTestFieldVariant2, int)" newName="C" oldStackTraceSignature="cfg.test.TbTestFieldVariant2:Get(Int32)" newStackTraceSignature="B.Hb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestFieldVariant2 cfg.test.TbTestFieldVariant2::get_Item([Obfus1]cfg.test.TbTestFieldVariant2, int)" newName="d" oldStackTraceSignature="cfg.test.TbTestFieldVariant2:get_Item(Int32)" newStackTraceSignature="B.Hb:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbTestFieldVariant2::ResolveRef([Obfus1]cfg.test.TbTestFieldVariant2, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbTestFieldVariant2:ResolveRef(Tables)" newStackTraceSignature="B.Hb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbTestGlobal" newFullName="B.ib" status="Renamed">
      <field signature="[Obfus1]cfg.test.TestGlobal _data" newName="a" />
      <property signature="[Obfus1]cfg.test.TestGlobal Data" newName="C" />
      <property signature="int UnlockEquip" newName="d" />
      <property signature="int UnlockHero" newName="D" />
      <method signature="[Obfus1]cfg.test.TestGlobal cfg.test.TbTestGlobal::get_Data([Obfus1]cfg.test.TbTestGlobal)" newName="A" oldStackTraceSignature="cfg.test.TbTestGlobal:get_Data()" newStackTraceSignature="B.ib:A()" />
      <method signature="int cfg.test.TbTestGlobal::get_UnlockEquip([Obfus1]cfg.test.TbTestGlobal)" newName="b" oldStackTraceSignature="cfg.test.TbTestGlobal:get_UnlockEquip()" newStackTraceSignature="B.ib:b()" />
      <method signature="int cfg.test.TbTestGlobal::get_UnlockHero([Obfus1]cfg.test.TbTestGlobal)" newName="B" oldStackTraceSignature="cfg.test.TbTestGlobal:get_UnlockHero()" newStackTraceSignature="B.ib:B()" />
      <method signature="void cfg.test.TbTestGlobal::ResolveRef([Obfus1]cfg.test.TbTestGlobal, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.TbTestGlobal:ResolveRef(Tables)" newStackTraceSignature="B.ib:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbTestIndex" newFullName="B.Ib" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestIndex&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestIndex&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestIndex&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestIndex&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.TestIndex Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestIndex&gt; cfg.test.TbTestIndex::get_DataMap([Obfus1]cfg.test.TbTestIndex)" newName="b" oldStackTraceSignature="cfg.test.TbTestIndex:get_DataMap()" newStackTraceSignature="B.Ib:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestIndex&gt; cfg.test.TbTestIndex::get_DataList([Obfus1]cfg.test.TbTestIndex)" newName="B" oldStackTraceSignature="cfg.test.TbTestIndex:get_DataList()" newStackTraceSignature="B.Ib:B()" />
      <method signature="[Obfus1]cfg.test.TestIndex cfg.test.TbTestIndex::GetOrDefault([Obfus1]cfg.test.TbTestIndex, int)" newName="c" oldStackTraceSignature="cfg.test.TbTestIndex:GetOrDefault(Int32)" newStackTraceSignature="B.Ib:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestIndex cfg.test.TbTestIndex::Get([Obfus1]cfg.test.TbTestIndex, int)" newName="C" oldStackTraceSignature="cfg.test.TbTestIndex:Get(Int32)" newStackTraceSignature="B.Ib:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestIndex cfg.test.TbTestIndex::get_Item([Obfus1]cfg.test.TbTestIndex, int)" newName="d" oldStackTraceSignature="cfg.test.TbTestIndex:get_Item(Int32)" newStackTraceSignature="B.Ib:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbTestIndex::ResolveRef([Obfus1]cfg.test.TbTestIndex, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbTestIndex:ResolveRef(Tables)" newStackTraceSignature="B.Ib:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbTestMap" newFullName="B.jb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestMap&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestMap&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestMap&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestMap&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.TestMap Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestMap&gt; cfg.test.TbTestMap::get_DataMap([Obfus1]cfg.test.TbTestMap)" newName="b" oldStackTraceSignature="cfg.test.TbTestMap:get_DataMap()" newStackTraceSignature="B.jb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestMap&gt; cfg.test.TbTestMap::get_DataList([Obfus1]cfg.test.TbTestMap)" newName="B" oldStackTraceSignature="cfg.test.TbTestMap:get_DataList()" newStackTraceSignature="B.jb:B()" />
      <method signature="[Obfus1]cfg.test.TestMap cfg.test.TbTestMap::GetOrDefault([Obfus1]cfg.test.TbTestMap, int)" newName="c" oldStackTraceSignature="cfg.test.TbTestMap:GetOrDefault(Int32)" newStackTraceSignature="B.jb:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestMap cfg.test.TbTestMap::Get([Obfus1]cfg.test.TbTestMap, int)" newName="C" oldStackTraceSignature="cfg.test.TbTestMap:Get(Int32)" newStackTraceSignature="B.jb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestMap cfg.test.TbTestMap::get_Item([Obfus1]cfg.test.TbTestMap, int)" newName="d" oldStackTraceSignature="cfg.test.TbTestMap:get_Item(Int32)" newStackTraceSignature="B.jb:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbTestMap::ResolveRef([Obfus1]cfg.test.TbTestMap, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbTestMap:ResolveRef(Tables)" newStackTraceSignature="B.jb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbTestMapper" newFullName="B.Jb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestMapper&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestMapper&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestMapper&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestMapper&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.TestMapper Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestMapper&gt; cfg.test.TbTestMapper::get_DataMap([Obfus1]cfg.test.TbTestMapper)" newName="b" oldStackTraceSignature="cfg.test.TbTestMapper:get_DataMap()" newStackTraceSignature="B.Jb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestMapper&gt; cfg.test.TbTestMapper::get_DataList([Obfus1]cfg.test.TbTestMapper)" newName="B" oldStackTraceSignature="cfg.test.TbTestMapper:get_DataList()" newStackTraceSignature="B.Jb:B()" />
      <method signature="[Obfus1]cfg.test.TestMapper cfg.test.TbTestMapper::GetOrDefault([Obfus1]cfg.test.TbTestMapper, int)" newName="c" oldStackTraceSignature="cfg.test.TbTestMapper:GetOrDefault(Int32)" newStackTraceSignature="B.Jb:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestMapper cfg.test.TbTestMapper::Get([Obfus1]cfg.test.TbTestMapper, int)" newName="C" oldStackTraceSignature="cfg.test.TbTestMapper:Get(Int32)" newStackTraceSignature="B.Jb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestMapper cfg.test.TbTestMapper::get_Item([Obfus1]cfg.test.TbTestMapper, int)" newName="d" oldStackTraceSignature="cfg.test.TbTestMapper:get_Item(Int32)" newStackTraceSignature="B.Jb:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbTestMapper::ResolveRef([Obfus1]cfg.test.TbTestMapper, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbTestMapper:ResolveRef(Tables)" newStackTraceSignature="B.Jb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbTestMultiColumn" newFullName="B.kb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestMultiColumn&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestMultiColumn&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestMultiColumn&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestMultiColumn&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.TestMultiColumn Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestMultiColumn&gt; cfg.test.TbTestMultiColumn::get_DataMap([Obfus1]cfg.test.TbTestMultiColumn)" newName="b" oldStackTraceSignature="cfg.test.TbTestMultiColumn:get_DataMap()" newStackTraceSignature="B.kb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestMultiColumn&gt; cfg.test.TbTestMultiColumn::get_DataList([Obfus1]cfg.test.TbTestMultiColumn)" newName="B" oldStackTraceSignature="cfg.test.TbTestMultiColumn:get_DataList()" newStackTraceSignature="B.kb:B()" />
      <method signature="[Obfus1]cfg.test.TestMultiColumn cfg.test.TbTestMultiColumn::GetOrDefault([Obfus1]cfg.test.TbTestMultiColumn, int)" newName="c" oldStackTraceSignature="cfg.test.TbTestMultiColumn:GetOrDefault(Int32)" newStackTraceSignature="B.kb:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestMultiColumn cfg.test.TbTestMultiColumn::Get([Obfus1]cfg.test.TbTestMultiColumn, int)" newName="C" oldStackTraceSignature="cfg.test.TbTestMultiColumn:Get(Int32)" newStackTraceSignature="B.kb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestMultiColumn cfg.test.TbTestMultiColumn::get_Item([Obfus1]cfg.test.TbTestMultiColumn, int)" newName="d" oldStackTraceSignature="cfg.test.TbTestMultiColumn:get_Item(Int32)" newStackTraceSignature="B.kb:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbTestMultiColumn::ResolveRef([Obfus1]cfg.test.TbTestMultiColumn, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbTestMultiColumn:ResolveRef(Tables)" newStackTraceSignature="B.kb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbTestNull" newFullName="B.Kb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestNull&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestNull&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestNull&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestNull&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.TestNull Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestNull&gt; cfg.test.TbTestNull::get_DataMap([Obfus1]cfg.test.TbTestNull)" newName="b" oldStackTraceSignature="cfg.test.TbTestNull:get_DataMap()" newStackTraceSignature="B.Kb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestNull&gt; cfg.test.TbTestNull::get_DataList([Obfus1]cfg.test.TbTestNull)" newName="B" oldStackTraceSignature="cfg.test.TbTestNull:get_DataList()" newStackTraceSignature="B.Kb:B()" />
      <method signature="[Obfus1]cfg.test.TestNull cfg.test.TbTestNull::GetOrDefault([Obfus1]cfg.test.TbTestNull, int)" newName="c" oldStackTraceSignature="cfg.test.TbTestNull:GetOrDefault(Int32)" newStackTraceSignature="B.Kb:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestNull cfg.test.TbTestNull::Get([Obfus1]cfg.test.TbTestNull, int)" newName="C" oldStackTraceSignature="cfg.test.TbTestNull:Get(Int32)" newStackTraceSignature="B.Kb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestNull cfg.test.TbTestNull::get_Item([Obfus1]cfg.test.TbTestNull, int)" newName="d" oldStackTraceSignature="cfg.test.TbTestNull:get_Item(Int32)" newStackTraceSignature="B.Kb:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbTestNull::ResolveRef([Obfus1]cfg.test.TbTestNull, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbTestNull:ResolveRef(Tables)" newStackTraceSignature="B.Kb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbTestRange" newFullName="B.lb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestRange&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestRange&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestRange&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestRange&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.TestRange Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestRange&gt; cfg.test.TbTestRange::get_DataMap([Obfus1]cfg.test.TbTestRange)" newName="b" oldStackTraceSignature="cfg.test.TbTestRange:get_DataMap()" newStackTraceSignature="B.lb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestRange&gt; cfg.test.TbTestRange::get_DataList([Obfus1]cfg.test.TbTestRange)" newName="B" oldStackTraceSignature="cfg.test.TbTestRange:get_DataList()" newStackTraceSignature="B.lb:B()" />
      <method signature="[Obfus1]cfg.test.TestRange cfg.test.TbTestRange::GetOrDefault([Obfus1]cfg.test.TbTestRange, int)" newName="c" oldStackTraceSignature="cfg.test.TbTestRange:GetOrDefault(Int32)" newStackTraceSignature="B.lb:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestRange cfg.test.TbTestRange::Get([Obfus1]cfg.test.TbTestRange, int)" newName="C" oldStackTraceSignature="cfg.test.TbTestRange:Get(Int32)" newStackTraceSignature="B.lb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestRange cfg.test.TbTestRange::get_Item([Obfus1]cfg.test.TbTestRange, int)" newName="d" oldStackTraceSignature="cfg.test.TbTestRange:get_Item(Int32)" newStackTraceSignature="B.lb:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbTestRange::ResolveRef([Obfus1]cfg.test.TbTestRange, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbTestRange:ResolveRef(Tables)" newStackTraceSignature="B.lb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbTestRef" newFullName="B.Lb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestRef&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestRef&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestRef&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestRef&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.TestRef Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestRef&gt; cfg.test.TbTestRef::get_DataMap([Obfus1]cfg.test.TbTestRef)" newName="b" oldStackTraceSignature="cfg.test.TbTestRef:get_DataMap()" newStackTraceSignature="B.Lb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestRef&gt; cfg.test.TbTestRef::get_DataList([Obfus1]cfg.test.TbTestRef)" newName="B" oldStackTraceSignature="cfg.test.TbTestRef:get_DataList()" newStackTraceSignature="B.Lb:B()" />
      <method signature="[Obfus1]cfg.test.TestRef cfg.test.TbTestRef::GetOrDefault([Obfus1]cfg.test.TbTestRef, int)" newName="c" oldStackTraceSignature="cfg.test.TbTestRef:GetOrDefault(Int32)" newStackTraceSignature="B.Lb:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestRef cfg.test.TbTestRef::Get([Obfus1]cfg.test.TbTestRef, int)" newName="C" oldStackTraceSignature="cfg.test.TbTestRef:Get(Int32)" newStackTraceSignature="B.Lb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestRef cfg.test.TbTestRef::get_Item([Obfus1]cfg.test.TbTestRef, int)" newName="d" oldStackTraceSignature="cfg.test.TbTestRef:get_Item(Int32)" newStackTraceSignature="B.Lb:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbTestRef::ResolveRef([Obfus1]cfg.test.TbTestRef, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbTestRef:ResolveRef(Tables)" newStackTraceSignature="B.Lb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbTestScriptableObject" newFullName="B.mb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestScriptableObject&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestScriptableObject&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestScriptableObject&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestScriptableObject&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.TestScriptableObject Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestScriptableObject&gt; cfg.test.TbTestScriptableObject::get_DataMap([Obfus1]cfg.test.TbTestScriptableObject)" newName="b" oldStackTraceSignature="cfg.test.TbTestScriptableObject:get_DataMap()" newStackTraceSignature="B.mb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestScriptableObject&gt; cfg.test.TbTestScriptableObject::get_DataList([Obfus1]cfg.test.TbTestScriptableObject)" newName="B" oldStackTraceSignature="cfg.test.TbTestScriptableObject:get_DataList()" newStackTraceSignature="B.mb:B()" />
      <method signature="[Obfus1]cfg.test.TestScriptableObject cfg.test.TbTestScriptableObject::GetOrDefault([Obfus1]cfg.test.TbTestScriptableObject, int)" newName="c" oldStackTraceSignature="cfg.test.TbTestScriptableObject:GetOrDefault(Int32)" newStackTraceSignature="B.mb:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestScriptableObject cfg.test.TbTestScriptableObject::Get([Obfus1]cfg.test.TbTestScriptableObject, int)" newName="C" oldStackTraceSignature="cfg.test.TbTestScriptableObject:Get(Int32)" newStackTraceSignature="B.mb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestScriptableObject cfg.test.TbTestScriptableObject::get_Item([Obfus1]cfg.test.TbTestScriptableObject, int)" newName="d" oldStackTraceSignature="cfg.test.TbTestScriptableObject:get_Item(Int32)" newStackTraceSignature="B.mb:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbTestScriptableObject::ResolveRef([Obfus1]cfg.test.TbTestScriptableObject, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbTestScriptableObject:ResolveRef(Tables)" newStackTraceSignature="B.mb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbTestSet" newFullName="B.Mb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestSet&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestSet&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestSet&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestSet&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.TestSet Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestSet&gt; cfg.test.TbTestSet::get_DataMap([Obfus1]cfg.test.TbTestSet)" newName="b" oldStackTraceSignature="cfg.test.TbTestSet:get_DataMap()" newStackTraceSignature="B.Mb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestSet&gt; cfg.test.TbTestSet::get_DataList([Obfus1]cfg.test.TbTestSet)" newName="B" oldStackTraceSignature="cfg.test.TbTestSet:get_DataList()" newStackTraceSignature="B.Mb:B()" />
      <method signature="[Obfus1]cfg.test.TestSet cfg.test.TbTestSet::GetOrDefault([Obfus1]cfg.test.TbTestSet, int)" newName="c" oldStackTraceSignature="cfg.test.TbTestSet:GetOrDefault(Int32)" newStackTraceSignature="B.Mb:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestSet cfg.test.TbTestSet::Get([Obfus1]cfg.test.TbTestSet, int)" newName="C" oldStackTraceSignature="cfg.test.TbTestSet:Get(Int32)" newStackTraceSignature="B.Mb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestSet cfg.test.TbTestSet::get_Item([Obfus1]cfg.test.TbTestSet, int)" newName="d" oldStackTraceSignature="cfg.test.TbTestSet:get_Item(Int32)" newStackTraceSignature="B.Mb:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbTestSet::ResolveRef([Obfus1]cfg.test.TbTestSet, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbTestSet:ResolveRef(Tables)" newStackTraceSignature="B.Mb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbTestSize" newFullName="B.nb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestSize&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestSize&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestSize&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestSize&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.TestSize Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestSize&gt; cfg.test.TbTestSize::get_DataMap([Obfus1]cfg.test.TbTestSize)" newName="b" oldStackTraceSignature="cfg.test.TbTestSize:get_DataMap()" newStackTraceSignature="B.nb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestSize&gt; cfg.test.TbTestSize::get_DataList([Obfus1]cfg.test.TbTestSize)" newName="B" oldStackTraceSignature="cfg.test.TbTestSize:get_DataList()" newStackTraceSignature="B.nb:B()" />
      <method signature="[Obfus1]cfg.test.TestSize cfg.test.TbTestSize::GetOrDefault([Obfus1]cfg.test.TbTestSize, int)" newName="c" oldStackTraceSignature="cfg.test.TbTestSize:GetOrDefault(Int32)" newStackTraceSignature="B.nb:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestSize cfg.test.TbTestSize::Get([Obfus1]cfg.test.TbTestSize, int)" newName="C" oldStackTraceSignature="cfg.test.TbTestSize:Get(Int32)" newStackTraceSignature="B.nb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestSize cfg.test.TbTestSize::get_Item([Obfus1]cfg.test.TbTestSize, int)" newName="d" oldStackTraceSignature="cfg.test.TbTestSize:get_Item(Int32)" newStackTraceSignature="B.nb:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbTestSize::ResolveRef([Obfus1]cfg.test.TbTestSize, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbTestSize:ResolveRef(Tables)" newStackTraceSignature="B.nb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TbTestString" newFullName="B.Nb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;string,[Obfus1]cfg.test.TestString&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestString&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;string,[Obfus1]cfg.test.TestString&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestString&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.test.TestString Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;string,[Obfus1]cfg.test.TestString&gt; cfg.test.TbTestString::get_DataMap([Obfus1]cfg.test.TbTestString)" newName="b" oldStackTraceSignature="cfg.test.TbTestString:get_DataMap()" newStackTraceSignature="B.Nb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestString&gt; cfg.test.TbTestString::get_DataList([Obfus1]cfg.test.TbTestString)" newName="B" oldStackTraceSignature="cfg.test.TbTestString:get_DataList()" newStackTraceSignature="B.Nb:B()" />
      <method signature="[Obfus1]cfg.test.TestString cfg.test.TbTestString::GetOrDefault([Obfus1]cfg.test.TbTestString, string)" newName="c" oldStackTraceSignature="cfg.test.TbTestString:GetOrDefault(String)" newStackTraceSignature="B.Nb:c(String)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestString cfg.test.TbTestString::Get([Obfus1]cfg.test.TbTestString, string)" newName="C" oldStackTraceSignature="cfg.test.TbTestString:Get(String)" newStackTraceSignature="B.Nb:C(String)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.test.TestString cfg.test.TbTestString::get_Item([Obfus1]cfg.test.TbTestString, string)" newName="d" oldStackTraceSignature="cfg.test.TbTestString:get_Item(String)" newStackTraceSignature="B.Nb:d(String)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TbTestString::ResolveRef([Obfus1]cfg.test.TbTestString, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TbTestString:ResolveRef(Tables)" newStackTraceSignature="B.Nb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.Test3" newFullName="B.ob" status="Renamed">
      <field signature="int X" newName="a" />
      <field signature="int Y" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test.Test3 cfg.test.Test3::DeserializeTest3([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.Test3:DeserializeTest3(ByteBuf)" newStackTraceSignature="B.ob:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.Test3::ResolveRef([Obfus1]cfg.test.Test3, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.Test3:ResolveRef(Tables)" newStackTraceSignature="B.ob:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestBeRef" newFullName="B.Ob" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="int Count" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test.TestBeRef cfg.test.TestBeRef::DeserializeTestBeRef([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.TestBeRef:DeserializeTestBeRef(ByteBuf)" newStackTraceSignature="B.Ob:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestBeRef::ResolveRef([Obfus1]cfg.test.TestBeRef, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.TestBeRef:ResolveRef(Tables)" newStackTraceSignature="B.Ob:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestExcelBean1" newFullName="B.pb" status="Renamed">
      <field signature="int X1" newName="a" />
      <field signature="string X2" newName="A" />
      <field signature="int X3" newName="b" />
      <field signature="float X4" newName="B" />
      <field signature="int __ID__" newName="c" />
      <method signature="[Obfus1]cfg.test.TestExcelBean1 cfg.test.TestExcelBean1::DeserializeTestExcelBean1([Luban.Runtime]Luban.ByteBuf)" newName="C" oldStackTraceSignature="cfg.test.TestExcelBean1:DeserializeTestExcelBean1(ByteBuf)" newStackTraceSignature="B.pb:C(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestExcelBean1::ResolveRef([Obfus1]cfg.test.TestExcelBean1, [Obfus1]cfg.Tables)" newName="d" oldStackTraceSignature="cfg.test.TestExcelBean1:ResolveRef(Tables)" newStackTraceSignature="B.pb:d(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestExcelBean2" newFullName="B.Pb" status="Renamed">
      <field signature="int Y1" newName="a" />
      <field signature="string Y2" newName="A" />
      <field signature="float Y3" newName="b" />
      <field signature="int __ID__" newName="B" />
      <method signature="[Obfus1]cfg.test.TestExcelBean2 cfg.test.TestExcelBean2::DeserializeTestExcelBean2([Luban.Runtime]Luban.ByteBuf)" newName="c" oldStackTraceSignature="cfg.test.TestExcelBean2:DeserializeTestExcelBean2(ByteBuf)" newStackTraceSignature="B.Pb:c(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestExcelBean2::ResolveRef([Obfus1]cfg.test.TestExcelBean2, [Obfus1]cfg.Tables)" newName="C" oldStackTraceSignature="cfg.test.TestExcelBean2:ResolveRef(Tables)" newStackTraceSignature="B.Pb:C(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestFieldAlias" newFullName="B.qb" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="string Name" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test.TestFieldAlias cfg.test.TestFieldAlias::DeserializeTestFieldAlias([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.TestFieldAlias:DeserializeTestFieldAlias(ByteBuf)" newStackTraceSignature="B.qb:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestFieldAlias::ResolveRef([Obfus1]cfg.test.TestFieldAlias, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.TestFieldAlias:ResolveRef(Tables)" newStackTraceSignature="B.qb:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestFieldVariant" newFullName="B.Qb" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="string Name" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test.TestFieldVariant cfg.test.TestFieldVariant::DeserializeTestFieldVariant([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.TestFieldVariant:DeserializeTestFieldVariant(ByteBuf)" newStackTraceSignature="B.Qb:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestFieldVariant::ResolveRef([Obfus1]cfg.test.TestFieldVariant, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.TestFieldVariant:ResolveRef(Tables)" newStackTraceSignature="B.Qb:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestFieldVariant2" newFullName="B.rb" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="string Name" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test.TestFieldVariant2 cfg.test.TestFieldVariant2::DeserializeTestFieldVariant2([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.TestFieldVariant2:DeserializeTestFieldVariant2(ByteBuf)" newStackTraceSignature="B.rb:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestFieldVariant2::ResolveRef([Obfus1]cfg.test.TestFieldVariant2, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.TestFieldVariant2:ResolveRef(Tables)" newStackTraceSignature="B.rb:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestGlobal" newFullName="B.Rb" status="Renamed">
      <field signature="int UnlockEquip" newName="a" />
      <field signature="int UnlockHero" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.test.TestGlobal cfg.test.TestGlobal::DeserializeTestGlobal([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.test.TestGlobal:DeserializeTestGlobal(ByteBuf)" newStackTraceSignature="B.Rb:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestGlobal::ResolveRef([Obfus1]cfg.test.TestGlobal, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.test.TestGlobal:ResolveRef(Tables)" newStackTraceSignature="B.Rb:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestIndex" newFullName="B.sb" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoType1&gt; Eles" newName="A" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.DemoType1&gt; Eles_Index" newName="b" />
      <field signature="int __ID__" newName="B" />
      <method signature="[Obfus1]cfg.test.TestIndex cfg.test.TestIndex::DeserializeTestIndex([Luban.Runtime]Luban.ByteBuf)" newName="c" oldStackTraceSignature="cfg.test.TestIndex:DeserializeTestIndex(ByteBuf)" newStackTraceSignature="B.sb:c(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestIndex::ResolveRef([Obfus1]cfg.test.TestIndex, [Obfus1]cfg.Tables)" newName="C" oldStackTraceSignature="cfg.test.TestIndex:ResolveRef(Tables)" newStackTraceSignature="B.sb:C(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestMap" newFullName="B.Sb" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="[Obfus1]cfg.test.TestIndex Id_Ref" newName="A" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,int&gt; X1" newName="b" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;long,int&gt; X2" newName="B" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;string,int&gt; X3" newName="c" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;[Obfus1]cfg.test.DemoEnum,int&gt; X4" newName="C" />
      <field signature="int __ID__" newName="d" />
      <method signature="[Obfus1]cfg.test.TestMap cfg.test.TestMap::DeserializeTestMap([Luban.Runtime]Luban.ByteBuf)" newName="D" oldStackTraceSignature="cfg.test.TestMap:DeserializeTestMap(ByteBuf)" newStackTraceSignature="B.Sb:D(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestMap::ResolveRef([Obfus1]cfg.test.TestMap, [Obfus1]cfg.Tables)" newName="e" oldStackTraceSignature="cfg.test.TestMap:ResolveRef(Tables)" newStackTraceSignature="B.Sb:e(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestMapper" newFullName="B.tb" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="[UnityEngine.CoreModule]UnityEngine.AudioType AudioType" newName="A" />
      <field signature="[UnityEngine.CoreModule]UnityEngine.Vector2 V2" newName="b" />
      <field signature="int __ID__" newName="B" />
      <method signature="[Obfus1]cfg.test.TestMapper cfg.test.TestMapper::DeserializeTestMapper([Luban.Runtime]Luban.ByteBuf)" newName="c" oldStackTraceSignature="cfg.test.TestMapper:DeserializeTestMapper(ByteBuf)" newStackTraceSignature="B.tb:c(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestMapper::ResolveRef([Obfus1]cfg.test.TestMapper, [Obfus1]cfg.Tables)" newName="C" oldStackTraceSignature="cfg.test.TestMapper:ResolveRef(Tables)" newStackTraceSignature="B.tb:C(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestMultiColumn" newFullName="B.Tb" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="[Obfus1]cfg.test.Foo A" newName="b" />
      <field signature="[Obfus1]cfg.test.Foo B" newName="c" />
      <field signature="[Obfus1]cfg.test.Foo C" newName="d" />
      <field signature="int __ID__" newName="D" />
      <method signature="[Obfus1]cfg.test.TestMultiColumn cfg.test.TestMultiColumn::DeserializeTestMultiColumn([Luban.Runtime]Luban.ByteBuf)" newName="e" oldStackTraceSignature="cfg.test.TestMultiColumn:DeserializeTestMultiColumn(ByteBuf)" newStackTraceSignature="B.Tb:e(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestMultiColumn::ResolveRef([Obfus1]cfg.test.TestMultiColumn, [Obfus1]cfg.Tables)" newName="E" oldStackTraceSignature="cfg.test.TestMultiColumn:ResolveRef(Tables)" newStackTraceSignature="B.Tb:E(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestNull" newFullName="B.ub" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="System.Nullable`1&lt;int&gt; X1" newName="A" />
      <field signature="System.Nullable`1&lt;[Obfus1]cfg.test.DemoEnum&gt; X2" newName="b" />
      <field signature="[Obfus1]cfg.test.DemoType1 X3" newName="B" />
      <field signature="[Obfus1]cfg.test.DemoDynamic X4" newName="c" />
      <field signature="string S1" newName="C" />
      <field signature="string S2" newName="d" />
      <field signature="int __ID__" newName="D" />
      <method signature="[Obfus1]cfg.test.TestNull cfg.test.TestNull::DeserializeTestNull([Luban.Runtime]Luban.ByteBuf)" newName="e" oldStackTraceSignature="cfg.test.TestNull:DeserializeTestNull(ByteBuf)" newStackTraceSignature="B.ub:e(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestNull::ResolveRef([Obfus1]cfg.test.TestNull, [Obfus1]cfg.Tables)" newName="E" oldStackTraceSignature="cfg.test.TestNull:ResolveRef(Tables)" newStackTraceSignature="B.ub:E(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestRange" newFullName="B.Ub" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="float F1" newName="A" />
      <field signature="float F2" newName="b" />
      <field signature="double D1" newName="B" />
      <field signature="double D2" newName="c" />
      <field signature="int I1" newName="C" />
      <field signature="int I2" newName="d" />
      <field signature="int I3" newName="D" />
      <field signature="int I4" newName="e" />
      <field signature="long L1" newName="E" />
      <field signature="long L2" newName="f" />
      <field signature="long L3" newName="F" />
      <field signature="long L4" newName="g" />
      <field signature="int __ID__" newName="G" />
      <method signature="[Obfus1]cfg.test.TestRange cfg.test.TestRange::DeserializeTestRange([Luban.Runtime]Luban.ByteBuf)" newName="h" oldStackTraceSignature="cfg.test.TestRange:DeserializeTestRange(ByteBuf)" newStackTraceSignature="B.Ub:h(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestRange::ResolveRef([Obfus1]cfg.test.TestRange, [Obfus1]cfg.Tables)" newName="H" oldStackTraceSignature="cfg.test.TestRange:ResolveRef(Tables)" newStackTraceSignature="B.Ub:H(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestRef" newFullName="B.vb" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="int X1" newName="A" />
      <field signature="[Obfus1]cfg.test.TestBeRef X1_Ref" newName="b" />
      <field signature="int X12" newName="B" />
      <field signature="[Obfus1]cfg.test.TestBeRef X12_Ref" newName="c" />
      <field signature="int X2" newName="C" />
      <field signature="int X3" newName="d" />
      <field signature="int X4" newName="D" />
      <field signature="[Obfus1]cfg.tag.TestTag X4_Ref" newName="e" />
      <field signature="int[] A1" newName="E" />
      <field signature="[Obfus1]cfg.test.TestBeRef[] A1_Ref" newName="f" />
      <field signature="int[] A2" newName="F" />
      <field signature="[Obfus1]cfg.test.TestBeRef[] A2_Ref" newName="g" />
      <field signature="System.Collections.Generic.List`1&lt;int&gt; B1" newName="G" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestBeRef&gt; B1_Ref" newName="h" />
      <field signature="System.Collections.Generic.List`1&lt;int&gt; B2" newName="H" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.TestBeRef&gt; B2_Ref" newName="i" />
      <field signature="[System.Core]System.Collections.Generic.HashSet`1&lt;int&gt; C1" newName="I" />
      <field signature="[System.Core]System.Collections.Generic.HashSet`1&lt;[Obfus1]cfg.test.TestBeRef&gt; C1_Ref" newName="j" />
      <field signature="[System.Core]System.Collections.Generic.HashSet`1&lt;int&gt; C2" newName="J" />
      <field signature="[System.Core]System.Collections.Generic.HashSet`1&lt;[Obfus1]cfg.test.TestBeRef&gt; C2_Ref" newName="k" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,int&gt; D1" newName="K" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestBeRef&gt; D1_Ref" newName="l" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,int&gt; D2" newName="L" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.test.TestBeRef&gt; D2_Ref" newName="m" />
      <field signature="int E1" newName="M" />
      <field signature="long E2" newName="n" />
      <field signature="string E3" newName="N" />
      <field signature="int F1" newName="o" />
      <field signature="long F2" newName="O" />
      <field signature="string F3" newName="p" />
      <field signature="[Obfus1]cfg.test.RefDynamicBase S1" newName="P" />
      <field signature="int __ID__" newName="q" />
      <method signature="[Obfus1]cfg.test.TestRef cfg.test.TestRef::DeserializeTestRef([Luban.Runtime]Luban.ByteBuf)" newName="Q" oldStackTraceSignature="cfg.test.TestRef:DeserializeTestRef(ByteBuf)" newStackTraceSignature="B.vb:Q(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestRef::ResolveRef([Obfus1]cfg.test.TestRef, [Obfus1]cfg.Tables)" newName="r" oldStackTraceSignature="cfg.test.TestRef:ResolveRef(Tables)" newStackTraceSignature="B.vb:r(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestRow" newFullName="B.Vb" status="Renamed">
      <field signature="int X" newName="a" />
      <field signature="bool Y" newName="b" />
      <field signature="string Z" newName="c" />
      <field signature="[Obfus1]cfg.test.Test3 A" newName="C" />
      <field signature="System.Collections.Generic.List`1&lt;int&gt; B" newName="d" />
      <field signature="int __ID__" newName="D" />
      <method signature="[Obfus1]cfg.test.TestRow cfg.test.TestRow::DeserializeTestRow([Luban.Runtime]Luban.ByteBuf)" newName="e" oldStackTraceSignature="cfg.test.TestRow:DeserializeTestRow(ByteBuf)" newStackTraceSignature="B.Vb:e(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestRow::ResolveRef([Obfus1]cfg.test.TestRow, [Obfus1]cfg.Tables)" newName="E" oldStackTraceSignature="cfg.test.TestRow:ResolveRef(Tables)" newStackTraceSignature="B.Vb:E(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestScriptableObject" newFullName="B.wb" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="string Desc" newName="A" />
      <field signature="float Rate" newName="b" />
      <field signature="int Num" newName="B" />
      <field signature="[UnityEngine.CoreModule]UnityEngine.Vector2 V2" newName="c" />
      <field signature="[UnityEngine.CoreModule]UnityEngine.Vector3 V3" newName="C" />
      <field signature="[UnityEngine.CoreModule]UnityEngine.Vector4 V4" newName="d" />
      <field signature="int __ID__" newName="D" />
      <method signature="[Obfus1]cfg.test.TestScriptableObject cfg.test.TestScriptableObject::DeserializeTestScriptableObject([Luban.Runtime]Luban.ByteBuf)" newName="e" oldStackTraceSignature="cfg.test.TestScriptableObject:DeserializeTestScriptableObject(ByteBuf)" newStackTraceSignature="B.wb:e(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestScriptableObject::ResolveRef([Obfus1]cfg.test.TestScriptableObject, [Obfus1]cfg.Tables)" newName="E" oldStackTraceSignature="cfg.test.TestScriptableObject:ResolveRef(Tables)" newStackTraceSignature="B.wb:E(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestSet" newFullName="B.Wb" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="string X0" newName="A" />
      <field signature="System.Collections.Generic.List`1&lt;int&gt; X1" newName="b" />
      <field signature="System.Collections.Generic.List`1&lt;long&gt; X2" newName="B" />
      <field signature="System.Collections.Generic.List`1&lt;string&gt; X3" newName="c" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoEnum&gt; X4" newName="C" />
      <field signature="int __ID__" newName="d" />
      <method signature="[Obfus1]cfg.test.TestSet cfg.test.TestSet::DeserializeTestSet([Luban.Runtime]Luban.ByteBuf)" newName="D" oldStackTraceSignature="cfg.test.TestSet:DeserializeTestSet(ByteBuf)" newStackTraceSignature="B.Wb:D(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestSet::ResolveRef([Obfus1]cfg.test.TestSet, [Obfus1]cfg.Tables)" newName="e" oldStackTraceSignature="cfg.test.TestSet:ResolveRef(Tables)" newStackTraceSignature="B.Wb:e(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestSize" newFullName="B.xb" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="int[] X1" newName="A" />
      <field signature="System.Collections.Generic.List`1&lt;int&gt; X2" newName="b" />
      <field signature="[System.Core]System.Collections.Generic.HashSet`1&lt;int&gt; X3" newName="B" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,int&gt; X4" newName="c" />
      <field signature="int __ID__" newName="C" />
      <method signature="[Obfus1]cfg.test.TestSize cfg.test.TestSize::DeserializeTestSize([Luban.Runtime]Luban.ByteBuf)" newName="d" oldStackTraceSignature="cfg.test.TestSize:DeserializeTestSize(ByteBuf)" newStackTraceSignature="B.xb:d(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestSize::ResolveRef([Obfus1]cfg.test.TestSize, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TestSize:ResolveRef(Tables)" newStackTraceSignature="B.xb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestString" newFullName="B.Xb" status="Renamed">
      <field signature="string Id" newName="a" />
      <field signature="string S1" newName="A" />
      <field signature="string S2" newName="b" />
      <field signature="[Obfus1]cfg.test.CompactString Cs1" newName="B" />
      <field signature="[Obfus1]cfg.test.CompactString Cs2" newName="c" />
      <field signature="int __ID__" newName="C" />
      <method signature="[Obfus1]cfg.test.TestString cfg.test.TestString::DeserializeTestString([Luban.Runtime]Luban.ByteBuf)" newName="d" oldStackTraceSignature="cfg.test.TestString:DeserializeTestString(ByteBuf)" newStackTraceSignature="B.Xb:d(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestString::ResolveRef([Obfus1]cfg.test.TestString, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.test.TestString:ResolveRef(Tables)" newStackTraceSignature="B.Xb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.TestUeType" newFullName="B.yb" status="Renamed">
      <field signature="bool X1" newName="a" />
      <field signature="byte X2" newName="A" />
      <field signature="short X3" newName="b" />
      <field signature="int X4" newName="B" />
      <field signature="long X5" newName="c" />
      <field signature="float X6" newName="C" />
      <field signature="string X10" newName="d" />
      <field signature="[Obfus1]cfg.test.DemoType1 X12" newName="D" />
      <field signature="[Obfus1]cfg.test.ETestUeType X13" newName="e" />
      <field signature="long T1" newName="E" />
      <field signature="int[] K1" newName="f" />
      <field signature="System.Collections.Generic.List`1&lt;int&gt; K2" newName="F" />
      <field signature="[System.Core]System.Collections.Generic.HashSet`1&lt;int&gt; K5" newName="g" />
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,int&gt; K8" newName="G" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.test.DemoE2&gt; K9" newName="h" />
      <field signature="int __ID__" newName="H" />
      <method signature="[Obfus1]cfg.test.TestUeType cfg.test.TestUeType::DeserializeTestUeType([Luban.Runtime]Luban.ByteBuf)" newName="i" oldStackTraceSignature="cfg.test.TestUeType:DeserializeTestUeType(ByteBuf)" newStackTraceSignature="B.yb:i(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.TestUeType::ResolveRef([Obfus1]cfg.test.TestUeType, [Obfus1]cfg.Tables)" newName="I" oldStackTraceSignature="cfg.test.TestUeType:ResolveRef(Tables)" newStackTraceSignature="B.yb:I(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.test.login.RoleInfo" newFullName="c.Yb" status="Renamed">
      <field signature="long RoleId" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.test.login.RoleInfo cfg.test.login.RoleInfo::DeserializeRoleInfo([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.test.login.RoleInfo:DeserializeRoleInfo(ByteBuf)" newStackTraceSignature="c.Yb:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.test.login.RoleInfo::ResolveRef([Obfus1]cfg.test.login.RoleInfo, [Obfus1]cfg.Tables)" newName="B" oldStackTraceSignature="cfg.test.login.RoleInfo:ResolveRef(Tables)" newStackTraceSignature="c.Yb:B(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.tag.TbTestTag" newFullName="C.zb" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.tag.TestTag&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.tag.TestTag&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.tag.TestTag&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.tag.TestTag&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.tag.TestTag Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.tag.TestTag&gt; cfg.tag.TbTestTag::get_DataMap([Obfus1]cfg.tag.TbTestTag)" newName="b" oldStackTraceSignature="cfg.tag.TbTestTag:get_DataMap()" newStackTraceSignature="C.zb:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.tag.TestTag&gt; cfg.tag.TbTestTag::get_DataList([Obfus1]cfg.tag.TbTestTag)" newName="B" oldStackTraceSignature="cfg.tag.TbTestTag:get_DataList()" newStackTraceSignature="C.zb:B()" />
      <method signature="[Obfus1]cfg.tag.TestTag cfg.tag.TbTestTag::GetOrDefault([Obfus1]cfg.tag.TbTestTag, int)" newName="c" oldStackTraceSignature="cfg.tag.TbTestTag:GetOrDefault(Int32)" newStackTraceSignature="C.zb:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.tag.TestTag cfg.tag.TbTestTag::Get([Obfus1]cfg.tag.TbTestTag, int)" newName="C" oldStackTraceSignature="cfg.tag.TbTestTag:Get(Int32)" newStackTraceSignature="C.zb:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.tag.TestTag cfg.tag.TbTestTag::get_Item([Obfus1]cfg.tag.TbTestTag, int)" newName="d" oldStackTraceSignature="cfg.tag.TbTestTag:get_Item(Int32)" newStackTraceSignature="C.zb:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.tag.TbTestTag::ResolveRef([Obfus1]cfg.tag.TbTestTag, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.tag.TbTestTag:ResolveRef(Tables)" newStackTraceSignature="C.zb:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.tag.TestTag" newFullName="C.Zb" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="string Value" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.tag.TestTag cfg.tag.TestTag::DeserializeTestTag([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.tag.TestTag:DeserializeTestTag(ByteBuf)" newStackTraceSignature="C.Zb:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.tag.TestTag::ResolveRef([Obfus1]cfg.tag.TestTag, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.tag.TestTag:ResolveRef(Tables)" newStackTraceSignature="C.Zb:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.l10n.L10NDemo" newFullName="d.aB" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="string Text" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.l10n.L10NDemo cfg.l10n.L10NDemo::DeserializeL10NDemo([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.l10n.L10NDemo:DeserializeL10NDemo(ByteBuf)" newStackTraceSignature="d.aB:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.l10n.L10NDemo::ResolveRef([Obfus1]cfg.l10n.L10NDemo, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.l10n.L10NDemo:ResolveRef(Tables)" newStackTraceSignature="d.aB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.l10n.PatchDemo" newFullName="d.AB" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="int Value" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.l10n.PatchDemo cfg.l10n.PatchDemo::DeserializePatchDemo([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.l10n.PatchDemo:DeserializePatchDemo(ByteBuf)" newStackTraceSignature="d.AB:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.l10n.PatchDemo::ResolveRef([Obfus1]cfg.l10n.PatchDemo, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.l10n.PatchDemo:ResolveRef(Tables)" newStackTraceSignature="d.AB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.l10n.TbL10NDemo" newFullName="d.bB" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.l10n.L10NDemo&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.l10n.L10NDemo&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.l10n.L10NDemo&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.l10n.L10NDemo&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.l10n.L10NDemo Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.l10n.L10NDemo&gt; cfg.l10n.TbL10NDemo::get_DataMap([Obfus1]cfg.l10n.TbL10NDemo)" newName="b" oldStackTraceSignature="cfg.l10n.TbL10NDemo:get_DataMap()" newStackTraceSignature="d.bB:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.l10n.L10NDemo&gt; cfg.l10n.TbL10NDemo::get_DataList([Obfus1]cfg.l10n.TbL10NDemo)" newName="B" oldStackTraceSignature="cfg.l10n.TbL10NDemo:get_DataList()" newStackTraceSignature="d.bB:B()" />
      <method signature="[Obfus1]cfg.l10n.L10NDemo cfg.l10n.TbL10NDemo::GetOrDefault([Obfus1]cfg.l10n.TbL10NDemo, int)" newName="c" oldStackTraceSignature="cfg.l10n.TbL10NDemo:GetOrDefault(Int32)" newStackTraceSignature="d.bB:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.l10n.L10NDemo cfg.l10n.TbL10NDemo::Get([Obfus1]cfg.l10n.TbL10NDemo, int)" newName="C" oldStackTraceSignature="cfg.l10n.TbL10NDemo:Get(Int32)" newStackTraceSignature="d.bB:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.l10n.L10NDemo cfg.l10n.TbL10NDemo::get_Item([Obfus1]cfg.l10n.TbL10NDemo, int)" newName="d" oldStackTraceSignature="cfg.l10n.TbL10NDemo:get_Item(Int32)" newStackTraceSignature="d.bB:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.l10n.TbL10NDemo::ResolveRef([Obfus1]cfg.l10n.TbL10NDemo, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.l10n.TbL10NDemo:ResolveRef(Tables)" newStackTraceSignature="d.bB:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.l10n.TbPatchDemo" newFullName="d.BB" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.l10n.PatchDemo&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.l10n.PatchDemo&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.l10n.PatchDemo&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.l10n.PatchDemo&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.l10n.PatchDemo Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.l10n.PatchDemo&gt; cfg.l10n.TbPatchDemo::get_DataMap([Obfus1]cfg.l10n.TbPatchDemo)" newName="b" oldStackTraceSignature="cfg.l10n.TbPatchDemo:get_DataMap()" newStackTraceSignature="d.BB:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.l10n.PatchDemo&gt; cfg.l10n.TbPatchDemo::get_DataList([Obfus1]cfg.l10n.TbPatchDemo)" newName="B" oldStackTraceSignature="cfg.l10n.TbPatchDemo:get_DataList()" newStackTraceSignature="d.BB:B()" />
      <method signature="[Obfus1]cfg.l10n.PatchDemo cfg.l10n.TbPatchDemo::GetOrDefault([Obfus1]cfg.l10n.TbPatchDemo, int)" newName="c" oldStackTraceSignature="cfg.l10n.TbPatchDemo:GetOrDefault(Int32)" newStackTraceSignature="d.BB:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.l10n.PatchDemo cfg.l10n.TbPatchDemo::Get([Obfus1]cfg.l10n.TbPatchDemo, int)" newName="C" oldStackTraceSignature="cfg.l10n.TbPatchDemo:Get(Int32)" newStackTraceSignature="d.BB:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.l10n.PatchDemo cfg.l10n.TbPatchDemo::get_Item([Obfus1]cfg.l10n.TbPatchDemo, int)" newName="d" oldStackTraceSignature="cfg.l10n.TbPatchDemo:get_Item(Int32)" newStackTraceSignature="d.BB:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.l10n.TbPatchDemo::ResolveRef([Obfus1]cfg.l10n.TbPatchDemo, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.l10n.TbPatchDemo:ResolveRef(Tables)" newStackTraceSignature="d.BB:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.item.EClothersStarQualityType" newFullName="D.cB" status="Renamed">
      <field signature="[Obfus1]cfg.item.EClothersStarQualityType ONE" newName="a" />
      <field signature="[Obfus1]cfg.item.EClothersStarQualityType TWO" newName="A" />
      <field signature="[Obfus1]cfg.item.EClothersStarQualityType THREE" newName="b" />
      <field signature="[Obfus1]cfg.item.EClothersStarQualityType FOUR" newName="B" />
      <field signature="[Obfus1]cfg.item.EClothersStarQualityType FIVE" newName="c" />
      <field signature="[Obfus1]cfg.item.EClothersStarQualityType SIX" newName="C" />
      <field signature="[Obfus1]cfg.item.EClothersStarQualityType SEVEN" newName="d" />
      <field signature="[Obfus1]cfg.item.EClothersStarQualityType EIGHT" newName="D" />
      <field signature="[Obfus1]cfg.item.EClothersStarQualityType NINE" newName="e" />
      <field signature="[Obfus1]cfg.item.EClothersStarQualityType TEN" newName="E" />
    </type>
    <type fullName="cfg.item.EClothersTag" newFullName="D.CB" status="Renamed">
      <field signature="[Obfus1]cfg.item.EClothersTag FANG_SHAI" newName="a" />
      <field signature="[Obfus1]cfg.item.EClothersTag WU_ZHE" newName="A" />
    </type>
    <type fullName="cfg.item.EClothesHidePartType" newFullName="D.dB" status="Renamed">
      <field signature="[Obfus1]cfg.item.EClothesHidePartType CHEST" newName="a" />
      <field signature="[Obfus1]cfg.item.EClothesHidePartType HEAD" newName="A" />
      <field signature="[Obfus1]cfg.item.EClothesHidePartType SPINE_UPPER" newName="b" />
      <field signature="[Obfus1]cfg.item.EClothesHidePartType SPINE_LOWER" newName="B" />
      <field signature="[Obfus1]cfg.item.EClothesHidePartType HIP" newName="c" />
      <field signature="[Obfus1]cfg.item.EClothesHidePartType LEG_UPPER" newName="C" />
      <field signature="[Obfus1]cfg.item.EClothesHidePartType LEG_MIDDLE" newName="d" />
      <field signature="[Obfus1]cfg.item.EClothesHidePartType LEG_LOWER" newName="D" />
    </type>
    <type fullName="cfg.item.EClothesPropertyType" newFullName="D.DB" status="Renamed">
      <field signature="[Obfus1]cfg.item.EClothesPropertyType JIAN_YUE" newName="a" />
      <field signature="[Obfus1]cfg.item.EClothesPropertyType HUA_LI" newName="A" />
      <field signature="[Obfus1]cfg.item.EClothesPropertyType KE_AI" newName="b" />
      <field signature="[Obfus1]cfg.item.EClothesPropertyType CHENG_SHU" newName="B" />
      <field signature="[Obfus1]cfg.item.EClothesPropertyType HUO_PO" newName="c" />
      <field signature="[Obfus1]cfg.item.EClothesPropertyType YOU_YA" newName="C" />
      <field signature="[Obfus1]cfg.item.EClothesPropertyType QING_CHUN" newName="d" />
      <field signature="[Obfus1]cfg.item.EClothesPropertyType XING_GAN" newName="D" />
      <field signature="[Obfus1]cfg.item.EClothesPropertyType QING_LIANG" newName="e" />
      <field signature="[Obfus1]cfg.item.EClothesPropertyType BAO_NUAN" newName="E" />
    </type>
    <type fullName="cfg.item.ECurrencyType" newFullName="D.eB" status="Renamed">
      <field signature="[Obfus1]cfg.item.ECurrencyType DIAMOND" newName="a" />
      <field signature="[Obfus1]cfg.item.ECurrencyType GOLD" newName="A" />
      <field signature="[Obfus1]cfg.item.ECurrencyType SILVER" newName="b" />
      <field signature="[Obfus1]cfg.item.ECurrencyType EXP" newName="B" />
      <field signature="[Obfus1]cfg.item.ECurrencyType POWER_POINT" newName="c" />
    </type>
    <type fullName="cfg.item.EItemQuality" newFullName="D.EB" status="Renamed">
      <field signature="[Obfus1]cfg.item.EItemQuality WHITE" newName="a" />
      <field signature="[Obfus1]cfg.item.EItemQuality GREEN" newName="A" />
      <field signature="[Obfus1]cfg.item.EItemQuality BLUE" newName="b" />
      <field signature="[Obfus1]cfg.item.EItemQuality PURPLE" newName="B" />
      <field signature="[Obfus1]cfg.item.EItemQuality GOLDEN" newName="c" />
    </type>
    <type fullName="cfg.item.EMajorType" newFullName="D.fB" status="Renamed">
      <field signature="[Obfus1]cfg.item.EMajorType CURRENCY" newName="a" />
      <field signature="[Obfus1]cfg.item.EMajorType CLOTH" newName="A" />
      <field signature="[Obfus1]cfg.item.EMajorType QUEST" newName="b" />
      <field signature="[Obfus1]cfg.item.EMajorType CONSUMABLES" newName="B" />
      <field signature="[Obfus1]cfg.item.EMajorType TREASURE_BOX" newName="c" />
      <field signature="[Obfus1]cfg.item.EMajorType ACHIEVEMENT_AND_TITLE" newName="C" />
      <field signature="[Obfus1]cfg.item.EMajorType HEAD_FRAME" newName="d" />
      <field signature="[Obfus1]cfg.item.EMajorType VOICE" newName="D" />
      <field signature="[Obfus1]cfg.item.EMajorType ACTION" newName="e" />
      <field signature="[Obfus1]cfg.item.EMajorType EXPANSION" newName="E" />
      <field signature="[Obfus1]cfg.item.EMajorType MATERIAL" newName="f" />
    </type>
    <type fullName="cfg.item.EMinorType" newFullName="D.FB" status="Renamed">
      <field signature="[Obfus1]cfg.item.EMinorType DIAMOND" newName="a" />
      <field signature="[Obfus1]cfg.item.EMinorType GOLD" newName="A" />
      <field signature="[Obfus1]cfg.item.EMinorType SILVER" newName="b" />
      <field signature="[Obfus1]cfg.item.EMinorType EXP" newName="B" />
      <field signature="[Obfus1]cfg.item.EMinorType POWER_POINT" newName="c" />
      <field signature="[Obfus1]cfg.item.EMinorType HAIR_STYLE" newName="C" />
      <field signature="[Obfus1]cfg.item.EMinorType COAT" newName="d" />
      <field signature="[Obfus1]cfg.item.EMinorType UPPER_JACKET" newName="D" />
      <field signature="[Obfus1]cfg.item.EMinorType TROUSERS" newName="e" />
      <field signature="[Obfus1]cfg.item.EMinorType SKIRT" newName="E" />
      <field signature="[Obfus1]cfg.item.EMinorType SOCKS" newName="f" />
      <field signature="[Obfus1]cfg.item.EMinorType SHOES" newName="F" />
      <field signature="[Obfus1]cfg.item.EMinorType HAIR_ACCESSORY" newName="g" />
      <field signature="[Obfus1]cfg.item.EMinorType HAT" newName="G" />
      <field signature="[Obfus1]cfg.item.EMinorType EARRING" newName="h" />
      <field signature="[Obfus1]cfg.item.EMinorType NECKLACE" newName="H" />
      <field signature="[Obfus1]cfg.item.EMinorType BRACELET" newName="i" />
      <field signature="[Obfus1]cfg.item.EMinorType HAIR_CLASP" newName="I" />
      <field signature="[Obfus1]cfg.item.EMinorType GLOVE" newName="j" />
      <field signature="[Obfus1]cfg.item.EMinorType HANDHELD_OBJECT" newName="J" />
      <field signature="[Obfus1]cfg.item.EMinorType SPECIAL" newName="k" />
      <field signature="[Obfus1]cfg.item.EMinorType BASE_COSMETIC" newName="K" />
      <field signature="[Obfus1]cfg.item.EMinorType EYEBROW_COSMETIC" newName="l" />
      <field signature="[Obfus1]cfg.item.EMinorType EYELASH" newName="L" />
      <field signature="[Obfus1]cfg.item.EMinorType COSMETIC_CONTACT_LENSES" newName="m" />
      <field signature="[Obfus1]cfg.item.EMinorType LIP_COSMETIC" newName="M" />
      <field signature="[Obfus1]cfg.item.EMinorType SKIN_COLOR" newName="n" />
      <field signature="[Obfus1]cfg.item.EMinorType ONE_PIECE_DRESS" newName="N" />
      <field signature="[Obfus1]cfg.item.EMinorType SWITCH_CLOTHES_SCENE" newName="o" />
      <field signature="[Obfus1]cfg.item.EMinorType QUEST" newName="O" />
      <field signature="[Obfus1]cfg.item.EMinorType CAST" newName="p" />
      <field signature="[Obfus1]cfg.item.EMinorType SWORD" newName="P" />
      <field signature="[Obfus1]cfg.item.EMinorType BOW_ARROW" newName="q" />
      <field signature="[Obfus1]cfg.item.EMinorType WANDS" newName="Q" />
      <field signature="[Obfus1]cfg.item.EMinorType SPECIAL_TOOL" newName="r" />
      <field signature="[Obfus1]cfg.item.EMinorType FOOD" newName="R" />
      <field signature="[Obfus1]cfg.item.EMinorType TREASURE_BOX" newName="s" />
      <field signature="[Obfus1]cfg.item.EMinorType KEY" newName="S" />
      <field signature="[Obfus1]cfg.item.EMinorType MULTI_CHOOSE_TREASURE_BOX" newName="t" />
      <field signature="[Obfus1]cfg.item.EMinorType ACHIEVEMENT" newName="T" />
      <field signature="[Obfus1]cfg.item.EMinorType TITLE" newName="u" />
      <field signature="[Obfus1]cfg.item.EMinorType AVATAR_FRAME" newName="U" />
      <field signature="[Obfus1]cfg.item.EMinorType VOICE" newName="v" />
      <field signature="[Obfus1]cfg.item.EMinorType IDLE_POSE" newName="V" />
      <field signature="[Obfus1]cfg.item.EMinorType PHOTO_POSE" newName="w" />
      <field signature="[Obfus1]cfg.item.EMinorType BAG" newName="W" />
      <field signature="[Obfus1]cfg.item.EMinorType FRIEND_CAPACITY" newName="x" />
      <field signature="[Obfus1]cfg.item.EMinorType CONSTRUCTION_MATERIAL" newName="X" />
      <field signature="[Obfus1]cfg.item.EMinorType DESIGN_DRAWING" newName="y" />
    </type>
    <type fullName="cfg.item.EUseType" newFullName="D.gB" status="Renamed">
      <field signature="[Obfus1]cfg.item.EUseType MANUAL" newName="a" />
      <field signature="[Obfus1]cfg.item.EUseType AUTO" newName="A" />
    </type>
    <type fullName="cfg.item.Item" newFullName="D.GB" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="string Name" newName="A" />
      <field signature="[Obfus1]cfg.item.EMajorType MajorType" newName="b" />
      <field signature="[Obfus1]cfg.item.EMinorType MinorType" newName="B" />
      <field signature="[Obfus1]cfg.item.EItemQuality Quality" newName="c" />
      <field signature="string Icon" newName="C" />
      <field signature="string IconBackgroud" newName="d" />
      <field signature="string IconMask" newName="D" />
      <field signature="string Desc" newName="e" />
      <field signature="int ShowOrder" newName="E" />
      <field signature="int __ID__" newName="f" />
      <method signature="[Obfus1]cfg.item.Item cfg.item.Item::DeserializeItem([Luban.Runtime]Luban.ByteBuf)" newName="F" oldStackTraceSignature="cfg.item.Item:DeserializeItem(ByteBuf)" newStackTraceSignature="D.GB:F(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.item.Item::ResolveRef([Obfus1]cfg.item.Item, [Obfus1]cfg.Tables)" newName="g" oldStackTraceSignature="cfg.item.Item:ResolveRef(Tables)" newStackTraceSignature="D.GB:g(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.item.TbItem" newFullName="D.hB" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.item.Item&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.item.Item&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.item.Item&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.item.Item&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.item.Item Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.item.Item&gt; cfg.item.TbItem::get_DataMap([Obfus1]cfg.item.TbItem)" newName="b" oldStackTraceSignature="cfg.item.TbItem:get_DataMap()" newStackTraceSignature="D.hB:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.item.Item&gt; cfg.item.TbItem::get_DataList([Obfus1]cfg.item.TbItem)" newName="B" oldStackTraceSignature="cfg.item.TbItem:get_DataList()" newStackTraceSignature="D.hB:B()" />
      <method signature="[Obfus1]cfg.item.Item cfg.item.TbItem::GetOrDefault([Obfus1]cfg.item.TbItem, int)" newName="c" oldStackTraceSignature="cfg.item.TbItem:GetOrDefault(Int32)" newStackTraceSignature="D.hB:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.item.Item cfg.item.TbItem::Get([Obfus1]cfg.item.TbItem, int)" newName="C" oldStackTraceSignature="cfg.item.TbItem:Get(Int32)" newStackTraceSignature="D.hB:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.item.Item cfg.item.TbItem::get_Item([Obfus1]cfg.item.TbItem, int)" newName="d" oldStackTraceSignature="cfg.item.TbItem:get_Item(Int32)" newStackTraceSignature="D.hB:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.item.TbItem::ResolveRef([Obfus1]cfg.item.TbItem, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.item.TbItem:ResolveRef(Tables)" newStackTraceSignature="D.hB:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.common.DateTimeRange" newFullName="e.HB" status="Renamed">
      <field signature="System.Nullable`1&lt;long&gt; StartTime" newName="a" />
      <field signature="System.Nullable`1&lt;long&gt; EndTime" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.common.DateTimeRange cfg.common.DateTimeRange::DeserializeDateTimeRange([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.common.DateTimeRange:DeserializeDateTimeRange(ByteBuf)" newStackTraceSignature="e.HB:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.common.DateTimeRange::ResolveRef([Obfus1]cfg.common.DateTimeRange, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.common.DateTimeRange:ResolveRef(Tables)" newStackTraceSignature="e.HB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.common.EBoolOperator" newFullName="e.iB" status="Renamed">
      <field signature="[Obfus1]cfg.common.EBoolOperator AND" newName="a" />
      <field signature="[Obfus1]cfg.common.EBoolOperator OR" newName="A" />
    </type>
    <type fullName="cfg.common.FloatRange" newFullName="e.IB" status="Renamed">
      <field signature="float Min" newName="a" />
      <field signature="float Max" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.common.FloatRange cfg.common.FloatRange::DeserializeFloatRange([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.common.FloatRange:DeserializeFloatRange(ByteBuf)" newStackTraceSignature="e.IB:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.common.FloatRange::ResolveRef([Obfus1]cfg.common.FloatRange, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.common.FloatRange:ResolveRef(Tables)" newStackTraceSignature="e.IB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.common.GlobalConfig" newFullName="e.jB" status="Renamed">
      <field signature="int X1" newName="a" />
      <field signature="int X2" newName="A" />
      <field signature="int X3" newName="b" />
      <field signature="int X4" newName="B" />
      <field signature="int X5" newName="c" />
      <field signature="int X6" newName="C" />
      <field signature="System.Collections.Generic.List`1&lt;int&gt; X7" newName="d" />
      <field signature="int __ID__" newName="D" />
      <method signature="[Obfus1]cfg.common.GlobalConfig cfg.common.GlobalConfig::DeserializeGlobalConfig([Luban.Runtime]Luban.ByteBuf)" newName="e" oldStackTraceSignature="cfg.common.GlobalConfig:DeserializeGlobalConfig(ByteBuf)" newStackTraceSignature="e.jB:e(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.common.GlobalConfig::ResolveRef([Obfus1]cfg.common.GlobalConfig, [Obfus1]cfg.Tables)" newName="E" oldStackTraceSignature="cfg.common.GlobalConfig:ResolveRef(Tables)" newStackTraceSignature="e.jB:E(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.common.IntRange" newFullName="e.JB" status="Renamed">
      <field signature="int Min" newName="a" />
      <field signature="int Max" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.common.IntRange cfg.common.IntRange::DeserializeIntRange([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.common.IntRange:DeserializeIntRange(ByteBuf)" newStackTraceSignature="e.JB:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.common.IntRange::ResolveRef([Obfus1]cfg.common.IntRange, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.common.IntRange:ResolveRef(Tables)" newStackTraceSignature="e.JB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.common.OneDayTimeRange" newFullName="e.kB" status="Renamed">
      <field signature="[Obfus1]cfg.common.TimeOfDay StartTime" newName="a" />
      <field signature="[Obfus1]cfg.common.TimeOfDay EndTime" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.common.OneDayTimeRange cfg.common.OneDayTimeRange::DeserializeOneDayTimeRange([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.common.OneDayTimeRange:DeserializeOneDayTimeRange(ByteBuf)" newStackTraceSignature="e.kB:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.common.OneDayTimeRange::ResolveRef([Obfus1]cfg.common.OneDayTimeRange, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.common.OneDayTimeRange:ResolveRef(Tables)" newStackTraceSignature="e.kB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.common.TbGlobalConfig" newFullName="e.KB" status="Renamed">
      <field signature="[Obfus1]cfg.common.GlobalConfig _data" newName="a" />
      <property signature="[Obfus1]cfg.common.GlobalConfig Data" newName="f" />
      <property signature="int X1" newName="F" />
      <property signature="int X2" newName="g" />
      <property signature="int X3" newName="G" />
      <property signature="int X4" newName="h" />
      <property signature="int X5" newName="H" />
      <property signature="int X6" newName="i" />
      <property signature="System.Collections.Generic.List`1&lt;int&gt; X7" newName="I" />
      <method signature="[Obfus1]cfg.common.GlobalConfig cfg.common.TbGlobalConfig::get_Data([Obfus1]cfg.common.TbGlobalConfig)" newName="A" oldStackTraceSignature="cfg.common.TbGlobalConfig:get_Data()" newStackTraceSignature="e.KB:A()" />
      <method signature="int cfg.common.TbGlobalConfig::get_X1([Obfus1]cfg.common.TbGlobalConfig)" newName="b" oldStackTraceSignature="cfg.common.TbGlobalConfig:get_X1()" newStackTraceSignature="e.KB:b()" />
      <method signature="int cfg.common.TbGlobalConfig::get_X2([Obfus1]cfg.common.TbGlobalConfig)" newName="B" oldStackTraceSignature="cfg.common.TbGlobalConfig:get_X2()" newStackTraceSignature="e.KB:B()" />
      <method signature="int cfg.common.TbGlobalConfig::get_X3([Obfus1]cfg.common.TbGlobalConfig)" newName="c" oldStackTraceSignature="cfg.common.TbGlobalConfig:get_X3()" newStackTraceSignature="e.KB:c()" />
      <method signature="int cfg.common.TbGlobalConfig::get_X4([Obfus1]cfg.common.TbGlobalConfig)" newName="C" oldStackTraceSignature="cfg.common.TbGlobalConfig:get_X4()" newStackTraceSignature="e.KB:C()" />
      <method signature="int cfg.common.TbGlobalConfig::get_X5([Obfus1]cfg.common.TbGlobalConfig)" newName="d" oldStackTraceSignature="cfg.common.TbGlobalConfig:get_X5()" newStackTraceSignature="e.KB:d()" />
      <method signature="int cfg.common.TbGlobalConfig::get_X6([Obfus1]cfg.common.TbGlobalConfig)" newName="D" oldStackTraceSignature="cfg.common.TbGlobalConfig:get_X6()" newStackTraceSignature="e.KB:D()" />
      <method signature="System.Collections.Generic.List`1&lt;int&gt; cfg.common.TbGlobalConfig::get_X7([Obfus1]cfg.common.TbGlobalConfig)" newName="e" oldStackTraceSignature="cfg.common.TbGlobalConfig:get_X7()" newStackTraceSignature="e.KB:e()" />
      <method signature="void cfg.common.TbGlobalConfig::ResolveRef([Obfus1]cfg.common.TbGlobalConfig, [Obfus1]cfg.Tables)" newName="E" oldStackTraceSignature="cfg.common.TbGlobalConfig:ResolveRef(Tables)" newStackTraceSignature="e.KB:E(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.common.TimeOfDay" newFullName="e.lB" status="Renamed">
      <field signature="int Hour" newName="a" />
      <field signature="int Minute" newName="A" />
      <field signature="int Second" newName="b" />
      <field signature="int __ID__" newName="B" />
      <method signature="[Obfus1]cfg.common.TimeOfDay cfg.common.TimeOfDay::DeserializeTimeOfDay([Luban.Runtime]Luban.ByteBuf)" newName="c" oldStackTraceSignature="cfg.common.TimeOfDay:DeserializeTimeOfDay(ByteBuf)" newStackTraceSignature="e.lB:c(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.common.TimeOfDay::ResolveRef([Obfus1]cfg.common.TimeOfDay, [Obfus1]cfg.Tables)" newName="C" oldStackTraceSignature="cfg.common.TimeOfDay:ResolveRef(Tables)" newStackTraceSignature="e.lB:C(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.BehaviorTree" newFullName="E.LB" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="string Name" newName="A" />
      <field signature="string Desc" newName="b" />
      <field signature="string BlackboardId" newName="B" />
      <field signature="[Obfus1]cfg.ai.Blackboard BlackboardId_Ref" newName="c" />
      <field signature="[Obfus1]cfg.ai.ComposeNode Root" newName="C" />
      <field signature="int __ID__" newName="d" />
      <method signature="[Obfus1]cfg.ai.BehaviorTree cfg.ai.BehaviorTree::DeserializeBehaviorTree([Luban.Runtime]Luban.ByteBuf)" newName="D" oldStackTraceSignature="cfg.ai.BehaviorTree:DeserializeBehaviorTree(ByteBuf)" newStackTraceSignature="E.LB:D(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.BehaviorTree::ResolveRef([Obfus1]cfg.ai.BehaviorTree, [Obfus1]cfg.Tables)" newName="e" oldStackTraceSignature="cfg.ai.BehaviorTree:ResolveRef(Tables)" newStackTraceSignature="E.LB:e(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.BinaryOperator" newFullName="E.mB" status="Renamed">
      <field signature="[Obfus1]cfg.ai.EOperator Oper" newName="a" />
      <field signature="[Obfus1]cfg.ai.KeyData Data" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.ai.BinaryOperator cfg.ai.BinaryOperator::DeserializeBinaryOperator([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.ai.BinaryOperator:DeserializeBinaryOperator(ByteBuf)" newStackTraceSignature="E.mB:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.BinaryOperator::ResolveRef([Obfus1]cfg.ai.BinaryOperator, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.BinaryOperator:ResolveRef(Tables)" newStackTraceSignature="E.mB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.Blackboard" newFullName="E.MB" status="Renamed">
      <field signature="string Name" newName="a" />
      <field signature="string Desc" newName="A" />
      <field signature="string ParentName" newName="b" />
      <field signature="[Obfus1]cfg.ai.Blackboard ParentName_Ref" newName="B" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.ai.BlackboardKey&gt; Keys" newName="c" />
      <field signature="int __ID__" newName="C" />
      <method signature="[Obfus1]cfg.ai.Blackboard cfg.ai.Blackboard::DeserializeBlackboard([Luban.Runtime]Luban.ByteBuf)" newName="d" oldStackTraceSignature="cfg.ai.Blackboard:DeserializeBlackboard(ByteBuf)" newStackTraceSignature="E.MB:d(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.Blackboard::ResolveRef([Obfus1]cfg.ai.Blackboard, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.ai.Blackboard:ResolveRef(Tables)" newStackTraceSignature="E.MB:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.BlackboardKey" newFullName="E.nB" status="Renamed">
      <field signature="string Name" newName="a" />
      <field signature="string Desc" newName="A" />
      <field signature="bool IsStatic" newName="b" />
      <field signature="[Obfus1]cfg.ai.EKeyType KeyType" newName="B" />
      <field signature="string TypeClassName" newName="c" />
      <field signature="int __ID__" newName="C" />
      <method signature="[Obfus1]cfg.ai.BlackboardKey cfg.ai.BlackboardKey::DeserializeBlackboardKey([Luban.Runtime]Luban.ByteBuf)" newName="d" oldStackTraceSignature="cfg.ai.BlackboardKey:DeserializeBlackboardKey(ByteBuf)" newStackTraceSignature="E.nB:d(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.BlackboardKey::ResolveRef([Obfus1]cfg.ai.BlackboardKey, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.ai.BlackboardKey:ResolveRef(Tables)" newStackTraceSignature="E.nB:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.BlackboardKeyData" newFullName="E.NB" status="Renamed">
      <field signature="string Value" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.ai.BlackboardKeyData cfg.ai.BlackboardKeyData::DeserializeBlackboardKeyData([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.ai.BlackboardKeyData:DeserializeBlackboardKeyData(ByteBuf)" newStackTraceSignature="E.NB:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.BlackboardKeyData::ResolveRef([Obfus1]cfg.ai.BlackboardKeyData, [Obfus1]cfg.Tables)" newName="B" oldStackTraceSignature="cfg.ai.BlackboardKeyData:ResolveRef(Tables)" newStackTraceSignature="E.NB:B(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.ChooseSkill" newFullName="E.oB" status="Renamed">
      <field signature="string TargetActorKey" newName="a" />
      <field signature="string ResultSkillIdKey" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.ai.ChooseSkill cfg.ai.ChooseSkill::DeserializeChooseSkill([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.ai.ChooseSkill:DeserializeChooseSkill(ByteBuf)" newStackTraceSignature="E.oB:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.ChooseSkill::ResolveRef([Obfus1]cfg.ai.ChooseSkill, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.ChooseSkill:ResolveRef(Tables)" newStackTraceSignature="E.oB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.ChooseTarget" newFullName="E.OB" status="Renamed">
      <field signature="string ResultTargetKey" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.ai.ChooseTarget cfg.ai.ChooseTarget::DeserializeChooseTarget([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.ai.ChooseTarget:DeserializeChooseTarget(ByteBuf)" newStackTraceSignature="E.OB:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.ChooseTarget::ResolveRef([Obfus1]cfg.ai.ChooseTarget, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.ChooseTarget:ResolveRef(Tables)" newStackTraceSignature="E.OB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.ComposeNode" newFullName="E.pB" status="Renamed">
      <method signature="[Obfus1]cfg.ai.ComposeNode cfg.ai.ComposeNode::DeserializeComposeNode([Luban.Runtime]Luban.ByteBuf)" newName="a" oldStackTraceSignature="cfg.ai.ComposeNode:DeserializeComposeNode(ByteBuf)" newStackTraceSignature="E.pB:a(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.ComposeNode::ResolveRef([Obfus1]cfg.ai.ComposeNode, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.ComposeNode:ResolveRef(Tables)" newStackTraceSignature="E.pB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.DebugPrint" newFullName="E.PB" status="Renamed">
      <field signature="string Text" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.ai.DebugPrint cfg.ai.DebugPrint::DeserializeDebugPrint([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.ai.DebugPrint:DeserializeDebugPrint(ByteBuf)" newStackTraceSignature="E.PB:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.DebugPrint::ResolveRef([Obfus1]cfg.ai.DebugPrint, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.DebugPrint:ResolveRef(Tables)" newStackTraceSignature="E.PB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.Decorator" newFullName="E.qB" status="Renamed">
      <field signature="[Obfus1]cfg.ai.EFlowAbortMode FlowAbortMode" newName="a" />
      <method signature="[Obfus1]cfg.ai.Decorator cfg.ai.Decorator::DeserializeDecorator([Luban.Runtime]Luban.ByteBuf)" newName="A" oldStackTraceSignature="cfg.ai.Decorator:DeserializeDecorator(ByteBuf)" newStackTraceSignature="E.qB:A(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.Decorator::ResolveRef([Obfus1]cfg.ai.Decorator, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.Decorator:ResolveRef(Tables)" newStackTraceSignature="E.qB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.DistanceLessThan" newFullName="E.QB" status="Renamed">
      <field signature="string Actor1Key" newName="a" />
      <field signature="string Actor2Key" newName="A" />
      <field signature="float Distance" newName="b" />
      <field signature="bool ReverseResult" newName="B" />
      <field signature="int __ID__" newName="c" />
      <method signature="[Obfus1]cfg.ai.DistanceLessThan cfg.ai.DistanceLessThan::DeserializeDistanceLessThan([Luban.Runtime]Luban.ByteBuf)" newName="C" oldStackTraceSignature="cfg.ai.DistanceLessThan:DeserializeDistanceLessThan(ByteBuf)" newStackTraceSignature="E.QB:C(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.DistanceLessThan::ResolveRef([Obfus1]cfg.ai.DistanceLessThan, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.DistanceLessThan:ResolveRef(Tables)" newStackTraceSignature="E.QB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.EExecutor" newFullName="E.rB" status="Renamed">
      <field signature="[Obfus1]cfg.ai.EExecutor CLIENT" newName="a" />
      <field signature="[Obfus1]cfg.ai.EExecutor SERVER" newName="A" />
    </type>
    <type fullName="cfg.ai.EFinishMode" newFullName="E.RB" status="Renamed">
      <field signature="[Obfus1]cfg.ai.EFinishMode IMMEDIATE" newName="a" />
      <field signature="[Obfus1]cfg.ai.EFinishMode DELAYED" newName="A" />
    </type>
    <type fullName="cfg.ai.EFlowAbortMode" newFullName="E.sB" status="Renamed">
      <field signature="[Obfus1]cfg.ai.EFlowAbortMode NONE" newName="a" />
      <field signature="[Obfus1]cfg.ai.EFlowAbortMode LOWER_PRIORITY" newName="A" />
      <field signature="[Obfus1]cfg.ai.EFlowAbortMode SELF" newName="b" />
      <field signature="[Obfus1]cfg.ai.EFlowAbortMode BOTH" newName="B" />
    </type>
    <type fullName="cfg.ai.EKeyType" newFullName="E.SB" status="Renamed">
      <field signature="[Obfus1]cfg.ai.EKeyType BOOL" newName="a" />
      <field signature="[Obfus1]cfg.ai.EKeyType INT" newName="A" />
      <field signature="[Obfus1]cfg.ai.EKeyType FLOAT" newName="b" />
      <field signature="[Obfus1]cfg.ai.EKeyType STRING" newName="B" />
      <field signature="[Obfus1]cfg.ai.EKeyType VECTOR" newName="c" />
      <field signature="[Obfus1]cfg.ai.EKeyType ROTATOR" newName="C" />
      <field signature="[Obfus1]cfg.ai.EKeyType NAME" newName="d" />
      <field signature="[Obfus1]cfg.ai.EKeyType CLASS1" newName="D" />
      <field signature="[Obfus1]cfg.ai.EKeyType ENUM1" newName="e" />
      <field signature="[Obfus1]cfg.ai.EKeyType OBJECT" newName="E" />
    </type>
    <type fullName="cfg.ai.ENotifyObserverMode" newFullName="E.tB" status="Renamed">
      <field signature="[Obfus1]cfg.ai.ENotifyObserverMode ON_VALUE_CHANGE" newName="a" />
      <field signature="[Obfus1]cfg.ai.ENotifyObserverMode ON_RESULT_CHANGE" newName="A" />
    </type>
    <type fullName="cfg.ai.EOperator" newFullName="E.TB" status="Renamed">
      <field signature="[Obfus1]cfg.ai.EOperator IS_EQUAL_TO" newName="a" />
      <field signature="[Obfus1]cfg.ai.EOperator IS_NOT_EQUAL_TO" newName="A" />
      <field signature="[Obfus1]cfg.ai.EOperator IS_LESS_THAN" newName="b" />
      <field signature="[Obfus1]cfg.ai.EOperator IS_LESS_THAN_OR_EQUAL_TO" newName="B" />
      <field signature="[Obfus1]cfg.ai.EOperator IS_GREAT_THAN" newName="c" />
      <field signature="[Obfus1]cfg.ai.EOperator IS_GREAT_THAN_OR_EQUAL_TO" newName="C" />
      <field signature="[Obfus1]cfg.ai.EOperator CONTAINS" newName="d" />
      <field signature="[Obfus1]cfg.ai.EOperator NOT_CONTAINS" newName="D" />
    </type>
    <type fullName="cfg.ai.ExecuteTimeStatistic" newFullName="E.uB" status="Renamed">
      <field signature="int __ID__" newName="a" />
      <method signature="[Obfus1]cfg.ai.ExecuteTimeStatistic cfg.ai.ExecuteTimeStatistic::DeserializeExecuteTimeStatistic([Luban.Runtime]Luban.ByteBuf)" newName="A" oldStackTraceSignature="cfg.ai.ExecuteTimeStatistic:DeserializeExecuteTimeStatistic(ByteBuf)" newStackTraceSignature="E.uB:A(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.ExecuteTimeStatistic::ResolveRef([Obfus1]cfg.ai.ExecuteTimeStatistic, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.ExecuteTimeStatistic:ResolveRef(Tables)" newStackTraceSignature="E.uB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.FloatKeyData" newFullName="E.UB" status="Renamed">
      <field signature="float Value" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.ai.FloatKeyData cfg.ai.FloatKeyData::DeserializeFloatKeyData([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.ai.FloatKeyData:DeserializeFloatKeyData(ByteBuf)" newStackTraceSignature="E.UB:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.FloatKeyData::ResolveRef([Obfus1]cfg.ai.FloatKeyData, [Obfus1]cfg.Tables)" newName="B" oldStackTraceSignature="cfg.ai.FloatKeyData:ResolveRef(Tables)" newStackTraceSignature="E.UB:B(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.FlowNode" newFullName="E.vB" status="Renamed">
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.ai.Decorator&gt; Decorators" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.ai.Service&gt; Services" newName="A" />
      <method signature="[Obfus1]cfg.ai.FlowNode cfg.ai.FlowNode::DeserializeFlowNode([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.ai.FlowNode:DeserializeFlowNode(ByteBuf)" newStackTraceSignature="E.vB:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.FlowNode::ResolveRef([Obfus1]cfg.ai.FlowNode, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.FlowNode:ResolveRef(Tables)" newStackTraceSignature="E.vB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.GetOwnerPlayer" newFullName="E.VB" status="Renamed">
      <field signature="string PlayerActorKey" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.ai.GetOwnerPlayer cfg.ai.GetOwnerPlayer::DeserializeGetOwnerPlayer([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.ai.GetOwnerPlayer:DeserializeGetOwnerPlayer(ByteBuf)" newStackTraceSignature="E.VB:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.GetOwnerPlayer::ResolveRef([Obfus1]cfg.ai.GetOwnerPlayer, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.GetOwnerPlayer:ResolveRef(Tables)" newStackTraceSignature="E.VB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.IntKeyData" newFullName="E.wB" status="Renamed">
      <field signature="int Value" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.ai.IntKeyData cfg.ai.IntKeyData::DeserializeIntKeyData([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.ai.IntKeyData:DeserializeIntKeyData(ByteBuf)" newStackTraceSignature="E.wB:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.IntKeyData::ResolveRef([Obfus1]cfg.ai.IntKeyData, [Obfus1]cfg.Tables)" newName="B" oldStackTraceSignature="cfg.ai.IntKeyData:ResolveRef(Tables)" newStackTraceSignature="E.wB:B(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.IsAtLocation" newFullName="E.WB" status="Renamed">
      <field signature="float AcceptableRadius" newName="a" />
      <field signature="string KeyboardKey" newName="A" />
      <field signature="bool InverseCondition" newName="b" />
      <field signature="int __ID__" newName="B" />
      <method signature="[Obfus1]cfg.ai.IsAtLocation cfg.ai.IsAtLocation::DeserializeIsAtLocation([Luban.Runtime]Luban.ByteBuf)" newName="c" oldStackTraceSignature="cfg.ai.IsAtLocation:DeserializeIsAtLocation(ByteBuf)" newStackTraceSignature="E.WB:c(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.IsAtLocation::ResolveRef([Obfus1]cfg.ai.IsAtLocation, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.IsAtLocation:ResolveRef(Tables)" newStackTraceSignature="E.WB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.IsNotSet" newFullName="E.xB" status="Renamed">
      <field signature="int __ID__" newName="a" />
      <method signature="[Obfus1]cfg.ai.IsNotSet cfg.ai.IsNotSet::DeserializeIsNotSet([Luban.Runtime]Luban.ByteBuf)" newName="A" oldStackTraceSignature="cfg.ai.IsNotSet:DeserializeIsNotSet(ByteBuf)" newStackTraceSignature="E.xB:A(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.IsNotSet::ResolveRef([Obfus1]cfg.ai.IsNotSet, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.IsNotSet:ResolveRef(Tables)" newStackTraceSignature="E.xB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.IsSet2" newFullName="E.XB" status="Renamed">
      <field signature="int __ID__" newName="a" />
      <method signature="[Obfus1]cfg.ai.IsSet2 cfg.ai.IsSet2::DeserializeIsSet2([Luban.Runtime]Luban.ByteBuf)" newName="A" oldStackTraceSignature="cfg.ai.IsSet2:DeserializeIsSet2(ByteBuf)" newStackTraceSignature="E.XB:A(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.IsSet2::ResolveRef([Obfus1]cfg.ai.IsSet2, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.IsSet2:ResolveRef(Tables)" newStackTraceSignature="E.XB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.KeepFaceTarget" newFullName="E.yB" status="Renamed">
      <field signature="string TargetActorKey" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.ai.KeepFaceTarget cfg.ai.KeepFaceTarget::DeserializeKeepFaceTarget([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.ai.KeepFaceTarget:DeserializeKeepFaceTarget(ByteBuf)" newStackTraceSignature="E.yB:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.KeepFaceTarget::ResolveRef([Obfus1]cfg.ai.KeepFaceTarget, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.KeepFaceTarget:ResolveRef(Tables)" newStackTraceSignature="E.yB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.KeyData" newFullName="E.YB" status="Renamed">
      <method signature="[Obfus1]cfg.ai.KeyData cfg.ai.KeyData::DeserializeKeyData([Luban.Runtime]Luban.ByteBuf)" newName="a" oldStackTraceSignature="cfg.ai.KeyData:DeserializeKeyData(ByteBuf)" newStackTraceSignature="E.YB:a(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.KeyData::ResolveRef([Obfus1]cfg.ai.KeyData, [Obfus1]cfg.Tables)" newName="B" oldStackTraceSignature="cfg.ai.KeyData:ResolveRef(Tables)" newStackTraceSignature="E.YB:B(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.KeyQueryOperator" newFullName="E.zB" status="Renamed">
      <method signature="[Obfus1]cfg.ai.KeyQueryOperator cfg.ai.KeyQueryOperator::DeserializeKeyQueryOperator([Luban.Runtime]Luban.ByteBuf)" newName="a" oldStackTraceSignature="cfg.ai.KeyQueryOperator:DeserializeKeyQueryOperator(ByteBuf)" newStackTraceSignature="E.zB:a(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.KeyQueryOperator::ResolveRef([Obfus1]cfg.ai.KeyQueryOperator, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.KeyQueryOperator:ResolveRef(Tables)" newStackTraceSignature="E.zB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.MoveToLocation" newFullName="E.ZB" status="Renamed">
      <field signature="float AcceptableRadius" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.ai.MoveToLocation cfg.ai.MoveToLocation::DeserializeMoveToLocation([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.ai.MoveToLocation:DeserializeMoveToLocation(ByteBuf)" newStackTraceSignature="E.ZB:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.MoveToLocation::ResolveRef([Obfus1]cfg.ai.MoveToLocation, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.MoveToLocation:ResolveRef(Tables)" newStackTraceSignature="E.ZB:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.MoveToRandomLocation" newFullName="E.ac" status="Renamed">
      <field signature="string OriginPositionKey" newName="a" />
      <field signature="float Radius" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.ai.MoveToRandomLocation cfg.ai.MoveToRandomLocation::DeserializeMoveToRandomLocation([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.ai.MoveToRandomLocation:DeserializeMoveToRandomLocation(ByteBuf)" newStackTraceSignature="E.ac:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.MoveToRandomLocation::ResolveRef([Obfus1]cfg.ai.MoveToRandomLocation, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.MoveToRandomLocation:ResolveRef(Tables)" newStackTraceSignature="E.ac:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.MoveToTarget" newFullName="E.Ac" status="Renamed">
      <field signature="string TargetActorKey" newName="a" />
      <field signature="float AcceptableRadius" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.ai.MoveToTarget cfg.ai.MoveToTarget::DeserializeMoveToTarget([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.ai.MoveToTarget:DeserializeMoveToTarget(ByteBuf)" newStackTraceSignature="E.Ac:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.MoveToTarget::ResolveRef([Obfus1]cfg.ai.MoveToTarget, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.MoveToTarget:ResolveRef(Tables)" newStackTraceSignature="E.Ac:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.Node" newFullName="E.bc" status="Renamed">
      <field signature="int Id" newName="a" />
      <field signature="string NodeName" newName="A" />
      <method signature="[Obfus1]cfg.ai.Node cfg.ai.Node::DeserializeNode([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.ai.Node:DeserializeNode(ByteBuf)" newStackTraceSignature="E.bc:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.Node::ResolveRef([Obfus1]cfg.ai.Node, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.Node:ResolveRef(Tables)" newStackTraceSignature="E.bc:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.Selector" newFullName="E.Bc" status="Renamed">
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.ai.FlowNode&gt; Children" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.ai.Selector cfg.ai.Selector::DeserializeSelector([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.ai.Selector:DeserializeSelector(ByteBuf)" newStackTraceSignature="E.Bc:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.Selector::ResolveRef([Obfus1]cfg.ai.Selector, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.Selector:ResolveRef(Tables)" newStackTraceSignature="E.Bc:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.Sequence" newFullName="E.cc" status="Renamed">
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.ai.FlowNode&gt; Children" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.ai.Sequence cfg.ai.Sequence::DeserializeSequence([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.ai.Sequence:DeserializeSequence(ByteBuf)" newStackTraceSignature="E.cc:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.Sequence::ResolveRef([Obfus1]cfg.ai.Sequence, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.Sequence:ResolveRef(Tables)" newStackTraceSignature="E.cc:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.Service" newFullName="E.Cc" status="Renamed">
      <method signature="[Obfus1]cfg.ai.Service cfg.ai.Service::DeserializeService([Luban.Runtime]Luban.ByteBuf)" newName="a" oldStackTraceSignature="cfg.ai.Service:DeserializeService(ByteBuf)" newStackTraceSignature="E.Cc:a(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.Service::ResolveRef([Obfus1]cfg.ai.Service, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.Service:ResolveRef(Tables)" newStackTraceSignature="E.Cc:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.SimpleParallel" newFullName="E.dc" status="Renamed">
      <field signature="[Obfus1]cfg.ai.EFinishMode FinishMode" newName="a" />
      <field signature="[Obfus1]cfg.ai.Task MainTask" newName="A" />
      <field signature="[Obfus1]cfg.ai.FlowNode BackgroundNode" newName="b" />
      <field signature="int __ID__" newName="B" />
      <method signature="[Obfus1]cfg.ai.SimpleParallel cfg.ai.SimpleParallel::DeserializeSimpleParallel([Luban.Runtime]Luban.ByteBuf)" newName="c" oldStackTraceSignature="cfg.ai.SimpleParallel:DeserializeSimpleParallel(ByteBuf)" newStackTraceSignature="E.dc:c(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.SimpleParallel::ResolveRef([Obfus1]cfg.ai.SimpleParallel, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.SimpleParallel:ResolveRef(Tables)" newStackTraceSignature="E.dc:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.StringKeyData" newFullName="E.Dc" status="Renamed">
      <field signature="string Value" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.ai.StringKeyData cfg.ai.StringKeyData::DeserializeStringKeyData([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.ai.StringKeyData:DeserializeStringKeyData(ByteBuf)" newStackTraceSignature="E.Dc:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.StringKeyData::ResolveRef([Obfus1]cfg.ai.StringKeyData, [Obfus1]cfg.Tables)" newName="B" oldStackTraceSignature="cfg.ai.StringKeyData:ResolveRef(Tables)" newStackTraceSignature="E.Dc:B(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.Task" newFullName="E.ec" status="Renamed">
      <field signature="bool IgnoreRestartSelf" newName="a" />
      <method signature="[Obfus1]cfg.ai.Task cfg.ai.Task::DeserializeTask([Luban.Runtime]Luban.ByteBuf)" newName="A" oldStackTraceSignature="cfg.ai.Task:DeserializeTask(ByteBuf)" newStackTraceSignature="E.ec:A(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.Task::ResolveRef([Obfus1]cfg.ai.Task, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.Task:ResolveRef(Tables)" newStackTraceSignature="E.ec:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.TbBehaviorTree" newFullName="E.Ec" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.ai.BehaviorTree&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.ai.BehaviorTree&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.ai.BehaviorTree&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.ai.BehaviorTree&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.ai.BehaviorTree Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;int,[Obfus1]cfg.ai.BehaviorTree&gt; cfg.ai.TbBehaviorTree::get_DataMap([Obfus1]cfg.ai.TbBehaviorTree)" newName="b" oldStackTraceSignature="cfg.ai.TbBehaviorTree:get_DataMap()" newStackTraceSignature="E.Ec:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.ai.BehaviorTree&gt; cfg.ai.TbBehaviorTree::get_DataList([Obfus1]cfg.ai.TbBehaviorTree)" newName="B" oldStackTraceSignature="cfg.ai.TbBehaviorTree:get_DataList()" newStackTraceSignature="E.Ec:B()" />
      <method signature="[Obfus1]cfg.ai.BehaviorTree cfg.ai.TbBehaviorTree::GetOrDefault([Obfus1]cfg.ai.TbBehaviorTree, int)" newName="c" oldStackTraceSignature="cfg.ai.TbBehaviorTree:GetOrDefault(Int32)" newStackTraceSignature="E.Ec:c(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.ai.BehaviorTree cfg.ai.TbBehaviorTree::Get([Obfus1]cfg.ai.TbBehaviorTree, int)" newName="C" oldStackTraceSignature="cfg.ai.TbBehaviorTree:Get(Int32)" newStackTraceSignature="E.Ec:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.ai.BehaviorTree cfg.ai.TbBehaviorTree::get_Item([Obfus1]cfg.ai.TbBehaviorTree, int)" newName="d" oldStackTraceSignature="cfg.ai.TbBehaviorTree:get_Item(Int32)" newStackTraceSignature="E.Ec:d(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.TbBehaviorTree::ResolveRef([Obfus1]cfg.ai.TbBehaviorTree, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.ai.TbBehaviorTree:ResolveRef(Tables)" newStackTraceSignature="E.Ec:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.TbBlackboard" newFullName="E.fc" status="Renamed">
      <field signature="System.Collections.Generic.Dictionary`2&lt;string,[Obfus1]cfg.ai.Blackboard&gt; _dataMap" newName="a" />
      <field signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.ai.Blackboard&gt; _dataList" newName="A" />
      <property signature="System.Collections.Generic.Dictionary`2&lt;string,[Obfus1]cfg.ai.Blackboard&gt; DataMap" newName="e" />
      <property signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.ai.Blackboard&gt; DataList" newName="E" />
      <property signature="[Obfus1]cfg.ai.Blackboard Item" newName="f" />
      <method signature="System.Collections.Generic.Dictionary`2&lt;string,[Obfus1]cfg.ai.Blackboard&gt; cfg.ai.TbBlackboard::get_DataMap([Obfus1]cfg.ai.TbBlackboard)" newName="b" oldStackTraceSignature="cfg.ai.TbBlackboard:get_DataMap()" newStackTraceSignature="E.fc:b()" />
      <method signature="System.Collections.Generic.List`1&lt;[Obfus1]cfg.ai.Blackboard&gt; cfg.ai.TbBlackboard::get_DataList([Obfus1]cfg.ai.TbBlackboard)" newName="B" oldStackTraceSignature="cfg.ai.TbBlackboard:get_DataList()" newStackTraceSignature="E.fc:B()" />
      <method signature="[Obfus1]cfg.ai.Blackboard cfg.ai.TbBlackboard::GetOrDefault([Obfus1]cfg.ai.TbBlackboard, string)" newName="c" oldStackTraceSignature="cfg.ai.TbBlackboard:GetOrDefault(String)" newStackTraceSignature="E.fc:c(String)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.ai.Blackboard cfg.ai.TbBlackboard::Get([Obfus1]cfg.ai.TbBlackboard, string)" newName="C" oldStackTraceSignature="cfg.ai.TbBlackboard:Get(String)" newStackTraceSignature="E.fc:C(String)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]cfg.ai.Blackboard cfg.ai.TbBlackboard::get_Item([Obfus1]cfg.ai.TbBlackboard, string)" newName="d" oldStackTraceSignature="cfg.ai.TbBlackboard:get_Item(String)" newStackTraceSignature="E.fc:d(String)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.TbBlackboard::ResolveRef([Obfus1]cfg.ai.TbBlackboard, [Obfus1]cfg.Tables)" newName="D" oldStackTraceSignature="cfg.ai.TbBlackboard:ResolveRef(Tables)" newStackTraceSignature="E.fc:D(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.UeBlackboard" newFullName="E.Fc" status="Renamed">
      <field signature="[Obfus1]cfg.ai.ENotifyObserverMode NotifyObserver" newName="a" />
      <field signature="string BlackboardKey" newName="A" />
      <field signature="[Obfus1]cfg.ai.KeyQueryOperator KeyQuery" newName="b" />
      <field signature="int __ID__" newName="B" />
      <method signature="[Obfus1]cfg.ai.UeBlackboard cfg.ai.UeBlackboard::DeserializeUeBlackboard([Luban.Runtime]Luban.ByteBuf)" newName="c" oldStackTraceSignature="cfg.ai.UeBlackboard:DeserializeUeBlackboard(ByteBuf)" newStackTraceSignature="E.Fc:c(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.UeBlackboard::ResolveRef([Obfus1]cfg.ai.UeBlackboard, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.UeBlackboard:ResolveRef(Tables)" newStackTraceSignature="E.Fc:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.UeCooldown" newFullName="E.gc" status="Renamed">
      <field signature="float CooldownTime" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.ai.UeCooldown cfg.ai.UeCooldown::DeserializeUeCooldown([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.ai.UeCooldown:DeserializeUeCooldown(ByteBuf)" newStackTraceSignature="E.gc:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.UeCooldown::ResolveRef([Obfus1]cfg.ai.UeCooldown, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.UeCooldown:ResolveRef(Tables)" newStackTraceSignature="E.gc:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.UeForceSuccess" newFullName="E.Gc" status="Renamed">
      <field signature="int __ID__" newName="a" />
      <method signature="[Obfus1]cfg.ai.UeForceSuccess cfg.ai.UeForceSuccess::DeserializeUeForceSuccess([Luban.Runtime]Luban.ByteBuf)" newName="A" oldStackTraceSignature="cfg.ai.UeForceSuccess:DeserializeUeForceSuccess(ByteBuf)" newStackTraceSignature="E.Gc:A(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.UeForceSuccess::ResolveRef([Obfus1]cfg.ai.UeForceSuccess, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.UeForceSuccess:ResolveRef(Tables)" newStackTraceSignature="E.Gc:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.UeLoop" newFullName="E.hc" status="Renamed">
      <field signature="int NumLoops" newName="a" />
      <field signature="bool InfiniteLoop" newName="A" />
      <field signature="float InfiniteLoopTimeoutTime" newName="b" />
      <field signature="int __ID__" newName="B" />
      <method signature="[Obfus1]cfg.ai.UeLoop cfg.ai.UeLoop::DeserializeUeLoop([Luban.Runtime]Luban.ByteBuf)" newName="c" oldStackTraceSignature="cfg.ai.UeLoop:DeserializeUeLoop(ByteBuf)" newStackTraceSignature="E.hc:c(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.UeLoop::ResolveRef([Obfus1]cfg.ai.UeLoop, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.UeLoop:ResolveRef(Tables)" newStackTraceSignature="E.hc:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.UeSetDefaultFocus" newFullName="E.Hc" status="Renamed">
      <field signature="string KeyboardKey" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.ai.UeSetDefaultFocus cfg.ai.UeSetDefaultFocus::DeserializeUeSetDefaultFocus([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.ai.UeSetDefaultFocus:DeserializeUeSetDefaultFocus(ByteBuf)" newStackTraceSignature="E.Hc:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.UeSetDefaultFocus::ResolveRef([Obfus1]cfg.ai.UeSetDefaultFocus, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.UeSetDefaultFocus:ResolveRef(Tables)" newStackTraceSignature="E.Hc:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.UeTimeLimit" newFullName="E.ic" status="Renamed">
      <field signature="float LimitTime" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.ai.UeTimeLimit cfg.ai.UeTimeLimit::DeserializeUeTimeLimit([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.ai.UeTimeLimit:DeserializeUeTimeLimit(ByteBuf)" newStackTraceSignature="E.ic:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.UeTimeLimit::ResolveRef([Obfus1]cfg.ai.UeTimeLimit, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.UeTimeLimit:ResolveRef(Tables)" newStackTraceSignature="E.ic:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.UeWait" newFullName="E.Ic" status="Renamed">
      <field signature="float WaitTime" newName="a" />
      <field signature="float RandomDeviation" newName="A" />
      <field signature="int __ID__" newName="b" />
      <method signature="[Obfus1]cfg.ai.UeWait cfg.ai.UeWait::DeserializeUeWait([Luban.Runtime]Luban.ByteBuf)" newName="B" oldStackTraceSignature="cfg.ai.UeWait:DeserializeUeWait(ByteBuf)" newStackTraceSignature="E.Ic:B(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.UeWait::ResolveRef([Obfus1]cfg.ai.UeWait, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.UeWait:ResolveRef(Tables)" newStackTraceSignature="E.Ic:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.UeWaitBlackboardTime" newFullName="E.jc" status="Renamed">
      <field signature="string BlackboardKey" newName="a" />
      <field signature="int __ID__" newName="A" />
      <method signature="[Obfus1]cfg.ai.UeWaitBlackboardTime cfg.ai.UeWaitBlackboardTime::DeserializeUeWaitBlackboardTime([Luban.Runtime]Luban.ByteBuf)" newName="b" oldStackTraceSignature="cfg.ai.UeWaitBlackboardTime:DeserializeUeWaitBlackboardTime(ByteBuf)" newStackTraceSignature="E.jc:b(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.UeWaitBlackboardTime::ResolveRef([Obfus1]cfg.ai.UeWaitBlackboardTime, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.UeWaitBlackboardTime:ResolveRef(Tables)" newStackTraceSignature="E.jc:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="cfg.ai.UpdateDailyBehaviorProps" newFullName="E.Jc" status="Renamed">
      <field signature="string SatietyKey" newName="a" />
      <field signature="string EnergyKey" newName="A" />
      <field signature="string MoodKey" newName="b" />
      <field signature="string SatietyLowerThresholdKey" newName="B" />
      <field signature="string SatietyUpperThresholdKey" newName="c" />
      <field signature="string EnergyLowerThresholdKey" newName="C" />
      <field signature="string EnergyUpperThresholdKey" newName="d" />
      <field signature="string MoodLowerThresholdKey" newName="D" />
      <field signature="string MoodUpperThresholdKey" newName="e" />
      <field signature="int __ID__" newName="E" />
      <method signature="[Obfus1]cfg.ai.UpdateDailyBehaviorProps cfg.ai.UpdateDailyBehaviorProps::DeserializeUpdateDailyBehaviorProps([Luban.Runtime]Luban.ByteBuf)" newName="f" oldStackTraceSignature="cfg.ai.UpdateDailyBehaviorProps:DeserializeUpdateDailyBehaviorProps(ByteBuf)" newStackTraceSignature="E.Jc:f(ByteBuf)">
        <param index="1" newName="1" />
      </method>
      <method signature="void cfg.ai.UpdateDailyBehaviorProps::ResolveRef([Obfus1]cfg.ai.UpdateDailyBehaviorProps, [Obfus1]cfg.Tables)" newName="c" oldStackTraceSignature="cfg.ai.UpdateDailyBehaviorProps:ResolveRef(Tables)" newStackTraceSignature="E.Jc:c(R)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="&lt;PrivateImplementationDetails&gt;" newFullName="kc" status="Renamed">
      <field signature="[Obfus1]&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=9582 394BC1D7DD6839E27A3143855E8221BCA539EE9396E8CEF4F005B8F078B64856" newName="a" />
      <field signature="[Obfus1]&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=5190 A1508AD86765A1536313B966C66BCCFB760A1145045892551AD79FD21E9616F5" newName="A" />
    </type>
    <type fullName="&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=5190" newFullName="kc/Kc" status="Renamed" />
    <type fullName="&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=9582" newFullName="kc/lc" status="Renamed" />
  </assembly>
  <assembly name="Obfus2" newName="" status="NotRenamed">
    <type fullName="Banana" newFullName="" status="NotRenamed">
      <field signature="[Obfus1]Apple apple" newName="a" />
      <field signature="[Obfus1]Apple/AppleChild appleChild" newName="A" />
      <field signature="int &lt;Value&gt;k__BackingField" newName="b" />
      <field signature="System.Action OnFire" newName="B" />
      <property signature="int Value" newName="D" />
      <method signature="int Banana::get_Value([Obfus2]Banana)" newName="c" oldStackTraceSignature="Banana:get_Value()" newStackTraceSignature="Banana:c()" />
      <method signature="void Banana::set_Value([Obfus2]Banana, int)" newName="C" oldStackTraceSignature="Banana:set_Value(Int32)" newStackTraceSignature="Banana:C(Int32)">
        <param index="1" newName="1" />
      </method>
      <method signature="[Obfus1]Apple Banana::Foo([Obfus2]Banana, [Obfus2]Banana/BananaChild, [Obfus1]Apple, [Obfus1]Apple/AppleChild, int)" newName="d" oldStackTraceSignature="Banana:Foo(BananaChild, Apple, AppleChild, Int32)" newStackTraceSignature="Banana:d(a, b, B, Int32)">
        <param index="1" newName="1" />
        <param index="2" newName="1" />
        <param index="3" newName="1" />
        <param index="4" newName="1" />
      </method>
    </type>
    <type fullName="Banana/BananaChild" newFullName="Banana/a" status="Renamed">
      <field signature="int x" newName="a" />
    </type>
    <type fullName="Banana2" newFullName="A" status="Renamed">
      <method signature="int Banana2::One([Obfus2]Banana2)" newName="G" oldStackTraceSignature="Banana2:One()" newStackTraceSignature="A:G()" />
      <method signature="void Banana2::Fun2([Obfus2]Banana2, int)" newName="A" oldStackTraceSignature="Banana2:Fun2(Int32)" newStackTraceSignature="A:A(Int32)">
        <param index="1" newName="1" />
      </method>
    </type>
    <type fullName="TestAttributes" newFullName="b" status="Renamed">
      <field signature="int x1" newName="a" />
      <field signature="int x2" newName="A" />
      <field signature="int x3" newName="b" />
      <field signature="int x4" newName="B" />
      <field signature="int x5" newName="c" />
      <field signature="int b1" newName="C" />
      <field signature="int b2" newName="d" />
      <field signature="int c1" newName="D" />
      <field signature="int c2" newName="e" />
      <field signature="int c3" newName="E" />
      <field signature="int c4" newName="f" />
      <field signature="int c5" newName="F" />
      <field signature="int a1" newName="g" />
      <field signature="int a2" newName="G" />
      <field signature="int a3" newName="h" />
      <field signature="int a4" newName="H" />
      <field signature="int a5" newName="i" />
    </type>
    <type fullName="Obfus2.TestStackTrace" newFullName="F.g" status="Renamed">
      <method signature="void Obfus2.TestStackTrace::Stack1(long, ulong, float, double, string, object)" newName="a" oldStackTraceSignature="Obfus2.TestStackTrace:Stack1(Int64, UInt64, Single, Double, String, Object)" newStackTraceSignature="F.g:a(Int64, UInt64, Single, Double, String, Object)">
        <param index="1" newName="1" />
        <param index="2" newName="1" />
        <param index="3" newName="1" />
        <param index="4" newName="1" />
        <param index="5" newName="1" />
        <param index="6" newName="1" />
      </method>
      <method signature="void Obfus2.TestStackTrace::Stack3()" newName="A" oldStackTraceSignature="Obfus2.TestStackTrace:Stack3()" newStackTraceSignature="F.g:A()" />
      <method signature="void Obfus2.TestStackTrace::Stack0(byte, sbyte, short, ushort, int, uint)" newName="b" oldStackTraceSignature="Obfus2.TestStackTrace:Stack0(Byte, SByte, Int16, UInt16, Int32, UInt32)" newStackTraceSignature="F.g:b(Byte, SByte, Int16, UInt16, Int32, UInt32)">
        <param index="1" newName="1" />
        <param index="2" newName="1" />
        <param index="3" newName="1" />
        <param index="4" newName="1" />
        <param index="5" newName="1" />
        <param index="6" newName="1" />
      </method>
    </type>
    <type fullName="Obfus2.TestStackTrace/NestedClass`1" newFullName="F.g/G" status="Renamed">
      <method signature="void Obfus2.TestStackTrace/NestedClass`1::Stack2([Obfus2]Obfus2.TestStackTrace, int[], System.Collections.Generic.List`1&lt;int&gt;, [Obfus2]Banana)" newName="a" oldStackTraceSignature="Obfus2.NestedClass`1:Stack2(TestStackTrace, Int32[], List`1, Banana)" newStackTraceSignature="F.G:a(g, Int32[], List`1, Banana)">
        <param index="1" newName="1" />
        <param index="2" newName="1" />
        <param index="3" newName="1" />
        <param index="4" newName="1" />
      </method>
    </type>
    <type fullName="Obfus2.ObfuscateConst.ObfuscateBytes" newFullName="f.B" status="Renamed">
      <method signature="byte[] Obfus2.ObfuscateConst.ObfuscateBytes::GetByteArrayValue()" newName="a" oldStackTraceSignature="Obfus2.ObfuscateConst.ObfuscateBytes:GetByteArrayValue()" newStackTraceSignature="f.B:a()" />
      <method signature="int[] Obfus2.ObfuscateConst.ObfuscateBytes::GetIntArrayValue()" newName="A" oldStackTraceSignature="Obfus2.ObfuscateConst.ObfuscateBytes:GetIntArrayValue()" newStackTraceSignature="f.B:A()" />
    </type>
    <type fullName="Obfus2.ObfuscateConst.ObfuscateDouble" newFullName="f.c" status="Renamed">
      <method signature="double Obfus2.ObfuscateConst.ObfuscateDouble::GetSmallValue()" newName="a" oldStackTraceSignature="Obfus2.ObfuscateConst.ObfuscateDouble:GetSmallValue()" newStackTraceSignature="f.c:a()" />
      <method signature="double Obfus2.ObfuscateConst.ObfuscateDouble::GetBigValue()" newName="A" oldStackTraceSignature="Obfus2.ObfuscateConst.ObfuscateDouble:GetBigValue()" newStackTraceSignature="f.c:A()" />
    </type>
    <type fullName="Obfus2.ObfuscateConst.ObfuscateFloat" newFullName="f.C" status="Renamed">
      <method signature="float Obfus2.ObfuscateConst.ObfuscateFloat::GetSmallValue()" newName="a" oldStackTraceSignature="Obfus2.ObfuscateConst.ObfuscateFloat:GetSmallValue()" newStackTraceSignature="f.C:a()" />
      <method signature="float Obfus2.ObfuscateConst.ObfuscateFloat::GetBigValue()" newName="A" oldStackTraceSignature="Obfus2.ObfuscateConst.ObfuscateFloat:GetBigValue()" newStackTraceSignature="f.C:A()" />
    </type>
    <type fullName="Obfus2.ObfuscateConst.ObfuscateInt" newFullName="f.d" status="Renamed">
      <method signature="int Obfus2.ObfuscateConst.ObfuscateInt::GetSmallValue()" newName="a" oldStackTraceSignature="Obfus2.ObfuscateConst.ObfuscateInt:GetSmallValue()" newStackTraceSignature="f.d:a()" />
      <method signature="int Obfus2.ObfuscateConst.ObfuscateInt::GetBigValue()" newName="A" oldStackTraceSignature="Obfus2.ObfuscateConst.ObfuscateInt:GetBigValue()" newStackTraceSignature="f.d:A()" />
    </type>
    <type fullName="Obfus2.ObfuscateConst.ObfuscateLong" newFullName="f.D" status="Renamed">
      <method signature="long Obfus2.ObfuscateConst.ObfuscateLong::GetSmallValue()" newName="a" oldStackTraceSignature="Obfus2.ObfuscateConst.ObfuscateLong:GetSmallValue()" newStackTraceSignature="f.D:a()" />
      <method signature="long Obfus2.ObfuscateConst.ObfuscateLong::GetBigValue()" newName="A" oldStackTraceSignature="Obfus2.ObfuscateConst.ObfuscateLong:GetBigValue()" newStackTraceSignature="f.D:A()" />
    </type>
    <type fullName="Obfus2.ObfuscateConst.ObfuscateString" newFullName="f.e" status="Renamed">
      <method signature="string Obfus2.ObfuscateConst.ObfuscateString::GetSmallValue()" newName="a" oldStackTraceSignature="Obfus2.ObfuscateConst.ObfuscateString:GetSmallValue()" newStackTraceSignature="f.e:a()" />
      <method signature="string Obfus2.ObfuscateConst.ObfuscateString::GetBigValue()" newName="A" oldStackTraceSignature="Obfus2.ObfuscateConst.ObfuscateString:GetBigValue()" newStackTraceSignature="f.e:A()" />
    </type>
    <type fullName="&lt;PrivateImplementationDetails&gt;" newFullName="E" status="Renamed">
      <field signature="[Obfus2]&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=568 14B273F3C3420FE71A83A2CFE7343F80E7B6A1DADF8A9C09BBC3CD48A9309FD4" newName="A" />
      <field signature="[Obfus2]&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=10 1C5BFE0C176F7507BCBCD6ACE4A2F90C5535535521FD88D4E5470BB3A6D7059C" newName="a" />
      <field signature="[Obfus2]&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=40 C0DF548B3501529B7680AFCB696ADFDF392193C141695F7556A987736E197316" newName="B" />
      <field signature="[Obfus2]&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=476 DDFCA33925736400F45D9D162B0FB873F4E72691A7BC34A19F115B3C77AE94D5" newName="b" />
    </type>
    <type fullName="&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=10" newFullName="E/f" status="Renamed" />
    <type fullName="&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=40" newFullName="E/F" status="Renamed" />
    <type fullName="&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=476" newFullName="E/h" status="Renamed" />
    <type fullName="&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=568" newFullName="E/H" status="Renamed" />
  </assembly>
  <assembly name="Obfus3" newName="" status="NotRenamed" />
  <assembly name="Tests" newName="" status="NotRenamed" />
</mapping>